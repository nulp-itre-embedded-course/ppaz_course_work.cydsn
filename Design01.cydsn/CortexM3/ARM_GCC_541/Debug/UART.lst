ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"UART.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.UART_Init,"ax",%progbits
  20              		.align	2
  21              		.global	UART_Init
  22              		.thumb
  23              		.thumb_func
  24              		.type	UART_Init, %function
  25              	UART_Init:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC5\\UART.c"
   1:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/UART.c **** * File Name: UART.c
   3:Generated_Source\PSoC5/UART.c **** * Version 2.50
   4:Generated_Source\PSoC5/UART.c **** *
   5:Generated_Source\PSoC5/UART.c **** * Description:
   6:Generated_Source\PSoC5/UART.c **** *  This file provides all API functionality of the UART component
   7:Generated_Source\PSoC5/UART.c **** *
   8:Generated_Source\PSoC5/UART.c **** * Note:
   9:Generated_Source\PSoC5/UART.c **** *
  10:Generated_Source\PSoC5/UART.c **** ********************************************************************************
  11:Generated_Source\PSoC5/UART.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  12:Generated_Source\PSoC5/UART.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:Generated_Source\PSoC5/UART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:Generated_Source\PSoC5/UART.c **** * the software package with which this file was provided.
  15:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
  16:Generated_Source\PSoC5/UART.c **** 
  17:Generated_Source\PSoC5/UART.c **** #include "UART.h"
  18:Generated_Source\PSoC5/UART.c **** #if (UART_INTERNAL_CLOCK_USED)
  19:Generated_Source\PSoC5/UART.c ****     #include "UART_IntClock.h"
  20:Generated_Source\PSoC5/UART.c **** #endif /* End UART_INTERNAL_CLOCK_USED */
  21:Generated_Source\PSoC5/UART.c **** 
  22:Generated_Source\PSoC5/UART.c **** 
  23:Generated_Source\PSoC5/UART.c **** /***************************************
  24:Generated_Source\PSoC5/UART.c **** * Global data allocation
  25:Generated_Source\PSoC5/UART.c **** ***************************************/
  26:Generated_Source\PSoC5/UART.c **** 
  27:Generated_Source\PSoC5/UART.c **** uint8 UART_initVar = 0u;
  28:Generated_Source\PSoC5/UART.c **** 
  29:Generated_Source\PSoC5/UART.c **** #if (UART_TX_INTERRUPT_ENABLED && UART_TX_ENABLED)
  30:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_txBuffer[UART_TX_BUFFER_SIZE];
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 2


  31:Generated_Source\PSoC5/UART.c ****     volatile uint16 UART_txBufferRead = 0u;
  32:Generated_Source\PSoC5/UART.c ****     uint16 UART_txBufferWrite = 0u;
  33:Generated_Source\PSoC5/UART.c **** #endif /* (UART_TX_INTERRUPT_ENABLED && UART_TX_ENABLED) */
  34:Generated_Source\PSoC5/UART.c **** 
  35:Generated_Source\PSoC5/UART.c **** #if (UART_RX_INTERRUPT_ENABLED && (UART_RX_ENABLED || UART_HD_ENABLED))
  36:Generated_Source\PSoC5/UART.c ****     uint8 UART_errorStatus = 0u;
  37:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBuffer[UART_RX_BUFFER_SIZE];
  38:Generated_Source\PSoC5/UART.c ****     volatile uint16 UART_rxBufferRead  = 0u;
  39:Generated_Source\PSoC5/UART.c ****     volatile uint16 UART_rxBufferWrite = 0u;
  40:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBufferLoopDetect = 0u;
  41:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBufferOverflow   = 0u;
  42:Generated_Source\PSoC5/UART.c ****     #if (UART_RXHW_ADDRESS_ENABLED)
  43:Generated_Source\PSoC5/UART.c ****         volatile uint8 UART_rxAddressMode = UART_RX_ADDRESS_MODE;
  44:Generated_Source\PSoC5/UART.c ****         volatile uint8 UART_rxAddressDetected = 0u;
  45:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RXHW_ADDRESS_ENABLED) */
  46:Generated_Source\PSoC5/UART.c **** #endif /* (UART_RX_INTERRUPT_ENABLED && (UART_RX_ENABLED || UART_HD_ENABLED)) */
  47:Generated_Source\PSoC5/UART.c **** 
  48:Generated_Source\PSoC5/UART.c **** 
  49:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
  50:Generated_Source\PSoC5/UART.c **** * Function Name: UART_Start
  51:Generated_Source\PSoC5/UART.c **** ********************************************************************************
  52:Generated_Source\PSoC5/UART.c **** *
  53:Generated_Source\PSoC5/UART.c **** * Summary:
  54:Generated_Source\PSoC5/UART.c **** *  This is the preferred method to begin component operation.
  55:Generated_Source\PSoC5/UART.c **** *  UART_Start() sets the initVar variable, calls the
  56:Generated_Source\PSoC5/UART.c **** *  UART_Init() function, and then calls the
  57:Generated_Source\PSoC5/UART.c **** *  UART_Enable() function.
  58:Generated_Source\PSoC5/UART.c **** *
  59:Generated_Source\PSoC5/UART.c **** * Parameters:
  60:Generated_Source\PSoC5/UART.c **** *  None.
  61:Generated_Source\PSoC5/UART.c **** *
  62:Generated_Source\PSoC5/UART.c **** * Return:
  63:Generated_Source\PSoC5/UART.c **** *  None.
  64:Generated_Source\PSoC5/UART.c **** *
  65:Generated_Source\PSoC5/UART.c **** * Global variables:
  66:Generated_Source\PSoC5/UART.c **** *  The UART_intiVar variable is used to indicate initial
  67:Generated_Source\PSoC5/UART.c **** *  configuration of this component. The variable is initialized to zero (0u)
  68:Generated_Source\PSoC5/UART.c **** *  and set to one (1u) the first time UART_Start() is called. This
  69:Generated_Source\PSoC5/UART.c **** *  allows for component initialization without re-initialization in all
  70:Generated_Source\PSoC5/UART.c **** *  subsequent calls to the UART_Start() routine.
  71:Generated_Source\PSoC5/UART.c **** *
  72:Generated_Source\PSoC5/UART.c **** * Reentrant:
  73:Generated_Source\PSoC5/UART.c **** *  No.
  74:Generated_Source\PSoC5/UART.c **** *
  75:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
  76:Generated_Source\PSoC5/UART.c **** void UART_Start(void) 
  77:Generated_Source\PSoC5/UART.c **** {
  78:Generated_Source\PSoC5/UART.c ****     /* If not initialized then initialize all required hardware and software */
  79:Generated_Source\PSoC5/UART.c ****     if(UART_initVar == 0u)
  80:Generated_Source\PSoC5/UART.c ****     {
  81:Generated_Source\PSoC5/UART.c ****         UART_Init();
  82:Generated_Source\PSoC5/UART.c ****         UART_initVar = 1u;
  83:Generated_Source\PSoC5/UART.c ****     }
  84:Generated_Source\PSoC5/UART.c **** 
  85:Generated_Source\PSoC5/UART.c ****     UART_Enable();
  86:Generated_Source\PSoC5/UART.c **** }
  87:Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 3


  88:Generated_Source\PSoC5/UART.c **** 
  89:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
  90:Generated_Source\PSoC5/UART.c **** * Function Name: UART_Init
  91:Generated_Source\PSoC5/UART.c **** ********************************************************************************
  92:Generated_Source\PSoC5/UART.c **** *
  93:Generated_Source\PSoC5/UART.c **** * Summary:
  94:Generated_Source\PSoC5/UART.c **** *  Initializes or restores the component according to the customizer Configure
  95:Generated_Source\PSoC5/UART.c **** *  dialog settings. It is not necessary to call UART_Init() because
  96:Generated_Source\PSoC5/UART.c **** *  the UART_Start() API calls this function and is the preferred
  97:Generated_Source\PSoC5/UART.c **** *  method to begin component operation.
  98:Generated_Source\PSoC5/UART.c **** *
  99:Generated_Source\PSoC5/UART.c **** * Parameters:
 100:Generated_Source\PSoC5/UART.c **** *  None.
 101:Generated_Source\PSoC5/UART.c **** *
 102:Generated_Source\PSoC5/UART.c **** * Return:
 103:Generated_Source\PSoC5/UART.c **** *  None.
 104:Generated_Source\PSoC5/UART.c **** *
 105:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 106:Generated_Source\PSoC5/UART.c **** void UART_Init(void) 
 107:Generated_Source\PSoC5/UART.c **** {
  28              		.loc 1 107 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 3, -8
  35              		.cfi_offset 14, -4
 108:Generated_Source\PSoC5/UART.c ****     #if(UART_RX_ENABLED || UART_HD_ENABLED)
 109:Generated_Source\PSoC5/UART.c **** 
 110:Generated_Source\PSoC5/UART.c ****         #if (UART_RX_INTERRUPT_ENABLED)
 111:Generated_Source\PSoC5/UART.c ****             /* Set RX interrupt vector and priority */
 112:Generated_Source\PSoC5/UART.c ****             (void) CyIntSetVector(UART_RX_VECT_NUM, &UART_RXISR);
  36              		.loc 1 112 0
  37 0002 1149     		ldr	r1, .L3
  38 0004 0020     		movs	r0, #0
  39 0006 FFF7FEFF 		bl	CyIntSetVector
  40              	.LVL0:
 113:Generated_Source\PSoC5/UART.c ****             CyIntSetPriority(UART_RX_VECT_NUM, UART_RX_PRIOR_NUM);
  41              		.loc 1 113 0
  42 000a 0721     		movs	r1, #7
  43 000c 0020     		movs	r0, #0
  44 000e FFF7FEFF 		bl	CyIntSetPriority
  45              	.LVL1:
 114:Generated_Source\PSoC5/UART.c ****             UART_errorStatus = 0u;
  46              		.loc 1 114 0
  47 0012 0022     		movs	r2, #0
  48 0014 0D4B     		ldr	r3, .L3+4
  49 0016 1A70     		strb	r2, [r3]
 115:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_RX_INTERRUPT_ENABLED) */
 116:Generated_Source\PSoC5/UART.c **** 
 117:Generated_Source\PSoC5/UART.c ****         #if (UART_RXHW_ADDRESS_ENABLED)
 118:Generated_Source\PSoC5/UART.c ****             UART_SetRxAddressMode(UART_RX_ADDRESS_MODE);
 119:Generated_Source\PSoC5/UART.c ****             UART_SetRxAddress1(UART_RX_HW_ADDRESS1);
 120:Generated_Source\PSoC5/UART.c ****             UART_SetRxAddress2(UART_RX_HW_ADDRESS2);
 121:Generated_Source\PSoC5/UART.c ****         #endif /* End UART_RXHW_ADDRESS_ENABLED */
 122:Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 4


 123:Generated_Source\PSoC5/UART.c ****         /* Init Count7 period */
 124:Generated_Source\PSoC5/UART.c ****         UART_RXBITCTR_PERIOD_REG = UART_RXBITCTR_INIT;
  50              		.loc 1 124 0
  51 0018 7222     		movs	r2, #114
  52 001a 0D4B     		ldr	r3, .L3+8
  53 001c 1A70     		strb	r2, [r3]
 125:Generated_Source\PSoC5/UART.c ****         /* Configure the Initial RX interrupt mask */
 126:Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_MASK_REG  = UART_INIT_RX_INTERRUPTS_MASK;
  54              		.loc 1 126 0
  55 001e 2022     		movs	r2, #32
  56 0020 0333     		adds	r3, r3, #3
  57 0022 1A70     		strb	r2, [r3]
 127:Generated_Source\PSoC5/UART.c ****     #endif /* End UART_RX_ENABLED || UART_HD_ENABLED*/
 128:Generated_Source\PSoC5/UART.c **** 
 129:Generated_Source\PSoC5/UART.c ****     #if(UART_TX_ENABLED)
 130:Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 131:Generated_Source\PSoC5/UART.c ****             /* Set TX interrupt vector and priority */
 132:Generated_Source\PSoC5/UART.c ****             (void) CyIntSetVector(UART_TX_VECT_NUM, &UART_TXISR);
  58              		.loc 1 132 0
  59 0024 0B49     		ldr	r1, .L3+12
  60 0026 0120     		movs	r0, #1
  61 0028 FFF7FEFF 		bl	CyIntSetVector
  62              	.LVL2:
 133:Generated_Source\PSoC5/UART.c ****             CyIntSetPriority(UART_TX_VECT_NUM, UART_TX_PRIOR_NUM);
  63              		.loc 1 133 0
  64 002c 0721     		movs	r1, #7
  65 002e 0120     		movs	r0, #1
  66 0030 FFF7FEFF 		bl	CyIntSetPriority
  67              	.LVL3:
 134:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_INTERRUPT_ENABLED) */
 135:Generated_Source\PSoC5/UART.c **** 
 136:Generated_Source\PSoC5/UART.c ****         /* Write Counter Value for TX Bit Clk Generator*/
 137:Generated_Source\PSoC5/UART.c ****         #if (UART_TXCLKGEN_DP)
 138:Generated_Source\PSoC5/UART.c ****             UART_TXBITCLKGEN_CTR_REG = UART_BIT_CENTER;
  68              		.loc 1 138 0
  69 0034 0622     		movs	r2, #6
  70 0036 084B     		ldr	r3, .L3+16
  71 0038 1A70     		strb	r2, [r3]
 139:Generated_Source\PSoC5/UART.c ****             UART_TXBITCLKTX_COMPLETE_REG = ((UART_NUMBER_OF_DATA_BITS +
  72              		.loc 1 139 0
  73 003a 4722     		movs	r2, #71
  74 003c 1033     		adds	r3, r3, #16
  75 003e 1A70     		strb	r2, [r3]
 140:Generated_Source\PSoC5/UART.c ****                         UART_NUMBER_OF_START_BIT) * UART_OVER_SAMPLE_COUNT) - 1u;
 141:Generated_Source\PSoC5/UART.c ****         #else
 142:Generated_Source\PSoC5/UART.c ****             UART_TXBITCTR_PERIOD_REG = ((UART_NUMBER_OF_DATA_BITS +
 143:Generated_Source\PSoC5/UART.c ****                         UART_NUMBER_OF_START_BIT) * UART_OVER_SAMPLE_8) - 1u;
 144:Generated_Source\PSoC5/UART.c ****         #endif /* End UART_TXCLKGEN_DP */
 145:Generated_Source\PSoC5/UART.c **** 
 146:Generated_Source\PSoC5/UART.c ****         /* Configure the Initial TX interrupt mask */
 147:Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 148:Generated_Source\PSoC5/UART.c ****             UART_TXSTATUS_MASK_REG = UART_TX_STS_FIFO_EMPTY;
  76              		.loc 1 148 0
  77 0040 0222     		movs	r2, #2
  78 0042 4F33     		adds	r3, r3, #79
  79 0044 1A70     		strb	r2, [r3]
  80 0046 08BD     		pop	{r3, pc}
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 5


  81              	.L4:
  82              		.align	2
  83              	.L3:
  84 0048 00000000 		.word	UART_RXISR
  85 004c 00000000 		.word	.LANCHOR0
  86 0050 88650040 		.word	1073767816
  87 0054 00000000 		.word	UART_TXISR
  88 0058 29640040 		.word	1073767465
  89              		.cfi_endproc
  90              	.LFE1:
  91              		.size	UART_Init, .-UART_Init
  92              		.section	.text.UART_Enable,"ax",%progbits
  93              		.align	2
  94              		.global	UART_Enable
  95              		.thumb
  96              		.thumb_func
  97              		.type	UART_Enable, %function
  98              	UART_Enable:
  99              	.LFB2:
 149:Generated_Source\PSoC5/UART.c ****         #else
 150:Generated_Source\PSoC5/UART.c ****             UART_TXSTATUS_MASK_REG = UART_INIT_TX_INTERRUPTS_MASK;
 151:Generated_Source\PSoC5/UART.c ****         #endif /*End UART_TX_INTERRUPT_ENABLED*/
 152:Generated_Source\PSoC5/UART.c **** 
 153:Generated_Source\PSoC5/UART.c ****     #endif /* End UART_TX_ENABLED */
 154:Generated_Source\PSoC5/UART.c **** 
 155:Generated_Source\PSoC5/UART.c ****     #if(UART_PARITY_TYPE_SW)  /* Write Parity to Control Register */
 156:Generated_Source\PSoC5/UART.c ****         UART_WriteControlRegister( \
 157:Generated_Source\PSoC5/UART.c ****             (UART_ReadControlRegister() & (uint8)~UART_CTRL_PARITY_TYPE_MASK) | \
 158:Generated_Source\PSoC5/UART.c ****             (uint8)(UART_PARITY_TYPE << UART_CTRL_PARITY_TYPE0_SHIFT) );
 159:Generated_Source\PSoC5/UART.c ****     #endif /* End UART_PARITY_TYPE_SW */
 160:Generated_Source\PSoC5/UART.c **** }
 161:Generated_Source\PSoC5/UART.c **** 
 162:Generated_Source\PSoC5/UART.c **** 
 163:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 164:Generated_Source\PSoC5/UART.c **** * Function Name: UART_Enable
 165:Generated_Source\PSoC5/UART.c **** ********************************************************************************
 166:Generated_Source\PSoC5/UART.c **** *
 167:Generated_Source\PSoC5/UART.c **** * Summary:
 168:Generated_Source\PSoC5/UART.c **** *  Activates the hardware and begins component operation. It is not necessary
 169:Generated_Source\PSoC5/UART.c **** *  to call UART_Enable() because the UART_Start() API
 170:Generated_Source\PSoC5/UART.c **** *  calls this function, which is the preferred method to begin component
 171:Generated_Source\PSoC5/UART.c **** *  operation.
 172:Generated_Source\PSoC5/UART.c **** 
 173:Generated_Source\PSoC5/UART.c **** * Parameters:
 174:Generated_Source\PSoC5/UART.c **** *  None.
 175:Generated_Source\PSoC5/UART.c **** *
 176:Generated_Source\PSoC5/UART.c **** * Return:
 177:Generated_Source\PSoC5/UART.c **** *  None.
 178:Generated_Source\PSoC5/UART.c **** *
 179:Generated_Source\PSoC5/UART.c **** * Global Variables:
 180:Generated_Source\PSoC5/UART.c **** *  UART_rxAddressDetected - set to initial state (0).
 181:Generated_Source\PSoC5/UART.c **** *
 182:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 183:Generated_Source\PSoC5/UART.c **** void UART_Enable(void) 
 184:Generated_Source\PSoC5/UART.c **** {
 100              		.loc 1 184 0
 101              		.cfi_startproc
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 6


 102              		@ args = 0, pretend = 0, frame = 0
 103              		@ frame_needed = 0, uses_anonymous_args = 0
 104 0000 10B5     		push	{r4, lr}
 105              		.cfi_def_cfa_offset 8
 106              		.cfi_offset 4, -8
 107              		.cfi_offset 14, -4
 185:Generated_Source\PSoC5/UART.c ****     uint8 enableInterrupts;
 186:Generated_Source\PSoC5/UART.c ****     enableInterrupts = CyEnterCriticalSection();
 108              		.loc 1 186 0
 109 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 110              	.LVL4:
 111 0006 0446     		mov	r4, r0
 112              	.LVL5:
 187:Generated_Source\PSoC5/UART.c **** 
 188:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_ENABLED || UART_HD_ENABLED)
 189:Generated_Source\PSoC5/UART.c ****         /* RX Counter (Count7) Enable */
 190:Generated_Source\PSoC5/UART.c ****         UART_RXBITCTR_CONTROL_REG |= UART_CNTR_ENABLE;
 113              		.loc 1 190 0
 114 0008 0D4A     		ldr	r2, .L7
 115 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 116 000c 43F02003 		orr	r3, r3, #32
 117 0010 1370     		strb	r3, [r2]
 191:Generated_Source\PSoC5/UART.c **** 
 192:Generated_Source\PSoC5/UART.c ****         /* Enable the RX Interrupt */
 193:Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_ACTL_REG  |= UART_INT_ENABLE;
 118              		.loc 1 193 0
 119 0012 0332     		adds	r2, r2, #3
 120 0014 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 121 0016 43F01003 		orr	r3, r3, #16
 122 001a 1370     		strb	r3, [r2]
 194:Generated_Source\PSoC5/UART.c **** 
 195:Generated_Source\PSoC5/UART.c ****         #if (UART_RX_INTERRUPT_ENABLED)
 196:Generated_Source\PSoC5/UART.c ****             UART_EnableRxInt();
 123              		.loc 1 196 0
 124 001c 094A     		ldr	r2, .L7+4
 125 001e 0123     		movs	r3, #1
 126 0020 1360     		str	r3, [r2]
 197:Generated_Source\PSoC5/UART.c **** 
 198:Generated_Source\PSoC5/UART.c ****             #if (UART_RXHW_ADDRESS_ENABLED)
 199:Generated_Source\PSoC5/UART.c ****                 UART_rxAddressDetected = 0u;
 200:Generated_Source\PSoC5/UART.c ****             #endif /* (UART_RXHW_ADDRESS_ENABLED) */
 201:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_RX_INTERRUPT_ENABLED) */
 202:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_ENABLED || UART_HD_ENABLED) */
 203:Generated_Source\PSoC5/UART.c **** 
 204:Generated_Source\PSoC5/UART.c ****     #if(UART_TX_ENABLED)
 205:Generated_Source\PSoC5/UART.c ****         /* TX Counter (DP/Count7) Enable */
 206:Generated_Source\PSoC5/UART.c ****         #if(!UART_TXCLKGEN_DP)
 207:Generated_Source\PSoC5/UART.c ****             UART_TXBITCTR_CONTROL_REG |= UART_CNTR_ENABLE;
 208:Generated_Source\PSoC5/UART.c ****         #endif /* End UART_TXCLKGEN_DP */
 209:Generated_Source\PSoC5/UART.c **** 
 210:Generated_Source\PSoC5/UART.c ****         /* Enable the TX Interrupt */
 211:Generated_Source\PSoC5/UART.c ****         UART_TXSTATUS_ACTL_REG |= UART_INT_ENABLE;
 127              		.loc 1 211 0
 128 0022 0949     		ldr	r1, .L7+8
 129 0024 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 130 0026 43F01003 		orr	r3, r3, #16
 131 002a 0B70     		strb	r3, [r1]
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 7


 212:Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 213:Generated_Source\PSoC5/UART.c ****             UART_ClearPendingTxInt(); /* Clear history of TX_NOT_EMPTY */
 132              		.loc 1 213 0
 133 002c 0223     		movs	r3, #2
 134 002e 0749     		ldr	r1, .L7+12
 135 0030 0B60     		str	r3, [r1]
 214:Generated_Source\PSoC5/UART.c ****             UART_EnableTxInt();
 136              		.loc 1 214 0
 137 0032 1360     		str	r3, [r2]
 215:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_INTERRUPT_ENABLED) */
 216:Generated_Source\PSoC5/UART.c ****      #endif /* (UART_TX_INTERRUPT_ENABLED) */
 217:Generated_Source\PSoC5/UART.c **** 
 218:Generated_Source\PSoC5/UART.c ****     #if (UART_INTERNAL_CLOCK_USED)
 219:Generated_Source\PSoC5/UART.c ****         UART_IntClock_Start();  /* Enable the clock */
 138              		.loc 1 219 0
 139 0034 FFF7FEFF 		bl	UART_IntClock_Start
 140              	.LVL6:
 220:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_INTERNAL_CLOCK_USED) */
 221:Generated_Source\PSoC5/UART.c **** 
 222:Generated_Source\PSoC5/UART.c ****     CyExitCriticalSection(enableInterrupts);
 141              		.loc 1 222 0
 142 0038 2046     		mov	r0, r4
 143 003a FFF7FEFF 		bl	CyExitCriticalSection
 144              	.LVL7:
 145 003e 10BD     		pop	{r4, pc}
 146              	.LVL8:
 147              	.L8:
 148              		.align	2
 149              	.L7:
 150 0040 98650040 		.word	1073767832
 151 0044 00E100E0 		.word	-536813312
 152 0048 98640040 		.word	1073767576
 153 004c 80E200E0 		.word	-536812928
 154              		.cfi_endproc
 155              	.LFE2:
 156              		.size	UART_Enable, .-UART_Enable
 157              		.section	.text.UART_Start,"ax",%progbits
 158              		.align	2
 159              		.global	UART_Start
 160              		.thumb
 161              		.thumb_func
 162              		.type	UART_Start, %function
 163              	UART_Start:
 164              	.LFB0:
  77:Generated_Source\PSoC5/UART.c ****     /* If not initialized then initialize all required hardware and software */
 165              		.loc 1 77 0
 166              		.cfi_startproc
 167              		@ args = 0, pretend = 0, frame = 0
 168              		@ frame_needed = 0, uses_anonymous_args = 0
 169 0000 08B5     		push	{r3, lr}
 170              		.cfi_def_cfa_offset 8
 171              		.cfi_offset 3, -8
 172              		.cfi_offset 14, -4
  79:Generated_Source\PSoC5/UART.c ****     {
 173              		.loc 1 79 0
 174 0002 054B     		ldr	r3, .L12
 175 0004 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 8


 176 0006 23B9     		cbnz	r3, .L10
  81:Generated_Source\PSoC5/UART.c ****         UART_initVar = 1u;
 177              		.loc 1 81 0
 178 0008 FFF7FEFF 		bl	UART_Init
 179              	.LVL9:
  82:Generated_Source\PSoC5/UART.c ****     }
 180              		.loc 1 82 0
 181 000c 0122     		movs	r2, #1
 182 000e 024B     		ldr	r3, .L12
 183 0010 5A70     		strb	r2, [r3, #1]
 184              	.L10:
  85:Generated_Source\PSoC5/UART.c **** }
 185              		.loc 1 85 0
 186 0012 FFF7FEFF 		bl	UART_Enable
 187              	.LVL10:
 188 0016 08BD     		pop	{r3, pc}
 189              	.L13:
 190              		.align	2
 191              	.L12:
 192 0018 00000000 		.word	.LANCHOR0
 193              		.cfi_endproc
 194              	.LFE0:
 195              		.size	UART_Start, .-UART_Start
 196              		.section	.text.UART_Stop,"ax",%progbits
 197              		.align	2
 198              		.global	UART_Stop
 199              		.thumb
 200              		.thumb_func
 201              		.type	UART_Stop, %function
 202              	UART_Stop:
 203              	.LFB3:
 223:Generated_Source\PSoC5/UART.c **** }
 224:Generated_Source\PSoC5/UART.c **** 
 225:Generated_Source\PSoC5/UART.c **** 
 226:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 227:Generated_Source\PSoC5/UART.c **** * Function Name: UART_Stop
 228:Generated_Source\PSoC5/UART.c **** ********************************************************************************
 229:Generated_Source\PSoC5/UART.c **** *
 230:Generated_Source\PSoC5/UART.c **** * Summary:
 231:Generated_Source\PSoC5/UART.c **** *  Disables the UART operation.
 232:Generated_Source\PSoC5/UART.c **** *
 233:Generated_Source\PSoC5/UART.c **** * Parameters:
 234:Generated_Source\PSoC5/UART.c **** *  None.
 235:Generated_Source\PSoC5/UART.c **** *
 236:Generated_Source\PSoC5/UART.c **** * Return:
 237:Generated_Source\PSoC5/UART.c **** *  None.
 238:Generated_Source\PSoC5/UART.c **** *
 239:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 240:Generated_Source\PSoC5/UART.c **** void UART_Stop(void) 
 241:Generated_Source\PSoC5/UART.c **** {
 204              		.loc 1 241 0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
 207              		@ frame_needed = 0, uses_anonymous_args = 0
 208 0000 10B5     		push	{r4, lr}
 209              		.cfi_def_cfa_offset 8
 210              		.cfi_offset 4, -8
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 9


 211              		.cfi_offset 14, -4
 242:Generated_Source\PSoC5/UART.c ****     uint8 enableInterrupts;
 243:Generated_Source\PSoC5/UART.c ****     enableInterrupts = CyEnterCriticalSection();
 212              		.loc 1 243 0
 213 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 214              	.LVL11:
 215 0006 0446     		mov	r4, r0
 216              	.LVL12:
 244:Generated_Source\PSoC5/UART.c **** 
 245:Generated_Source\PSoC5/UART.c ****     /* Write Bit Counter Disable */
 246:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_ENABLED || UART_HD_ENABLED)
 247:Generated_Source\PSoC5/UART.c ****         UART_RXBITCTR_CONTROL_REG &= (uint8) ~UART_CNTR_ENABLE;
 217              		.loc 1 247 0
 218 0008 0C4A     		ldr	r2, .L16
 219 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 220 000c 03F0DF03 		and	r3, r3, #223
 221 0010 1370     		strb	r3, [r2]
 248:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_ENABLED || UART_HD_ENABLED) */
 249:Generated_Source\PSoC5/UART.c **** 
 250:Generated_Source\PSoC5/UART.c ****     #if (UART_TX_ENABLED)
 251:Generated_Source\PSoC5/UART.c ****         #if(!UART_TXCLKGEN_DP)
 252:Generated_Source\PSoC5/UART.c ****             UART_TXBITCTR_CONTROL_REG &= (uint8) ~UART_CNTR_ENABLE;
 253:Generated_Source\PSoC5/UART.c ****         #endif /* (!UART_TXCLKGEN_DP) */
 254:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_TX_ENABLED) */
 255:Generated_Source\PSoC5/UART.c **** 
 256:Generated_Source\PSoC5/UART.c ****     #if (UART_INTERNAL_CLOCK_USED)
 257:Generated_Source\PSoC5/UART.c ****         UART_IntClock_Stop();   /* Disable the clock */
 222              		.loc 1 257 0
 223 0012 FFF7FEFF 		bl	UART_IntClock_Stop
 224              	.LVL13:
 258:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_INTERNAL_CLOCK_USED) */
 259:Generated_Source\PSoC5/UART.c **** 
 260:Generated_Source\PSoC5/UART.c ****     /* Disable internal interrupt component */
 261:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_ENABLED || UART_HD_ENABLED)
 262:Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_ACTL_REG  &= (uint8) ~UART_INT_ENABLE;
 225              		.loc 1 262 0
 226 0016 0A4A     		ldr	r2, .L16+4
 227 0018 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 228 001a 03F0EF03 		and	r3, r3, #239
 229 001e 1370     		strb	r3, [r2]
 263:Generated_Source\PSoC5/UART.c **** 
 264:Generated_Source\PSoC5/UART.c ****         #if (UART_RX_INTERRUPT_ENABLED)
 265:Generated_Source\PSoC5/UART.c ****             UART_DisableRxInt();
 230              		.loc 1 265 0
 231 0020 084A     		ldr	r2, .L16+8
 232 0022 0123     		movs	r3, #1
 233 0024 1360     		str	r3, [r2]
 266:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_RX_INTERRUPT_ENABLED) */
 267:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_ENABLED || UART_HD_ENABLED) */
 268:Generated_Source\PSoC5/UART.c **** 
 269:Generated_Source\PSoC5/UART.c ****     #if (UART_TX_ENABLED)
 270:Generated_Source\PSoC5/UART.c ****         UART_TXSTATUS_ACTL_REG &= (uint8) ~UART_INT_ENABLE;
 234              		.loc 1 270 0
 235 0026 0849     		ldr	r1, .L16+12
 236 0028 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 237 002a 03F0EF03 		and	r3, r3, #239
 238 002e 0B70     		strb	r3, [r1]
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 10


 271:Generated_Source\PSoC5/UART.c **** 
 272:Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 273:Generated_Source\PSoC5/UART.c ****             UART_DisableTxInt();
 239              		.loc 1 273 0
 240 0030 0223     		movs	r3, #2
 241 0032 1360     		str	r3, [r2]
 274:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_INTERRUPT_ENABLED) */
 275:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_TX_ENABLED) */
 276:Generated_Source\PSoC5/UART.c **** 
 277:Generated_Source\PSoC5/UART.c ****     CyExitCriticalSection(enableInterrupts);
 242              		.loc 1 277 0
 243 0034 2046     		mov	r0, r4
 244 0036 FFF7FEFF 		bl	CyExitCriticalSection
 245              	.LVL14:
 246 003a 10BD     		pop	{r4, pc}
 247              	.LVL15:
 248              	.L17:
 249              		.align	2
 250              	.L16:
 251 003c 98650040 		.word	1073767832
 252 0040 9B650040 		.word	1073767835
 253 0044 80E100E0 		.word	-536813184
 254 0048 98640040 		.word	1073767576
 255              		.cfi_endproc
 256              	.LFE3:
 257              		.size	UART_Stop, .-UART_Stop
 258              		.section	.text.UART_ReadControlRegister,"ax",%progbits
 259              		.align	2
 260              		.global	UART_ReadControlRegister
 261              		.thumb
 262              		.thumb_func
 263              		.type	UART_ReadControlRegister, %function
 264              	UART_ReadControlRegister:
 265              	.LFB4:
 278:Generated_Source\PSoC5/UART.c **** }
 279:Generated_Source\PSoC5/UART.c **** 
 280:Generated_Source\PSoC5/UART.c **** 
 281:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 282:Generated_Source\PSoC5/UART.c **** * Function Name: UART_ReadControlRegister
 283:Generated_Source\PSoC5/UART.c **** ********************************************************************************
 284:Generated_Source\PSoC5/UART.c **** *
 285:Generated_Source\PSoC5/UART.c **** * Summary:
 286:Generated_Source\PSoC5/UART.c **** *  Returns the current value of the control register.
 287:Generated_Source\PSoC5/UART.c **** *
 288:Generated_Source\PSoC5/UART.c **** * Parameters:
 289:Generated_Source\PSoC5/UART.c **** *  None.
 290:Generated_Source\PSoC5/UART.c **** *
 291:Generated_Source\PSoC5/UART.c **** * Return:
 292:Generated_Source\PSoC5/UART.c **** *  Contents of the control register.
 293:Generated_Source\PSoC5/UART.c **** *
 294:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 295:Generated_Source\PSoC5/UART.c **** uint8 UART_ReadControlRegister(void) 
 296:Generated_Source\PSoC5/UART.c **** {
 266              		.loc 1 296 0
 267              		.cfi_startproc
 268              		@ args = 0, pretend = 0, frame = 0
 269              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 11


 270              		@ link register save eliminated.
 297:Generated_Source\PSoC5/UART.c ****     #if (UART_CONTROL_REG_REMOVED)
 298:Generated_Source\PSoC5/UART.c ****         return(0u);
 299:Generated_Source\PSoC5/UART.c ****     #else
 300:Generated_Source\PSoC5/UART.c ****         return(UART_CONTROL_REG);
 301:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_CONTROL_REG_REMOVED) */
 302:Generated_Source\PSoC5/UART.c **** }
 271              		.loc 1 302 0
 272 0000 0020     		movs	r0, #0
 273 0002 7047     		bx	lr
 274              		.cfi_endproc
 275              	.LFE4:
 276              		.size	UART_ReadControlRegister, .-UART_ReadControlRegister
 277              		.section	.text.UART_WriteControlRegister,"ax",%progbits
 278              		.align	2
 279              		.global	UART_WriteControlRegister
 280              		.thumb
 281              		.thumb_func
 282              		.type	UART_WriteControlRegister, %function
 283              	UART_WriteControlRegister:
 284              	.LFB5:
 303:Generated_Source\PSoC5/UART.c **** 
 304:Generated_Source\PSoC5/UART.c **** 
 305:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 306:Generated_Source\PSoC5/UART.c **** * Function Name: UART_WriteControlRegister
 307:Generated_Source\PSoC5/UART.c **** ********************************************************************************
 308:Generated_Source\PSoC5/UART.c **** *
 309:Generated_Source\PSoC5/UART.c **** * Summary:
 310:Generated_Source\PSoC5/UART.c **** *  Writes an 8-bit value into the control register
 311:Generated_Source\PSoC5/UART.c **** *
 312:Generated_Source\PSoC5/UART.c **** * Parameters:
 313:Generated_Source\PSoC5/UART.c **** *  control:  control register value
 314:Generated_Source\PSoC5/UART.c **** *
 315:Generated_Source\PSoC5/UART.c **** * Return:
 316:Generated_Source\PSoC5/UART.c **** *  None.
 317:Generated_Source\PSoC5/UART.c **** *
 318:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 319:Generated_Source\PSoC5/UART.c **** void  UART_WriteControlRegister(uint8 control) 
 320:Generated_Source\PSoC5/UART.c **** {
 285              		.loc 1 320 0
 286              		.cfi_startproc
 287              		@ args = 0, pretend = 0, frame = 0
 288              		@ frame_needed = 0, uses_anonymous_args = 0
 289              		@ link register save eliminated.
 290              	.LVL16:
 291 0000 7047     		bx	lr
 292              		.cfi_endproc
 293              	.LFE5:
 294              		.size	UART_WriteControlRegister, .-UART_WriteControlRegister
 295 0002 00BF     		.section	.text.UART_SetRxInterruptMode,"ax",%progbits
 296              		.align	2
 297              		.global	UART_SetRxInterruptMode
 298              		.thumb
 299              		.thumb_func
 300              		.type	UART_SetRxInterruptMode, %function
 301              	UART_SetRxInterruptMode:
 302              	.LFB6:
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 12


 321:Generated_Source\PSoC5/UART.c ****     #if (UART_CONTROL_REG_REMOVED)
 322:Generated_Source\PSoC5/UART.c ****         if(0u != control)
 323:Generated_Source\PSoC5/UART.c ****         {
 324:Generated_Source\PSoC5/UART.c ****             /* Suppress compiler warning */
 325:Generated_Source\PSoC5/UART.c ****         }
 326:Generated_Source\PSoC5/UART.c ****     #else
 327:Generated_Source\PSoC5/UART.c ****        UART_CONTROL_REG = control;
 328:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_CONTROL_REG_REMOVED) */
 329:Generated_Source\PSoC5/UART.c **** }
 330:Generated_Source\PSoC5/UART.c **** 
 331:Generated_Source\PSoC5/UART.c **** 
 332:Generated_Source\PSoC5/UART.c **** #if(UART_RX_ENABLED || UART_HD_ENABLED)
 333:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 334:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxInterruptMode
 335:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 336:Generated_Source\PSoC5/UART.c ****     *
 337:Generated_Source\PSoC5/UART.c ****     * Summary:
 338:Generated_Source\PSoC5/UART.c ****     *  Configures the RX interrupt sources enabled.
 339:Generated_Source\PSoC5/UART.c ****     *
 340:Generated_Source\PSoC5/UART.c ****     * Parameters:
 341:Generated_Source\PSoC5/UART.c ****     *  IntSrc:  Bit field containing the RX interrupts to enable. Based on the 
 342:Generated_Source\PSoC5/UART.c ****     *  bit-field arrangement of the status register. This value must be a 
 343:Generated_Source\PSoC5/UART.c ****     *  combination of status register bit-masks shown below:
 344:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_FIFO_NOTEMPTY    Interrupt on byte received.
 345:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_PAR_ERROR        Interrupt on parity error.
 346:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_STOP_ERROR       Interrupt on stop error.
 347:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_BREAK            Interrupt on break.
 348:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_OVERRUN          Interrupt on overrun error.
 349:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_ADDR_MATCH       Interrupt on address match.
 350:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_MRKSPC           Interrupt on address detect.
 351:Generated_Source\PSoC5/UART.c ****     *
 352:Generated_Source\PSoC5/UART.c ****     * Return:
 353:Generated_Source\PSoC5/UART.c ****     *  None.
 354:Generated_Source\PSoC5/UART.c ****     *
 355:Generated_Source\PSoC5/UART.c ****     * Theory:
 356:Generated_Source\PSoC5/UART.c ****     *  Enables the output of specific status bits to the interrupt controller
 357:Generated_Source\PSoC5/UART.c ****     *
 358:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 359:Generated_Source\PSoC5/UART.c ****     void UART_SetRxInterruptMode(uint8 intSrc) 
 360:Generated_Source\PSoC5/UART.c ****     {
 303              		.loc 1 360 0
 304              		.cfi_startproc
 305              		@ args = 0, pretend = 0, frame = 0
 306              		@ frame_needed = 0, uses_anonymous_args = 0
 307              		@ link register save eliminated.
 308              	.LVL17:
 361:Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_MASK_REG  = intSrc;
 309              		.loc 1 361 0
 310 0000 014B     		ldr	r3, .L21
 311 0002 1870     		strb	r0, [r3]
 312 0004 7047     		bx	lr
 313              	.L22:
 314 0006 00BF     		.align	2
 315              	.L21:
 316 0008 8B650040 		.word	1073767819
 317              		.cfi_endproc
 318              	.LFE6:
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 13


 319              		.size	UART_SetRxInterruptMode, .-UART_SetRxInterruptMode
 320              		.section	.text.UART_ReadRxData,"ax",%progbits
 321              		.align	2
 322              		.global	UART_ReadRxData
 323              		.thumb
 324              		.thumb_func
 325              		.type	UART_ReadRxData, %function
 326              	UART_ReadRxData:
 327              	.LFB7:
 362:Generated_Source\PSoC5/UART.c ****     }
 363:Generated_Source\PSoC5/UART.c **** 
 364:Generated_Source\PSoC5/UART.c **** 
 365:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 366:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ReadRxData
 367:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 368:Generated_Source\PSoC5/UART.c ****     *
 369:Generated_Source\PSoC5/UART.c ****     * Summary:
 370:Generated_Source\PSoC5/UART.c ****     *  Returns the next byte of received data. This function returns data without
 371:Generated_Source\PSoC5/UART.c ****     *  checking the status. You must check the status separately.
 372:Generated_Source\PSoC5/UART.c ****     *
 373:Generated_Source\PSoC5/UART.c ****     * Parameters:
 374:Generated_Source\PSoC5/UART.c ****     *  None.
 375:Generated_Source\PSoC5/UART.c ****     *
 376:Generated_Source\PSoC5/UART.c ****     * Return:
 377:Generated_Source\PSoC5/UART.c ****     *  Received data from RX register
 378:Generated_Source\PSoC5/UART.c ****     *
 379:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 380:Generated_Source\PSoC5/UART.c ****     *  UART_rxBuffer - RAM buffer pointer for save received data.
 381:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - cyclic index for write to rxBuffer,
 382:Generated_Source\PSoC5/UART.c ****     *     checked to identify new data.
 383:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - cyclic index for read from rxBuffer,
 384:Generated_Source\PSoC5/UART.c ****     *     incremented after each byte has been read from buffer.
 385:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - cleared if loop condition was detected
 386:Generated_Source\PSoC5/UART.c ****     *     in RX ISR.
 387:Generated_Source\PSoC5/UART.c ****     *
 388:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 389:Generated_Source\PSoC5/UART.c ****     *  No.
 390:Generated_Source\PSoC5/UART.c ****     *
 391:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 392:Generated_Source\PSoC5/UART.c ****     uint8 UART_ReadRxData(void) 
 393:Generated_Source\PSoC5/UART.c ****     {
 328              		.loc 1 393 0
 329              		.cfi_startproc
 330              		@ args = 0, pretend = 0, frame = 0
 331              		@ frame_needed = 0, uses_anonymous_args = 0
 332              		@ link register save eliminated.
 394:Generated_Source\PSoC5/UART.c ****         uint8 rxData;
 395:Generated_Source\PSoC5/UART.c **** 
 396:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 397:Generated_Source\PSoC5/UART.c **** 
 398:Generated_Source\PSoC5/UART.c ****         uint16 locRxBufferRead;
 399:Generated_Source\PSoC5/UART.c ****         uint16 locRxBufferWrite;
 400:Generated_Source\PSoC5/UART.c **** 
 401:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt */
 402:Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 333              		.loc 1 402 0
 334 0000 0122     		movs	r2, #1
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 14


 335 0002 134B     		ldr	r3, .L29
 336 0004 1A60     		str	r2, [r3]
 403:Generated_Source\PSoC5/UART.c **** 
 404:Generated_Source\PSoC5/UART.c ****         locRxBufferRead  = UART_rxBufferRead;
 337              		.loc 1 404 0
 338 0006 134A     		ldr	r2, .L29+4
 339 0008 5388     		ldrh	r3, [r2, #2]
 340 000a 9BB2     		uxth	r3, r3
 341              	.LVL18:
 405:Generated_Source\PSoC5/UART.c ****         locRxBufferWrite = UART_rxBufferWrite;
 342              		.loc 1 405 0
 343 000c 9188     		ldrh	r1, [r2, #4]
 344 000e 89B2     		uxth	r1, r1
 345              	.LVL19:
 406:Generated_Source\PSoC5/UART.c **** 
 407:Generated_Source\PSoC5/UART.c ****         if( (UART_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 346              		.loc 1 407 0
 347 0010 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 348 0012 12F0FF0F 		tst	r2, #255
 349 0016 01D1     		bne	.L24
 350              		.loc 1 407 0 is_stmt 0 discriminator 1
 351 0018 8B42     		cmp	r3, r1
 352 001a 11D0     		beq	.L25
 353              	.L24:
 408:Generated_Source\PSoC5/UART.c ****         {
 409:Generated_Source\PSoC5/UART.c ****             rxData = UART_rxBuffer[locRxBufferRead];
 354              		.loc 1 409 0 is_stmt 1
 355 001c 0E4A     		ldr	r2, .L29+8
 356 001e D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 357 0020 C0B2     		uxtb	r0, r0
 358              	.LVL20:
 410:Generated_Source\PSoC5/UART.c ****             locRxBufferRead++;
 359              		.loc 1 410 0
 360 0022 0133     		adds	r3, r3, #1
 361              	.LVL21:
 362 0024 9BB2     		uxth	r3, r3
 363              	.LVL22:
 411:Generated_Source\PSoC5/UART.c **** 
 412:Generated_Source\PSoC5/UART.c ****             if(locRxBufferRead >= UART_RX_BUFFER_SIZE)
 364              		.loc 1 412 0
 365 0026 FF2B     		cmp	r3, #255
 366 0028 00D9     		bls	.L26
 413:Generated_Source\PSoC5/UART.c ****             {
 414:Generated_Source\PSoC5/UART.c ****                 locRxBufferRead = 0u;
 367              		.loc 1 414 0
 368 002a 0023     		movs	r3, #0
 369              	.LVL23:
 370              	.L26:
 415:Generated_Source\PSoC5/UART.c ****             }
 416:Generated_Source\PSoC5/UART.c ****             /* Update the real pointer */
 417:Generated_Source\PSoC5/UART.c ****             UART_rxBufferRead = locRxBufferRead;
 371              		.loc 1 417 0
 372 002c 094A     		ldr	r2, .L29+4
 373 002e 5380     		strh	r3, [r2, #2]	@ movhi
 418:Generated_Source\PSoC5/UART.c **** 
 419:Generated_Source\PSoC5/UART.c ****             if(UART_rxBufferLoopDetect != 0u)
 374              		.loc 1 419 0
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 15


 375 0030 9379     		ldrb	r3, [r2, #6]	@ zero_extendqisi2
 376              	.LVL24:
 377 0032 13F0FF0F 		tst	r3, #255
 378 0036 06D0     		beq	.L27
 420:Generated_Source\PSoC5/UART.c ****             {
 421:Generated_Source\PSoC5/UART.c ****                 UART_rxBufferLoopDetect = 0u;
 379              		.loc 1 421 0
 380 0038 0022     		movs	r2, #0
 381 003a 064B     		ldr	r3, .L29+4
 382 003c 9A71     		strb	r2, [r3, #6]
 383              	.LVL25:
 384 003e 02E0     		b	.L27
 385              	.LVL26:
 386              	.L25:
 422:Generated_Source\PSoC5/UART.c ****                 #if ((UART_RX_INTERRUPT_ENABLED) && (UART_FLOW_CONTROL != 0u))
 423:Generated_Source\PSoC5/UART.c ****                     /* When Hardware Flow Control selected - return RX mask */
 424:Generated_Source\PSoC5/UART.c ****                     #if( UART_HD_ENABLED )
 425:Generated_Source\PSoC5/UART.c ****                         if((UART_CONTROL_REG & UART_CTRL_HD_SEND) == 0u)
 426:Generated_Source\PSoC5/UART.c ****                         {   /* In Half duplex mode return RX mask only in RX
 427:Generated_Source\PSoC5/UART.c ****                             *  configuration set, otherwise
 428:Generated_Source\PSoC5/UART.c ****                             *  mask will be returned in LoadRxConfig() API.
 429:Generated_Source\PSoC5/UART.c ****                             */
 430:Generated_Source\PSoC5/UART.c ****                             UART_RXSTATUS_MASK_REG  |= UART_RX_STS_FIFO_NOTEMPTY;
 431:Generated_Source\PSoC5/UART.c ****                         }
 432:Generated_Source\PSoC5/UART.c ****                     #else
 433:Generated_Source\PSoC5/UART.c ****                         UART_RXSTATUS_MASK_REG  |= UART_RX_STS_FIFO_NOTEMPTY;
 434:Generated_Source\PSoC5/UART.c ****                     #endif /* end UART_HD_ENABLED */
 435:Generated_Source\PSoC5/UART.c ****                 #endif /* ((UART_RX_INTERRUPT_ENABLED) && (UART_FLOW_CONTROL != 0u)) */
 436:Generated_Source\PSoC5/UART.c ****             }
 437:Generated_Source\PSoC5/UART.c ****         }
 438:Generated_Source\PSoC5/UART.c ****         else
 439:Generated_Source\PSoC5/UART.c ****         {   /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 440:Generated_Source\PSoC5/UART.c ****             rxData = UART_RXDATA_REG;
 387              		.loc 1 440 0
 388 0040 064B     		ldr	r3, .L29+12
 389              	.LVL27:
 390 0042 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 391 0044 C0B2     		uxtb	r0, r0
 392              	.LVL28:
 393              	.L27:
 441:Generated_Source\PSoC5/UART.c ****         }
 442:Generated_Source\PSoC5/UART.c **** 
 443:Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 394              		.loc 1 443 0
 395 0046 0122     		movs	r2, #1
 396 0048 054B     		ldr	r3, .L29+16
 397 004a 1A60     		str	r2, [r3]
 444:Generated_Source\PSoC5/UART.c **** 
 445:Generated_Source\PSoC5/UART.c ****     #else
 446:Generated_Source\PSoC5/UART.c **** 
 447:Generated_Source\PSoC5/UART.c ****         /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 448:Generated_Source\PSoC5/UART.c ****         rxData = UART_RXDATA_REG;
 449:Generated_Source\PSoC5/UART.c **** 
 450:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 451:Generated_Source\PSoC5/UART.c **** 
 452:Generated_Source\PSoC5/UART.c ****         return(rxData);
 453:Generated_Source\PSoC5/UART.c ****     }
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 16


 398              		.loc 1 453 0
 399 004c 7047     		bx	lr
 400              	.L30:
 401 004e 00BF     		.align	2
 402              	.L29:
 403 0050 80E100E0 		.word	-536813184
 404 0054 00000000 		.word	.LANCHOR0
 405 0058 00000000 		.word	UART_rxBuffer
 406 005c 48650040 		.word	1073767752
 407 0060 00E100E0 		.word	-536813312
 408              		.cfi_endproc
 409              	.LFE7:
 410              		.size	UART_ReadRxData, .-UART_ReadRxData
 411              		.section	.text.UART_ReadRxStatus,"ax",%progbits
 412              		.align	2
 413              		.global	UART_ReadRxStatus
 414              		.thumb
 415              		.thumb_func
 416              		.type	UART_ReadRxStatus, %function
 417              	UART_ReadRxStatus:
 418              	.LFB8:
 454:Generated_Source\PSoC5/UART.c **** 
 455:Generated_Source\PSoC5/UART.c **** 
 456:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 457:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ReadRxStatus
 458:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 459:Generated_Source\PSoC5/UART.c ****     *
 460:Generated_Source\PSoC5/UART.c ****     * Summary:
 461:Generated_Source\PSoC5/UART.c ****     *  Returns the current state of the receiver status register and the software
 462:Generated_Source\PSoC5/UART.c ****     *  buffer overflow status.
 463:Generated_Source\PSoC5/UART.c ****     *
 464:Generated_Source\PSoC5/UART.c ****     * Parameters:
 465:Generated_Source\PSoC5/UART.c ****     *  None.
 466:Generated_Source\PSoC5/UART.c ****     *
 467:Generated_Source\PSoC5/UART.c ****     * Return:
 468:Generated_Source\PSoC5/UART.c ****     *  Current state of the status register.
 469:Generated_Source\PSoC5/UART.c ****     *
 470:Generated_Source\PSoC5/UART.c ****     * Side Effect:
 471:Generated_Source\PSoC5/UART.c ****     *  All status register bits are clear-on-read except
 472:Generated_Source\PSoC5/UART.c ****     *  UART_RX_STS_FIFO_NOTEMPTY.
 473:Generated_Source\PSoC5/UART.c ****     *  UART_RX_STS_FIFO_NOTEMPTY clears immediately after RX data
 474:Generated_Source\PSoC5/UART.c ****     *  register read.
 475:Generated_Source\PSoC5/UART.c ****     *
 476:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 477:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferOverflow - used to indicate overload condition.
 478:Generated_Source\PSoC5/UART.c ****     *   It set to one in RX interrupt when there isn't free space in
 479:Generated_Source\PSoC5/UART.c ****     *   UART_rxBufferRead to write new data. This condition returned
 480:Generated_Source\PSoC5/UART.c ****     *   and cleared to zero by this API as an
 481:Generated_Source\PSoC5/UART.c ****     *   UART_RX_STS_SOFT_BUFF_OVER bit along with RX Status register
 482:Generated_Source\PSoC5/UART.c ****     *   bits.
 483:Generated_Source\PSoC5/UART.c ****     *
 484:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 485:Generated_Source\PSoC5/UART.c ****     uint8 UART_ReadRxStatus(void) 
 486:Generated_Source\PSoC5/UART.c ****     {
 419              		.loc 1 486 0
 420              		.cfi_startproc
 421              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 17


 422              		@ frame_needed = 0, uses_anonymous_args = 0
 423              		@ link register save eliminated.
 487:Generated_Source\PSoC5/UART.c ****         uint8 status;
 488:Generated_Source\PSoC5/UART.c **** 
 489:Generated_Source\PSoC5/UART.c ****         status = UART_RXSTATUS_REG & UART_RX_HW_MASK;
 424              		.loc 1 489 0
 425 0000 074B     		ldr	r3, .L33
 426 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 427 0004 00F07F00 		and	r0, r0, #127
 428              	.LVL29:
 490:Generated_Source\PSoC5/UART.c **** 
 491:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 492:Generated_Source\PSoC5/UART.c ****         if(UART_rxBufferOverflow != 0u)
 429              		.loc 1 492 0
 430 0008 064B     		ldr	r3, .L33+4
 431 000a DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 432 000c 13F0FF0F 		tst	r3, #255
 433 0010 04D0     		beq	.L32
 493:Generated_Source\PSoC5/UART.c ****         {
 494:Generated_Source\PSoC5/UART.c ****             status |= UART_RX_STS_SOFT_BUFF_OVER;
 434              		.loc 1 494 0
 435 0012 40F08000 		orr	r0, r0, #128
 436              	.LVL30:
 495:Generated_Source\PSoC5/UART.c ****             UART_rxBufferOverflow = 0u;
 437              		.loc 1 495 0
 438 0016 0022     		movs	r2, #0
 439 0018 024B     		ldr	r3, .L33+4
 440 001a DA71     		strb	r2, [r3, #7]
 441              	.L32:
 496:Generated_Source\PSoC5/UART.c ****         }
 497:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 498:Generated_Source\PSoC5/UART.c **** 
 499:Generated_Source\PSoC5/UART.c ****         return(status);
 500:Generated_Source\PSoC5/UART.c ****     }
 442              		.loc 1 500 0
 443 001c 7047     		bx	lr
 444              	.L34:
 445 001e 00BF     		.align	2
 446              	.L33:
 447 0020 6B650040 		.word	1073767787
 448 0024 00000000 		.word	.LANCHOR0
 449              		.cfi_endproc
 450              	.LFE8:
 451              		.size	UART_ReadRxStatus, .-UART_ReadRxStatus
 452              		.section	.text.UART_GetChar,"ax",%progbits
 453              		.align	2
 454              		.global	UART_GetChar
 455              		.thumb
 456              		.thumb_func
 457              		.type	UART_GetChar, %function
 458              	UART_GetChar:
 459              	.LFB9:
 501:Generated_Source\PSoC5/UART.c **** 
 502:Generated_Source\PSoC5/UART.c **** 
 503:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 504:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_GetChar
 505:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 18


 506:Generated_Source\PSoC5/UART.c ****     *
 507:Generated_Source\PSoC5/UART.c ****     * Summary:
 508:Generated_Source\PSoC5/UART.c ****     *  Returns the last received byte of data. UART_GetChar() is
 509:Generated_Source\PSoC5/UART.c ****     *  designed for ASCII characters and returns a uint8 where 1 to 255 are values
 510:Generated_Source\PSoC5/UART.c ****     *  for valid characters and 0 indicates an error occurred or no data is present.
 511:Generated_Source\PSoC5/UART.c ****     *
 512:Generated_Source\PSoC5/UART.c ****     * Parameters:
 513:Generated_Source\PSoC5/UART.c ****     *  None.
 514:Generated_Source\PSoC5/UART.c ****     *
 515:Generated_Source\PSoC5/UART.c ****     * Return:
 516:Generated_Source\PSoC5/UART.c ****     *  Character read from UART RX buffer. ASCII characters from 1 to 255 are valid.
 517:Generated_Source\PSoC5/UART.c ****     *  A returned zero signifies an error condition or no data available.
 518:Generated_Source\PSoC5/UART.c ****     *
 519:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 520:Generated_Source\PSoC5/UART.c ****     *  UART_rxBuffer - RAM buffer pointer for save received data.
 521:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - cyclic index for write to rxBuffer,
 522:Generated_Source\PSoC5/UART.c ****     *     checked to identify new data.
 523:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - cyclic index for read from rxBuffer,
 524:Generated_Source\PSoC5/UART.c ****     *     incremented after each byte has been read from buffer.
 525:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - cleared if loop condition was detected
 526:Generated_Source\PSoC5/UART.c ****     *     in RX ISR.
 527:Generated_Source\PSoC5/UART.c ****     *
 528:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 529:Generated_Source\PSoC5/UART.c ****     *  No.
 530:Generated_Source\PSoC5/UART.c ****     *
 531:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 532:Generated_Source\PSoC5/UART.c ****     uint8 UART_GetChar(void) 
 533:Generated_Source\PSoC5/UART.c ****     {
 460              		.loc 1 533 0
 461              		.cfi_startproc
 462              		@ args = 0, pretend = 0, frame = 0
 463              		@ frame_needed = 0, uses_anonymous_args = 0
 464              		@ link register save eliminated.
 465              	.LVL31:
 534:Generated_Source\PSoC5/UART.c ****         uint8 rxData = 0u;
 535:Generated_Source\PSoC5/UART.c ****         uint8 rxStatus;
 536:Generated_Source\PSoC5/UART.c **** 
 537:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 538:Generated_Source\PSoC5/UART.c ****         uint16 locRxBufferRead;
 539:Generated_Source\PSoC5/UART.c ****         uint16 locRxBufferWrite;
 540:Generated_Source\PSoC5/UART.c **** 
 541:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt */
 542:Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 466              		.loc 1 542 0
 467 0000 0122     		movs	r2, #1
 468 0002 194B     		ldr	r3, .L43
 469 0004 1A60     		str	r2, [r3]
 543:Generated_Source\PSoC5/UART.c **** 
 544:Generated_Source\PSoC5/UART.c ****         locRxBufferRead  = UART_rxBufferRead;
 470              		.loc 1 544 0
 471 0006 194A     		ldr	r2, .L43+4
 472 0008 5388     		ldrh	r3, [r2, #2]
 473 000a 9BB2     		uxth	r3, r3
 474              	.LVL32:
 545:Generated_Source\PSoC5/UART.c ****         locRxBufferWrite = UART_rxBufferWrite;
 475              		.loc 1 545 0
 476 000c 9188     		ldrh	r1, [r2, #4]
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 19


 477 000e 89B2     		uxth	r1, r1
 478              	.LVL33:
 546:Generated_Source\PSoC5/UART.c **** 
 547:Generated_Source\PSoC5/UART.c ****         if( (UART_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 479              		.loc 1 547 0
 480 0010 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 481 0012 12F0FF0F 		tst	r2, #255
 482 0016 01D1     		bne	.L36
 483              		.loc 1 547 0 is_stmt 0 discriminator 1
 484 0018 8B42     		cmp	r3, r1
 485 001a 11D0     		beq	.L37
 486              	.L36:
 548:Generated_Source\PSoC5/UART.c ****         {
 549:Generated_Source\PSoC5/UART.c ****             rxData = UART_rxBuffer[locRxBufferRead];
 487              		.loc 1 549 0 is_stmt 1
 488 001c 144A     		ldr	r2, .L43+8
 489 001e D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 490 0020 C0B2     		uxtb	r0, r0
 491              	.LVL34:
 550:Generated_Source\PSoC5/UART.c ****             locRxBufferRead++;
 492              		.loc 1 550 0
 493 0022 0133     		adds	r3, r3, #1
 494              	.LVL35:
 495 0024 9BB2     		uxth	r3, r3
 496              	.LVL36:
 551:Generated_Source\PSoC5/UART.c ****             if(locRxBufferRead >= UART_RX_BUFFER_SIZE)
 497              		.loc 1 551 0
 498 0026 FF2B     		cmp	r3, #255
 499 0028 00D9     		bls	.L38
 552:Generated_Source\PSoC5/UART.c ****             {
 553:Generated_Source\PSoC5/UART.c ****                 locRxBufferRead = 0u;
 500              		.loc 1 553 0
 501 002a 0023     		movs	r3, #0
 502              	.LVL37:
 503              	.L38:
 554:Generated_Source\PSoC5/UART.c ****             }
 555:Generated_Source\PSoC5/UART.c ****             /* Update the real pointer */
 556:Generated_Source\PSoC5/UART.c ****             UART_rxBufferRead = locRxBufferRead;
 504              		.loc 1 556 0
 505 002c 0F4A     		ldr	r2, .L43+4
 506 002e 5380     		strh	r3, [r2, #2]	@ movhi
 557:Generated_Source\PSoC5/UART.c **** 
 558:Generated_Source\PSoC5/UART.c ****             if(UART_rxBufferLoopDetect != 0u)
 507              		.loc 1 558 0
 508 0030 9379     		ldrb	r3, [r2, #6]	@ zero_extendqisi2
 509              	.LVL38:
 510 0032 13F0FF0F 		tst	r3, #255
 511 0036 13D0     		beq	.L39
 559:Generated_Source\PSoC5/UART.c ****             {
 560:Generated_Source\PSoC5/UART.c ****                 UART_rxBufferLoopDetect = 0u;
 512              		.loc 1 560 0
 513 0038 0022     		movs	r2, #0
 514 003a 0C4B     		ldr	r3, .L43+4
 515 003c 9A71     		strb	r2, [r3, #6]
 516              	.LVL39:
 517 003e 0FE0     		b	.L39
 518              	.LVL40:
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 20


 519              	.L37:
 561:Generated_Source\PSoC5/UART.c ****                 #if( (UART_RX_INTERRUPT_ENABLED) && (UART_FLOW_CONTROL != 0u) )
 562:Generated_Source\PSoC5/UART.c ****                     /* When Hardware Flow Control selected - return RX mask */
 563:Generated_Source\PSoC5/UART.c ****                     #if( UART_HD_ENABLED )
 564:Generated_Source\PSoC5/UART.c ****                         if((UART_CONTROL_REG & UART_CTRL_HD_SEND) == 0u)
 565:Generated_Source\PSoC5/UART.c ****                         {   /* In Half duplex mode return RX mask only if
 566:Generated_Source\PSoC5/UART.c ****                             *  RX configuration set, otherwise
 567:Generated_Source\PSoC5/UART.c ****                             *  mask will be returned in LoadRxConfig() API.
 568:Generated_Source\PSoC5/UART.c ****                             */
 569:Generated_Source\PSoC5/UART.c ****                             UART_RXSTATUS_MASK_REG |= UART_RX_STS_FIFO_NOTEMPTY;
 570:Generated_Source\PSoC5/UART.c ****                         }
 571:Generated_Source\PSoC5/UART.c ****                     #else
 572:Generated_Source\PSoC5/UART.c ****                         UART_RXSTATUS_MASK_REG |= UART_RX_STS_FIFO_NOTEMPTY;
 573:Generated_Source\PSoC5/UART.c ****                     #endif /* end UART_HD_ENABLED */
 574:Generated_Source\PSoC5/UART.c ****                 #endif /* UART_RX_INTERRUPT_ENABLED and Hardware flow control*/
 575:Generated_Source\PSoC5/UART.c ****             }
 576:Generated_Source\PSoC5/UART.c **** 
 577:Generated_Source\PSoC5/UART.c ****         }
 578:Generated_Source\PSoC5/UART.c ****         else
 579:Generated_Source\PSoC5/UART.c ****         {   rxStatus = UART_RXSTATUS_REG;
 520              		.loc 1 579 0
 521 0040 0C4B     		ldr	r3, .L43+12
 522              	.LVL41:
 523 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 524 0044 DBB2     		uxtb	r3, r3
 525              	.LVL42:
 580:Generated_Source\PSoC5/UART.c ****             if((rxStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u)
 526              		.loc 1 580 0
 527 0046 13F0200F 		tst	r3, #32
 528 004a 06D0     		beq	.L41
 581:Generated_Source\PSoC5/UART.c ****             {   /* Read received data from FIFO */
 582:Generated_Source\PSoC5/UART.c ****                 rxData = UART_RXDATA_REG;
 529              		.loc 1 582 0
 530 004c 0A4A     		ldr	r2, .L43+16
 531 004e 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 532 0050 C0B2     		uxtb	r0, r0
 533              	.LVL43:
 583:Generated_Source\PSoC5/UART.c ****                 /*Check status on error*/
 584:Generated_Source\PSoC5/UART.c ****                 if((rxStatus & (UART_RX_STS_BREAK | UART_RX_STS_PAR_ERROR |
 534              		.loc 1 584 0
 535 0052 13F01E0F 		tst	r3, #30
 536 0056 02D1     		bne	.L42
 537 0058 02E0     		b	.L39
 538              	.LVL44:
 539              	.L41:
 534:Generated_Source\PSoC5/UART.c ****         uint8 rxStatus;
 540              		.loc 1 534 0
 541 005a 0020     		movs	r0, #0
 542 005c 00E0     		b	.L39
 543              	.LVL45:
 544              	.L42:
 585:Generated_Source\PSoC5/UART.c ****                                 UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN)) != 0u)
 586:Generated_Source\PSoC5/UART.c ****                 {
 587:Generated_Source\PSoC5/UART.c ****                     rxData = 0u;
 545              		.loc 1 587 0
 546 005e 0020     		movs	r0, #0
 547              	.LVL46:
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 21


 548              	.L39:
 588:Generated_Source\PSoC5/UART.c ****                 }
 589:Generated_Source\PSoC5/UART.c ****             }
 590:Generated_Source\PSoC5/UART.c ****         }
 591:Generated_Source\PSoC5/UART.c **** 
 592:Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 549              		.loc 1 592 0
 550 0060 0122     		movs	r2, #1
 551 0062 064B     		ldr	r3, .L43+20
 552 0064 1A60     		str	r2, [r3]
 593:Generated_Source\PSoC5/UART.c **** 
 594:Generated_Source\PSoC5/UART.c ****     #else
 595:Generated_Source\PSoC5/UART.c **** 
 596:Generated_Source\PSoC5/UART.c ****         rxStatus =UART_RXSTATUS_REG;
 597:Generated_Source\PSoC5/UART.c ****         if((rxStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u)
 598:Generated_Source\PSoC5/UART.c ****         {
 599:Generated_Source\PSoC5/UART.c ****             /* Read received data from FIFO */
 600:Generated_Source\PSoC5/UART.c ****             rxData = UART_RXDATA_REG;
 601:Generated_Source\PSoC5/UART.c **** 
 602:Generated_Source\PSoC5/UART.c ****             /*Check status on error*/
 603:Generated_Source\PSoC5/UART.c ****             if((rxStatus & (UART_RX_STS_BREAK | UART_RX_STS_PAR_ERROR |
 604:Generated_Source\PSoC5/UART.c ****                             UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN)) != 0u)
 605:Generated_Source\PSoC5/UART.c ****             {
 606:Generated_Source\PSoC5/UART.c ****                 rxData = 0u;
 607:Generated_Source\PSoC5/UART.c ****             }
 608:Generated_Source\PSoC5/UART.c ****         }
 609:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 610:Generated_Source\PSoC5/UART.c **** 
 611:Generated_Source\PSoC5/UART.c ****         return(rxData);
 612:Generated_Source\PSoC5/UART.c ****     }
 553              		.loc 1 612 0
 554 0066 7047     		bx	lr
 555              	.L44:
 556              		.align	2
 557              	.L43:
 558 0068 80E100E0 		.word	-536813184
 559 006c 00000000 		.word	.LANCHOR0
 560 0070 00000000 		.word	UART_rxBuffer
 561 0074 6B650040 		.word	1073767787
 562 0078 48650040 		.word	1073767752
 563 007c 00E100E0 		.word	-536813312
 564              		.cfi_endproc
 565              	.LFE9:
 566              		.size	UART_GetChar, .-UART_GetChar
 567              		.section	.text.UART_GetByte,"ax",%progbits
 568              		.align	2
 569              		.global	UART_GetByte
 570              		.thumb
 571              		.thumb_func
 572              		.type	UART_GetByte, %function
 573              	UART_GetByte:
 574              	.LFB10:
 613:Generated_Source\PSoC5/UART.c **** 
 614:Generated_Source\PSoC5/UART.c **** 
 615:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 616:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_GetByte
 617:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 22


 618:Generated_Source\PSoC5/UART.c ****     *
 619:Generated_Source\PSoC5/UART.c ****     * Summary:
 620:Generated_Source\PSoC5/UART.c ****     *  Reads UART RX buffer immediately, returns received character and error
 621:Generated_Source\PSoC5/UART.c ****     *  condition.
 622:Generated_Source\PSoC5/UART.c ****     *
 623:Generated_Source\PSoC5/UART.c ****     * Parameters:
 624:Generated_Source\PSoC5/UART.c ****     *  None.
 625:Generated_Source\PSoC5/UART.c ****     *
 626:Generated_Source\PSoC5/UART.c ****     * Return:
 627:Generated_Source\PSoC5/UART.c ****     *  MSB contains status and LSB contains UART RX data. If the MSB is nonzero,
 628:Generated_Source\PSoC5/UART.c ****     *  an error has occurred.
 629:Generated_Source\PSoC5/UART.c ****     *
 630:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 631:Generated_Source\PSoC5/UART.c ****     *  No.
 632:Generated_Source\PSoC5/UART.c ****     *
 633:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 634:Generated_Source\PSoC5/UART.c ****     uint16 UART_GetByte(void) 
 635:Generated_Source\PSoC5/UART.c ****     {
 575              		.loc 1 635 0
 576              		.cfi_startproc
 577              		@ args = 0, pretend = 0, frame = 0
 578              		@ frame_needed = 0, uses_anonymous_args = 0
 579 0000 10B5     		push	{r4, lr}
 580              		.cfi_def_cfa_offset 8
 581              		.cfi_offset 4, -8
 582              		.cfi_offset 14, -4
 636:Generated_Source\PSoC5/UART.c ****         
 637:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 638:Generated_Source\PSoC5/UART.c ****         uint16 locErrorStatus;
 639:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt */
 640:Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 583              		.loc 1 640 0
 584 0002 0123     		movs	r3, #1
 585 0004 064A     		ldr	r2, .L47
 586 0006 1360     		str	r3, [r2]
 641:Generated_Source\PSoC5/UART.c ****         locErrorStatus = (uint16)UART_errorStatus;
 587              		.loc 1 641 0
 588 0008 064A     		ldr	r2, .L47+4
 589 000a 1478     		ldrb	r4, [r2]	@ zero_extendqisi2
 590              	.LVL47:
 642:Generated_Source\PSoC5/UART.c ****         UART_errorStatus = 0u;
 591              		.loc 1 642 0
 592 000c 0021     		movs	r1, #0
 593 000e 1170     		strb	r1, [r2]
 643:Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 594              		.loc 1 643 0
 595 0010 054A     		ldr	r2, .L47+8
 596 0012 1360     		str	r3, [r2]
 644:Generated_Source\PSoC5/UART.c ****         return ( (uint16)(locErrorStatus << 8u) | UART_ReadRxData() );
 597              		.loc 1 644 0
 598 0014 2402     		lsls	r4, r4, #8
 599              	.LVL48:
 600 0016 FFF7FEFF 		bl	UART_ReadRxData
 601              	.LVL49:
 602 001a 2043     		orrs	r0, r0, r4
 645:Generated_Source\PSoC5/UART.c ****     #else
 646:Generated_Source\PSoC5/UART.c ****         return ( ((uint16)UART_ReadRxStatus() << 8u) | UART_ReadRxData() );
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 23


 647:Generated_Source\PSoC5/UART.c ****     #endif /* UART_RX_INTERRUPT_ENABLED */
 648:Generated_Source\PSoC5/UART.c ****         
 649:Generated_Source\PSoC5/UART.c ****     }
 603              		.loc 1 649 0
 604 001c 80B2     		uxth	r0, r0
 605 001e 10BD     		pop	{r4, pc}
 606              	.L48:
 607              		.align	2
 608              	.L47:
 609 0020 80E100E0 		.word	-536813184
 610 0024 00000000 		.word	.LANCHOR0
 611 0028 00E100E0 		.word	-536813312
 612              		.cfi_endproc
 613              	.LFE10:
 614              		.size	UART_GetByte, .-UART_GetByte
 615              		.section	.text.UART_GetRxBufferSize,"ax",%progbits
 616              		.align	2
 617              		.global	UART_GetRxBufferSize
 618              		.thumb
 619              		.thumb_func
 620              		.type	UART_GetRxBufferSize, %function
 621              	UART_GetRxBufferSize:
 622              	.LFB11:
 650:Generated_Source\PSoC5/UART.c **** 
 651:Generated_Source\PSoC5/UART.c **** 
 652:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 653:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_GetRxBufferSize
 654:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 655:Generated_Source\PSoC5/UART.c ****     *
 656:Generated_Source\PSoC5/UART.c ****     * Summary:
 657:Generated_Source\PSoC5/UART.c ****     *  Returns the number of received bytes available in the RX buffer.
 658:Generated_Source\PSoC5/UART.c ****     *  * RX software buffer is disabled (RX Buffer Size parameter is equal to 4): 
 659:Generated_Source\PSoC5/UART.c ****     *    returns 0 for empty RX FIFO or 1 for not empty RX FIFO.
 660:Generated_Source\PSoC5/UART.c ****     *  * RX software buffer is enabled: returns the number of bytes available in 
 661:Generated_Source\PSoC5/UART.c ****     *    the RX software buffer. Bytes available in the RX FIFO do not take to 
 662:Generated_Source\PSoC5/UART.c ****     *    account.
 663:Generated_Source\PSoC5/UART.c ****     *
 664:Generated_Source\PSoC5/UART.c ****     * Parameters:
 665:Generated_Source\PSoC5/UART.c ****     *  None.
 666:Generated_Source\PSoC5/UART.c ****     *
 667:Generated_Source\PSoC5/UART.c ****     * Return:
 668:Generated_Source\PSoC5/UART.c ****     *  uint16: Number of bytes in the RX buffer. 
 669:Generated_Source\PSoC5/UART.c ****     *    Return value type depends on RX Buffer Size parameter.
 670:Generated_Source\PSoC5/UART.c ****     *
 671:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 672:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - used to calculate left bytes.
 673:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - used to calculate left bytes.
 674:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - checked to decide left bytes amount.
 675:Generated_Source\PSoC5/UART.c ****     *
 676:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 677:Generated_Source\PSoC5/UART.c ****     *  No.
 678:Generated_Source\PSoC5/UART.c ****     *
 679:Generated_Source\PSoC5/UART.c ****     * Theory:
 680:Generated_Source\PSoC5/UART.c ****     *  Allows the user to find out how full the RX Buffer is.
 681:Generated_Source\PSoC5/UART.c ****     *
 682:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 683:Generated_Source\PSoC5/UART.c ****     uint16 UART_GetRxBufferSize(void)
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 24


 684:Generated_Source\PSoC5/UART.c ****                                                             
 685:Generated_Source\PSoC5/UART.c ****     {
 623              		.loc 1 685 0
 624              		.cfi_startproc
 625              		@ args = 0, pretend = 0, frame = 0
 626              		@ frame_needed = 0, uses_anonymous_args = 0
 627              		@ link register save eliminated.
 686:Generated_Source\PSoC5/UART.c ****         uint16 size;
 687:Generated_Source\PSoC5/UART.c **** 
 688:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 689:Generated_Source\PSoC5/UART.c **** 
 690:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt */
 691:Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 628              		.loc 1 691 0
 629 0000 0122     		movs	r2, #1
 630 0002 174B     		ldr	r3, .L54
 631 0004 1A60     		str	r2, [r3]
 692:Generated_Source\PSoC5/UART.c **** 
 693:Generated_Source\PSoC5/UART.c ****         if(UART_rxBufferRead == UART_rxBufferWrite)
 632              		.loc 1 693 0
 633 0006 174B     		ldr	r3, .L54+4
 634 0008 5A88     		ldrh	r2, [r3, #2]
 635 000a 92B2     		uxth	r2, r2
 636 000c 9B88     		ldrh	r3, [r3, #4]
 637 000e 9BB2     		uxth	r3, r3
 638 0010 9A42     		cmp	r2, r3
 639 0012 07D1     		bne	.L50
 694:Generated_Source\PSoC5/UART.c ****         {
 695:Generated_Source\PSoC5/UART.c ****             if(UART_rxBufferLoopDetect != 0u)
 640              		.loc 1 695 0
 641 0014 134B     		ldr	r3, .L54+4
 642 0016 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 643 0018 13F0FF0F 		tst	r3, #255
 644 001c 1BD0     		beq	.L53
 696:Generated_Source\PSoC5/UART.c ****             {
 697:Generated_Source\PSoC5/UART.c ****                 size = UART_RX_BUFFER_SIZE;
 645              		.loc 1 697 0
 646 001e 4FF48070 		mov	r0, #256
 647 0022 19E0     		b	.L51
 648              	.L50:
 698:Generated_Source\PSoC5/UART.c ****             }
 699:Generated_Source\PSoC5/UART.c ****             else
 700:Generated_Source\PSoC5/UART.c ****             {
 701:Generated_Source\PSoC5/UART.c ****                 size = 0u;
 702:Generated_Source\PSoC5/UART.c ****             }
 703:Generated_Source\PSoC5/UART.c ****         }
 704:Generated_Source\PSoC5/UART.c ****         else if(UART_rxBufferRead < UART_rxBufferWrite)
 649              		.loc 1 704 0
 650 0024 0F4B     		ldr	r3, .L54+4
 651 0026 5A88     		ldrh	r2, [r3, #2]
 652 0028 92B2     		uxth	r2, r2
 653 002a 9B88     		ldrh	r3, [r3, #4]
 654 002c 9BB2     		uxth	r3, r3
 655 002e 9A42     		cmp	r2, r3
 656 0030 07D2     		bcs	.L52
 705:Generated_Source\PSoC5/UART.c ****         {
 706:Generated_Source\PSoC5/UART.c ****             size = (UART_rxBufferWrite - UART_rxBufferRead);
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 25


 657              		.loc 1 706 0
 658 0032 0C4A     		ldr	r2, .L54+4
 659 0034 9088     		ldrh	r0, [r2, #4]
 660 0036 83B2     		uxth	r3, r0
 661 0038 5088     		ldrh	r0, [r2, #2]
 662 003a 80B2     		uxth	r0, r0
 663 003c 181A     		subs	r0, r3, r0
 664 003e 80B2     		uxth	r0, r0
 665              	.LVL50:
 666 0040 0AE0     		b	.L51
 667              	.LVL51:
 668              	.L52:
 707:Generated_Source\PSoC5/UART.c ****         }
 708:Generated_Source\PSoC5/UART.c ****         else
 709:Generated_Source\PSoC5/UART.c ****         {
 710:Generated_Source\PSoC5/UART.c ****             size = (UART_RX_BUFFER_SIZE - UART_rxBufferRead) + UART_rxBufferWrite;
 669              		.loc 1 710 0
 670 0042 084A     		ldr	r2, .L54+4
 671 0044 9088     		ldrh	r0, [r2, #4]
 672 0046 83B2     		uxth	r3, r0
 673 0048 5088     		ldrh	r0, [r2, #2]
 674 004a 80B2     		uxth	r0, r0
 675 004c 181A     		subs	r0, r3, r0
 676 004e 00F58070 		add	r0, r0, #256
 677 0052 80B2     		uxth	r0, r0
 678              	.LVL52:
 679 0054 00E0     		b	.L51
 680              	.LVL53:
 681              	.L53:
 701:Generated_Source\PSoC5/UART.c ****             }
 682              		.loc 1 701 0
 683 0056 0020     		movs	r0, #0
 684              	.L51:
 685              	.LVL54:
 711:Generated_Source\PSoC5/UART.c ****         }
 712:Generated_Source\PSoC5/UART.c **** 
 713:Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 686              		.loc 1 713 0
 687 0058 0122     		movs	r2, #1
 688 005a 034B     		ldr	r3, .L54+8
 689 005c 1A60     		str	r2, [r3]
 714:Generated_Source\PSoC5/UART.c **** 
 715:Generated_Source\PSoC5/UART.c ****     #else
 716:Generated_Source\PSoC5/UART.c **** 
 717:Generated_Source\PSoC5/UART.c ****         /* We can only know if there is data in the fifo. */
 718:Generated_Source\PSoC5/UART.c ****         size = ((UART_RXSTATUS_REG & UART_RX_STS_FIFO_NOTEMPTY) != 0u) ? 1u : 0u;
 719:Generated_Source\PSoC5/UART.c **** 
 720:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 721:Generated_Source\PSoC5/UART.c **** 
 722:Generated_Source\PSoC5/UART.c ****         return(size);
 723:Generated_Source\PSoC5/UART.c ****     }
 690              		.loc 1 723 0
 691 005e 7047     		bx	lr
 692              	.L55:
 693              		.align	2
 694              	.L54:
 695 0060 80E100E0 		.word	-536813184
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 26


 696 0064 00000000 		.word	.LANCHOR0
 697 0068 00E100E0 		.word	-536813312
 698              		.cfi_endproc
 699              	.LFE11:
 700              		.size	UART_GetRxBufferSize, .-UART_GetRxBufferSize
 701              		.section	.text.UART_ClearRxBuffer,"ax",%progbits
 702              		.align	2
 703              		.global	UART_ClearRxBuffer
 704              		.thumb
 705              		.thumb_func
 706              		.type	UART_ClearRxBuffer, %function
 707              	UART_ClearRxBuffer:
 708              	.LFB12:
 724:Generated_Source\PSoC5/UART.c **** 
 725:Generated_Source\PSoC5/UART.c **** 
 726:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 727:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ClearRxBuffer
 728:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 729:Generated_Source\PSoC5/UART.c ****     *
 730:Generated_Source\PSoC5/UART.c ****     * Summary:
 731:Generated_Source\PSoC5/UART.c ****     *  Clears the receiver memory buffer and hardware RX FIFO of all received data.
 732:Generated_Source\PSoC5/UART.c ****     *
 733:Generated_Source\PSoC5/UART.c ****     * Parameters:
 734:Generated_Source\PSoC5/UART.c ****     *  None.
 735:Generated_Source\PSoC5/UART.c ****     *
 736:Generated_Source\PSoC5/UART.c ****     * Return:
 737:Generated_Source\PSoC5/UART.c ****     *  None.
 738:Generated_Source\PSoC5/UART.c ****     *
 739:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 740:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - cleared to zero.
 741:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - cleared to zero.
 742:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - cleared to zero.
 743:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferOverflow - cleared to zero.
 744:Generated_Source\PSoC5/UART.c ****     *
 745:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 746:Generated_Source\PSoC5/UART.c ****     *  No.
 747:Generated_Source\PSoC5/UART.c ****     *
 748:Generated_Source\PSoC5/UART.c ****     * Theory:
 749:Generated_Source\PSoC5/UART.c ****     *  Setting the pointers to zero makes the system believe there is no data to
 750:Generated_Source\PSoC5/UART.c ****     *  read and writing will resume at address 0 overwriting any data that may
 751:Generated_Source\PSoC5/UART.c ****     *  have remained in the RAM.
 752:Generated_Source\PSoC5/UART.c ****     *
 753:Generated_Source\PSoC5/UART.c ****     * Side Effects:
 754:Generated_Source\PSoC5/UART.c ****     *  Any received data not read from the RAM or FIFO buffer will be lost.
 755:Generated_Source\PSoC5/UART.c ****     *
 756:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 757:Generated_Source\PSoC5/UART.c ****     void UART_ClearRxBuffer(void) 
 758:Generated_Source\PSoC5/UART.c ****     {
 709              		.loc 1 758 0
 710              		.cfi_startproc
 711              		@ args = 0, pretend = 0, frame = 0
 712              		@ frame_needed = 0, uses_anonymous_args = 0
 713 0000 08B5     		push	{r3, lr}
 714              		.cfi_def_cfa_offset 8
 715              		.cfi_offset 3, -8
 716              		.cfi_offset 14, -4
 759:Generated_Source\PSoC5/UART.c ****         uint8 enableInterrupts;
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 27


 760:Generated_Source\PSoC5/UART.c **** 
 761:Generated_Source\PSoC5/UART.c ****         /* Clear the HW FIFO */
 762:Generated_Source\PSoC5/UART.c ****         enableInterrupts = CyEnterCriticalSection();
 717              		.loc 1 762 0
 718 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 719              	.LVL55:
 763:Generated_Source\PSoC5/UART.c ****         UART_RXDATA_AUX_CTL_REG |= (uint8)  UART_RX_FIFO_CLR;
 720              		.loc 1 763 0
 721 0006 0B4B     		ldr	r3, .L58
 722 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 723 000a 42F00102 		orr	r2, r2, #1
 724 000e 1A70     		strb	r2, [r3]
 764:Generated_Source\PSoC5/UART.c ****         UART_RXDATA_AUX_CTL_REG &= (uint8) ~UART_RX_FIFO_CLR;
 725              		.loc 1 764 0
 726 0010 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 727 0012 02F0FE02 		and	r2, r2, #254
 728 0016 1A70     		strb	r2, [r3]
 765:Generated_Source\PSoC5/UART.c ****         CyExitCriticalSection(enableInterrupts);
 729              		.loc 1 765 0
 730 0018 FFF7FEFF 		bl	CyExitCriticalSection
 731              	.LVL56:
 766:Generated_Source\PSoC5/UART.c **** 
 767:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 768:Generated_Source\PSoC5/UART.c **** 
 769:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt. */
 770:Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 732              		.loc 1 770 0
 733 001c 0121     		movs	r1, #1
 734 001e 064B     		ldr	r3, .L58+4
 735 0020 1960     		str	r1, [r3]
 771:Generated_Source\PSoC5/UART.c **** 
 772:Generated_Source\PSoC5/UART.c ****         UART_rxBufferRead = 0u;
 736              		.loc 1 772 0
 737 0022 064B     		ldr	r3, .L58+8
 738 0024 0022     		movs	r2, #0
 739 0026 5A80     		strh	r2, [r3, #2]	@ movhi
 773:Generated_Source\PSoC5/UART.c ****         UART_rxBufferWrite = 0u;
 740              		.loc 1 773 0
 741 0028 9A80     		strh	r2, [r3, #4]	@ movhi
 774:Generated_Source\PSoC5/UART.c ****         UART_rxBufferLoopDetect = 0u;
 742              		.loc 1 774 0
 743 002a 9A71     		strb	r2, [r3, #6]
 775:Generated_Source\PSoC5/UART.c ****         UART_rxBufferOverflow = 0u;
 744              		.loc 1 775 0
 745 002c DA71     		strb	r2, [r3, #7]
 776:Generated_Source\PSoC5/UART.c **** 
 777:Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 746              		.loc 1 777 0
 747 002e 044B     		ldr	r3, .L58+12
 748 0030 1960     		str	r1, [r3]
 749 0032 08BD     		pop	{r3, pc}
 750              	.L59:
 751              		.align	2
 752              	.L58:
 753 0034 98650040 		.word	1073767832
 754 0038 80E100E0 		.word	-536813184
 755 003c 00000000 		.word	.LANCHOR0
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 28


 756 0040 00E100E0 		.word	-536813312
 757              		.cfi_endproc
 758              	.LFE12:
 759              		.size	UART_ClearRxBuffer, .-UART_ClearRxBuffer
 760              		.section	.text.UART_SetRxAddressMode,"ax",%progbits
 761              		.align	2
 762              		.global	UART_SetRxAddressMode
 763              		.thumb
 764              		.thumb_func
 765              		.type	UART_SetRxAddressMode, %function
 766              	UART_SetRxAddressMode:
 767              	.LFB13:
 778:Generated_Source\PSoC5/UART.c **** 
 779:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 780:Generated_Source\PSoC5/UART.c **** 
 781:Generated_Source\PSoC5/UART.c ****     }
 782:Generated_Source\PSoC5/UART.c **** 
 783:Generated_Source\PSoC5/UART.c **** 
 784:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 785:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxAddressMode
 786:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 787:Generated_Source\PSoC5/UART.c ****     *
 788:Generated_Source\PSoC5/UART.c ****     * Summary:
 789:Generated_Source\PSoC5/UART.c ****     *  Sets the software controlled Addressing mode used by the RX portion of the
 790:Generated_Source\PSoC5/UART.c ****     *  UART.
 791:Generated_Source\PSoC5/UART.c ****     *
 792:Generated_Source\PSoC5/UART.c ****     * Parameters:
 793:Generated_Source\PSoC5/UART.c ****     *  addressMode: Enumerated value indicating the mode of RX addressing
 794:Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_SW_BYTE_BYTE -  Software Byte-by-Byte address
 795:Generated_Source\PSoC5/UART.c ****     *                                               detection
 796:Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_SW_DETECT_TO_BUFFER - Software Detect to Buffer
 797:Generated_Source\PSoC5/UART.c ****     *                                               address detection
 798:Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_HW_BYTE_BY_BYTE - Hardware Byte-by-Byte address
 799:Generated_Source\PSoC5/UART.c ****     *                                               detection
 800:Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_HW_DETECT_TO_BUFFER - Hardware Detect to Buffer
 801:Generated_Source\PSoC5/UART.c ****     *                                               address detection
 802:Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_NONE - No address detection
 803:Generated_Source\PSoC5/UART.c ****     *
 804:Generated_Source\PSoC5/UART.c ****     * Return:
 805:Generated_Source\PSoC5/UART.c ****     *  None.
 806:Generated_Source\PSoC5/UART.c ****     *
 807:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 808:Generated_Source\PSoC5/UART.c ****     *  UART_rxAddressMode - the parameter stored in this variable for
 809:Generated_Source\PSoC5/UART.c ****     *   the farther usage in RX ISR.
 810:Generated_Source\PSoC5/UART.c ****     *  UART_rxAddressDetected - set to initial state (0).
 811:Generated_Source\PSoC5/UART.c ****     *
 812:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 813:Generated_Source\PSoC5/UART.c ****     void UART_SetRxAddressMode(uint8 addressMode)
 814:Generated_Source\PSoC5/UART.c ****                                                         
 815:Generated_Source\PSoC5/UART.c ****     {
 768              		.loc 1 815 0
 769              		.cfi_startproc
 770              		@ args = 0, pretend = 0, frame = 0
 771              		@ frame_needed = 0, uses_anonymous_args = 0
 772              		@ link register save eliminated.
 773              	.LVL57:
 774 0000 7047     		bx	lr
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 29


 775              		.cfi_endproc
 776              	.LFE13:
 777              		.size	UART_SetRxAddressMode, .-UART_SetRxAddressMode
 778 0002 00BF     		.section	.text.UART_SetRxAddress1,"ax",%progbits
 779              		.align	2
 780              		.global	UART_SetRxAddress1
 781              		.thumb
 782              		.thumb_func
 783              		.type	UART_SetRxAddress1, %function
 784              	UART_SetRxAddress1:
 785              	.LFB14:
 816:Generated_Source\PSoC5/UART.c ****         #if(UART_RXHW_ADDRESS_ENABLED)
 817:Generated_Source\PSoC5/UART.c ****             #if(UART_CONTROL_REG_REMOVED)
 818:Generated_Source\PSoC5/UART.c ****                 if(0u != addressMode)
 819:Generated_Source\PSoC5/UART.c ****                 {
 820:Generated_Source\PSoC5/UART.c ****                     /* Suppress compiler warning */
 821:Generated_Source\PSoC5/UART.c ****                 }
 822:Generated_Source\PSoC5/UART.c ****             #else /* UART_CONTROL_REG_REMOVED */
 823:Generated_Source\PSoC5/UART.c ****                 uint8 tmpCtrl;
 824:Generated_Source\PSoC5/UART.c ****                 tmpCtrl = UART_CONTROL_REG & (uint8)~UART_CTRL_RXADDR_MODE_MASK;
 825:Generated_Source\PSoC5/UART.c ****                 tmpCtrl |= (uint8)(addressMode << UART_CTRL_RXADDR_MODE0_SHIFT);
 826:Generated_Source\PSoC5/UART.c ****                 UART_CONTROL_REG = tmpCtrl;
 827:Generated_Source\PSoC5/UART.c **** 
 828:Generated_Source\PSoC5/UART.c ****                 #if(UART_RX_INTERRUPT_ENABLED && \
 829:Generated_Source\PSoC5/UART.c ****                    (UART_RXBUFFERSIZE > UART_FIFO_LENGTH) )
 830:Generated_Source\PSoC5/UART.c ****                     UART_rxAddressMode = addressMode;
 831:Generated_Source\PSoC5/UART.c ****                     UART_rxAddressDetected = 0u;
 832:Generated_Source\PSoC5/UART.c ****                 #endif /* End UART_RXBUFFERSIZE > UART_FIFO_LENGTH*/
 833:Generated_Source\PSoC5/UART.c ****             #endif /* End UART_CONTROL_REG_REMOVED */
 834:Generated_Source\PSoC5/UART.c ****         #else /* UART_RXHW_ADDRESS_ENABLED */
 835:Generated_Source\PSoC5/UART.c ****             if(0u != addressMode)
 836:Generated_Source\PSoC5/UART.c ****             {
 837:Generated_Source\PSoC5/UART.c ****                 /* Suppress compiler warning */
 838:Generated_Source\PSoC5/UART.c ****             }
 839:Generated_Source\PSoC5/UART.c ****         #endif /* End UART_RXHW_ADDRESS_ENABLED */
 840:Generated_Source\PSoC5/UART.c ****     }
 841:Generated_Source\PSoC5/UART.c **** 
 842:Generated_Source\PSoC5/UART.c **** 
 843:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 844:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxAddress1
 845:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 846:Generated_Source\PSoC5/UART.c ****     *
 847:Generated_Source\PSoC5/UART.c ****     * Summary:
 848:Generated_Source\PSoC5/UART.c ****     *  Sets the first of two hardware-detectable receiver addresses.
 849:Generated_Source\PSoC5/UART.c ****     *
 850:Generated_Source\PSoC5/UART.c ****     * Parameters:
 851:Generated_Source\PSoC5/UART.c ****     *  address: Address #1 for hardware address detection.
 852:Generated_Source\PSoC5/UART.c ****     *
 853:Generated_Source\PSoC5/UART.c ****     * Return:
 854:Generated_Source\PSoC5/UART.c ****     *  None.
 855:Generated_Source\PSoC5/UART.c ****     *
 856:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 857:Generated_Source\PSoC5/UART.c ****     void UART_SetRxAddress1(uint8 address) 
 858:Generated_Source\PSoC5/UART.c ****     {
 786              		.loc 1 858 0
 787              		.cfi_startproc
 788              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 30


 789              		@ frame_needed = 0, uses_anonymous_args = 0
 790              		@ link register save eliminated.
 791              	.LVL58:
 859:Generated_Source\PSoC5/UART.c ****         UART_RXADDRESS1_REG = address;
 792              		.loc 1 859 0
 793 0000 014B     		ldr	r3, .L62
 794 0002 1870     		strb	r0, [r3]
 795 0004 7047     		bx	lr
 796              	.L63:
 797 0006 00BF     		.align	2
 798              	.L62:
 799 0008 28650040 		.word	1073767720
 800              		.cfi_endproc
 801              	.LFE14:
 802              		.size	UART_SetRxAddress1, .-UART_SetRxAddress1
 803              		.section	.text.UART_SetRxAddress2,"ax",%progbits
 804              		.align	2
 805              		.global	UART_SetRxAddress2
 806              		.thumb
 807              		.thumb_func
 808              		.type	UART_SetRxAddress2, %function
 809              	UART_SetRxAddress2:
 810              	.LFB15:
 860:Generated_Source\PSoC5/UART.c ****     }
 861:Generated_Source\PSoC5/UART.c **** 
 862:Generated_Source\PSoC5/UART.c **** 
 863:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 864:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxAddress2
 865:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 866:Generated_Source\PSoC5/UART.c ****     *
 867:Generated_Source\PSoC5/UART.c ****     * Summary:
 868:Generated_Source\PSoC5/UART.c ****     *  Sets the second of two hardware-detectable receiver addresses.
 869:Generated_Source\PSoC5/UART.c ****     *
 870:Generated_Source\PSoC5/UART.c ****     * Parameters:
 871:Generated_Source\PSoC5/UART.c ****     *  address: Address #2 for hardware address detection.
 872:Generated_Source\PSoC5/UART.c ****     *
 873:Generated_Source\PSoC5/UART.c ****     * Return:
 874:Generated_Source\PSoC5/UART.c ****     *  None.
 875:Generated_Source\PSoC5/UART.c ****     *
 876:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 877:Generated_Source\PSoC5/UART.c ****     void UART_SetRxAddress2(uint8 address) 
 878:Generated_Source\PSoC5/UART.c ****     {
 811              		.loc 1 878 0
 812              		.cfi_startproc
 813              		@ args = 0, pretend = 0, frame = 0
 814              		@ frame_needed = 0, uses_anonymous_args = 0
 815              		@ link register save eliminated.
 816              	.LVL59:
 879:Generated_Source\PSoC5/UART.c ****         UART_RXADDRESS2_REG = address;
 817              		.loc 1 879 0
 818 0000 014B     		ldr	r3, .L65
 819 0002 1870     		strb	r0, [r3]
 820 0004 7047     		bx	lr
 821              	.L66:
 822 0006 00BF     		.align	2
 823              	.L65:
 824 0008 38650040 		.word	1073767736
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 31


 825              		.cfi_endproc
 826              	.LFE15:
 827              		.size	UART_SetRxAddress2, .-UART_SetRxAddress2
 828              		.section	.text.UART_SetTxInterruptMode,"ax",%progbits
 829              		.align	2
 830              		.global	UART_SetTxInterruptMode
 831              		.thumb
 832              		.thumb_func
 833              		.type	UART_SetTxInterruptMode, %function
 834              	UART_SetTxInterruptMode:
 835              	.LFB16:
 880:Generated_Source\PSoC5/UART.c ****     }
 881:Generated_Source\PSoC5/UART.c **** 
 882:Generated_Source\PSoC5/UART.c **** #endif  /* UART_RX_ENABLED || UART_HD_ENABLED*/
 883:Generated_Source\PSoC5/UART.c **** 
 884:Generated_Source\PSoC5/UART.c **** 
 885:Generated_Source\PSoC5/UART.c **** #if( (UART_TX_ENABLED) || (UART_HD_ENABLED) )
 886:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 887:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetTxInterruptMode
 888:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 889:Generated_Source\PSoC5/UART.c ****     *
 890:Generated_Source\PSoC5/UART.c ****     * Summary:
 891:Generated_Source\PSoC5/UART.c ****     *  Configures the TX interrupt sources to be enabled, but does not enable the
 892:Generated_Source\PSoC5/UART.c ****     *  interrupt.
 893:Generated_Source\PSoC5/UART.c ****     *
 894:Generated_Source\PSoC5/UART.c ****     * Parameters:
 895:Generated_Source\PSoC5/UART.c ****     *  intSrc: Bit field containing the TX interrupt sources to enable
 896:Generated_Source\PSoC5/UART.c ****     *   UART_TX_STS_COMPLETE        Interrupt on TX byte complete
 897:Generated_Source\PSoC5/UART.c ****     *   UART_TX_STS_FIFO_EMPTY      Interrupt when TX FIFO is empty
 898:Generated_Source\PSoC5/UART.c ****     *   UART_TX_STS_FIFO_FULL       Interrupt when TX FIFO is full
 899:Generated_Source\PSoC5/UART.c ****     *   UART_TX_STS_FIFO_NOT_FULL   Interrupt when TX FIFO is not full
 900:Generated_Source\PSoC5/UART.c ****     *
 901:Generated_Source\PSoC5/UART.c ****     * Return:
 902:Generated_Source\PSoC5/UART.c ****     *  None.
 903:Generated_Source\PSoC5/UART.c ****     *
 904:Generated_Source\PSoC5/UART.c ****     * Theory:
 905:Generated_Source\PSoC5/UART.c ****     *  Enables the output of specific status bits to the interrupt controller
 906:Generated_Source\PSoC5/UART.c ****     *
 907:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 908:Generated_Source\PSoC5/UART.c ****     void UART_SetTxInterruptMode(uint8 intSrc) 
 909:Generated_Source\PSoC5/UART.c ****     {
 836              		.loc 1 909 0
 837              		.cfi_startproc
 838              		@ args = 0, pretend = 0, frame = 0
 839              		@ frame_needed = 0, uses_anonymous_args = 0
 840              		@ link register save eliminated.
 841              	.LVL60:
 910:Generated_Source\PSoC5/UART.c ****         UART_TXSTATUS_MASK_REG = intSrc;
 842              		.loc 1 910 0
 843 0000 014B     		ldr	r3, .L68
 844 0002 1870     		strb	r0, [r3]
 845 0004 7047     		bx	lr
 846              	.L69:
 847 0006 00BF     		.align	2
 848              	.L68:
 849 0008 88640040 		.word	1073767560
 850              		.cfi_endproc
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 32


 851              	.LFE16:
 852              		.size	UART_SetTxInterruptMode, .-UART_SetTxInterruptMode
 853              		.section	.text.UART_WriteTxData,"ax",%progbits
 854              		.align	2
 855              		.global	UART_WriteTxData
 856              		.thumb
 857              		.thumb_func
 858              		.type	UART_WriteTxData, %function
 859              	UART_WriteTxData:
 860              	.LFB17:
 911:Generated_Source\PSoC5/UART.c ****     }
 912:Generated_Source\PSoC5/UART.c **** 
 913:Generated_Source\PSoC5/UART.c **** 
 914:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 915:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_WriteTxData
 916:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 917:Generated_Source\PSoC5/UART.c ****     *
 918:Generated_Source\PSoC5/UART.c ****     * Summary:
 919:Generated_Source\PSoC5/UART.c ****     *  Places a byte of data into the transmit buffer to be sent when the bus is
 920:Generated_Source\PSoC5/UART.c ****     *  available without checking the TX status register. You must check status
 921:Generated_Source\PSoC5/UART.c ****     *  separately.
 922:Generated_Source\PSoC5/UART.c ****     *
 923:Generated_Source\PSoC5/UART.c ****     * Parameters:
 924:Generated_Source\PSoC5/UART.c ****     *  txDataByte: data byte
 925:Generated_Source\PSoC5/UART.c ****     *
 926:Generated_Source\PSoC5/UART.c ****     * Return:
 927:Generated_Source\PSoC5/UART.c ****     * None.
 928:Generated_Source\PSoC5/UART.c ****     *
 929:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 930:Generated_Source\PSoC5/UART.c ****     *  UART_txBuffer - RAM buffer pointer for save data for transmission
 931:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferWrite - cyclic index for write to txBuffer,
 932:Generated_Source\PSoC5/UART.c ****     *    incremented after each byte saved to buffer.
 933:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferRead - cyclic index for read from txBuffer,
 934:Generated_Source\PSoC5/UART.c ****     *    checked to identify the condition to write to FIFO directly or to TX buffer
 935:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
 936:Generated_Source\PSoC5/UART.c ****     *    initialized.
 937:Generated_Source\PSoC5/UART.c ****     *
 938:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 939:Generated_Source\PSoC5/UART.c ****     *  No.
 940:Generated_Source\PSoC5/UART.c ****     *
 941:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 942:Generated_Source\PSoC5/UART.c ****     void UART_WriteTxData(uint8 txDataByte) 
 943:Generated_Source\PSoC5/UART.c ****     {
 861              		.loc 1 943 0
 862              		.cfi_startproc
 863              		@ args = 0, pretend = 0, frame = 0
 864              		@ frame_needed = 0, uses_anonymous_args = 0
 865              		@ link register save eliminated.
 866              	.LVL61:
 944:Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function*/
 945:Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 867              		.loc 1 945 0
 868 0000 114B     		ldr	r3, .L75
 869 0002 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 870 0004 F3B1     		cbz	r3, .L70
 946:Generated_Source\PSoC5/UART.c ****         {
 947:Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 33


 948:Generated_Source\PSoC5/UART.c **** 
 949:Generated_Source\PSoC5/UART.c ****             /* Protect variables that could change on interrupt. */
 950:Generated_Source\PSoC5/UART.c ****             UART_DisableTxInt();
 871              		.loc 1 950 0
 872 0006 0222     		movs	r2, #2
 873 0008 104B     		ldr	r3, .L75+4
 874 000a 1A60     		str	r2, [r3]
 951:Generated_Source\PSoC5/UART.c **** 
 952:Generated_Source\PSoC5/UART.c ****             if( (UART_txBufferRead == UART_txBufferWrite) &&
 875              		.loc 1 952 0
 876 000c 0E4A     		ldr	r2, .L75
 877 000e 1389     		ldrh	r3, [r2, #8]
 878 0010 9BB2     		uxth	r3, r3
 879 0012 5289     		ldrh	r2, [r2, #10]
 880 0014 9342     		cmp	r3, r2
 881 0016 07D1     		bne	.L72
 953:Generated_Source\PSoC5/UART.c ****                 ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u) )
 882              		.loc 1 953 0 discriminator 1
 883 0018 0D4B     		ldr	r3, .L75+8
 884 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 952:Generated_Source\PSoC5/UART.c ****                 ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u) )
 885              		.loc 1 952 0 discriminator 1
 886 001c 13F0040F 		tst	r3, #4
 887 0020 02D1     		bne	.L72
 954:Generated_Source\PSoC5/UART.c ****             {
 955:Generated_Source\PSoC5/UART.c ****                 /* Add directly to the FIFO. */
 956:Generated_Source\PSoC5/UART.c ****                 UART_TXDATA_REG = txDataByte;
 888              		.loc 1 956 0
 889 0022 0C4B     		ldr	r3, .L75+12
 890 0024 1870     		strb	r0, [r3]
 891 0026 0AE0     		b	.L73
 892              	.L72:
 957:Generated_Source\PSoC5/UART.c ****             }
 958:Generated_Source\PSoC5/UART.c ****             else
 959:Generated_Source\PSoC5/UART.c ****             {
 960:Generated_Source\PSoC5/UART.c ****                 if(UART_txBufferWrite >= UART_TX_BUFFER_SIZE)
 893              		.loc 1 960 0
 894 0028 FF2A     		cmp	r2, #255
 895 002a 02D9     		bls	.L74
 961:Generated_Source\PSoC5/UART.c ****                 {
 962:Generated_Source\PSoC5/UART.c ****                     UART_txBufferWrite = 0u;
 896              		.loc 1 962 0
 897 002c 0022     		movs	r2, #0
 898 002e 064B     		ldr	r3, .L75
 899 0030 5A81     		strh	r2, [r3, #10]	@ movhi
 900              	.L74:
 963:Generated_Source\PSoC5/UART.c ****                 }
 964:Generated_Source\PSoC5/UART.c **** 
 965:Generated_Source\PSoC5/UART.c ****                 UART_txBuffer[UART_txBufferWrite] = txDataByte;
 901              		.loc 1 965 0
 902 0032 054A     		ldr	r2, .L75
 903 0034 5389     		ldrh	r3, [r2, #10]
 904 0036 0849     		ldr	r1, .L75+16
 905 0038 C854     		strb	r0, [r1, r3]
 966:Generated_Source\PSoC5/UART.c **** 
 967:Generated_Source\PSoC5/UART.c ****                 /* Add to the software buffer. */
 968:Generated_Source\PSoC5/UART.c ****                 UART_txBufferWrite++;
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 34


 906              		.loc 1 968 0
 907 003a 0133     		adds	r3, r3, #1
 908 003c 5381     		strh	r3, [r2, #10]	@ movhi
 909              	.L73:
 969:Generated_Source\PSoC5/UART.c ****             }
 970:Generated_Source\PSoC5/UART.c **** 
 971:Generated_Source\PSoC5/UART.c ****             UART_EnableTxInt();
 910              		.loc 1 971 0
 911 003e 0222     		movs	r2, #2
 912 0040 064B     		ldr	r3, .L75+20
 913 0042 1A60     		str	r2, [r3]
 914              	.L70:
 915 0044 7047     		bx	lr
 916              	.L76:
 917 0046 00BF     		.align	2
 918              	.L75:
 919 0048 00000000 		.word	.LANCHOR0
 920 004c 80E100E0 		.word	-536813184
 921 0050 68640040 		.word	1073767528
 922 0054 48640040 		.word	1073767496
 923 0058 00000000 		.word	UART_txBuffer
 924 005c 00E100E0 		.word	-536813312
 925              		.cfi_endproc
 926              	.LFE17:
 927              		.size	UART_WriteTxData, .-UART_WriteTxData
 928              		.section	.text.UART_ReadTxStatus,"ax",%progbits
 929              		.align	2
 930              		.global	UART_ReadTxStatus
 931              		.thumb
 932              		.thumb_func
 933              		.type	UART_ReadTxStatus, %function
 934              	UART_ReadTxStatus:
 935              	.LFB18:
 972:Generated_Source\PSoC5/UART.c **** 
 973:Generated_Source\PSoC5/UART.c ****         #else
 974:Generated_Source\PSoC5/UART.c **** 
 975:Generated_Source\PSoC5/UART.c ****             /* Add directly to the FIFO. */
 976:Generated_Source\PSoC5/UART.c ****             UART_TXDATA_REG = txDataByte;
 977:Generated_Source\PSoC5/UART.c **** 
 978:Generated_Source\PSoC5/UART.c ****         #endif /*(UART_TX_INTERRUPT_ENABLED) */
 979:Generated_Source\PSoC5/UART.c ****         }
 980:Generated_Source\PSoC5/UART.c ****     }
 981:Generated_Source\PSoC5/UART.c **** 
 982:Generated_Source\PSoC5/UART.c **** 
 983:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 984:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ReadTxStatus
 985:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 986:Generated_Source\PSoC5/UART.c ****     *
 987:Generated_Source\PSoC5/UART.c ****     * Summary:
 988:Generated_Source\PSoC5/UART.c ****     *  Reads the status register for the TX portion of the UART.
 989:Generated_Source\PSoC5/UART.c ****     *
 990:Generated_Source\PSoC5/UART.c ****     * Parameters:
 991:Generated_Source\PSoC5/UART.c ****     *  None.
 992:Generated_Source\PSoC5/UART.c ****     *
 993:Generated_Source\PSoC5/UART.c ****     * Return:
 994:Generated_Source\PSoC5/UART.c ****     *  Contents of the status register
 995:Generated_Source\PSoC5/UART.c ****     *
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 35


 996:Generated_Source\PSoC5/UART.c ****     * Theory:
 997:Generated_Source\PSoC5/UART.c ****     *  This function reads the TX status register, which is cleared on read.
 998:Generated_Source\PSoC5/UART.c ****     *  It is up to the user to handle all bits in this return value accordingly,
 999:Generated_Source\PSoC5/UART.c ****     *  even if the bit was not enabled as an interrupt source the event happened
1000:Generated_Source\PSoC5/UART.c ****     *  and must be handled accordingly.
1001:Generated_Source\PSoC5/UART.c ****     *
1002:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1003:Generated_Source\PSoC5/UART.c ****     uint8 UART_ReadTxStatus(void) 
1004:Generated_Source\PSoC5/UART.c ****     {
 936              		.loc 1 1004 0
 937              		.cfi_startproc
 938              		@ args = 0, pretend = 0, frame = 0
 939              		@ frame_needed = 0, uses_anonymous_args = 0
 940              		@ link register save eliminated.
1005:Generated_Source\PSoC5/UART.c ****         return(UART_TXSTATUS_REG);
 941              		.loc 1 1005 0
 942 0000 014B     		ldr	r3, .L78
 943 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
1006:Generated_Source\PSoC5/UART.c ****     }
 944              		.loc 1 1006 0
 945 0004 7047     		bx	lr
 946              	.L79:
 947 0006 00BF     		.align	2
 948              	.L78:
 949 0008 68640040 		.word	1073767528
 950              		.cfi_endproc
 951              	.LFE18:
 952              		.size	UART_ReadTxStatus, .-UART_ReadTxStatus
 953              		.section	.text.UART_PutChar,"ax",%progbits
 954              		.align	2
 955              		.global	UART_PutChar
 956              		.thumb
 957              		.thumb_func
 958              		.type	UART_PutChar, %function
 959              	UART_PutChar:
 960              	.LFB19:
1007:Generated_Source\PSoC5/UART.c **** 
1008:Generated_Source\PSoC5/UART.c **** 
1009:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1010:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_PutChar
1011:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1012:Generated_Source\PSoC5/UART.c ****     *
1013:Generated_Source\PSoC5/UART.c ****     * Summary:
1014:Generated_Source\PSoC5/UART.c ****     *  Puts a byte of data into the transmit buffer to be sent when the bus is
1015:Generated_Source\PSoC5/UART.c ****     *  available. This is a blocking API that waits until the TX buffer has room to
1016:Generated_Source\PSoC5/UART.c ****     *  hold the data.
1017:Generated_Source\PSoC5/UART.c ****     *
1018:Generated_Source\PSoC5/UART.c ****     * Parameters:
1019:Generated_Source\PSoC5/UART.c ****     *  txDataByte: Byte containing the data to transmit
1020:Generated_Source\PSoC5/UART.c ****     *
1021:Generated_Source\PSoC5/UART.c ****     * Return:
1022:Generated_Source\PSoC5/UART.c ****     *  None.
1023:Generated_Source\PSoC5/UART.c ****     *
1024:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1025:Generated_Source\PSoC5/UART.c ****     *  UART_txBuffer - RAM buffer pointer for save data for transmission
1026:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferWrite - cyclic index for write to txBuffer,
1027:Generated_Source\PSoC5/UART.c ****     *     checked to identify free space in txBuffer and incremented after each byte
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 36


1028:Generated_Source\PSoC5/UART.c ****     *     saved to buffer.
1029:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferRead - cyclic index for read from txBuffer,
1030:Generated_Source\PSoC5/UART.c ****     *     checked to identify free space in txBuffer.
1031:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1032:Generated_Source\PSoC5/UART.c ****     *     initialized.
1033:Generated_Source\PSoC5/UART.c ****     *
1034:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1035:Generated_Source\PSoC5/UART.c ****     *  No.
1036:Generated_Source\PSoC5/UART.c ****     *
1037:Generated_Source\PSoC5/UART.c ****     * Theory:
1038:Generated_Source\PSoC5/UART.c ****     *  Allows the user to transmit any byte of data in a single transfer
1039:Generated_Source\PSoC5/UART.c ****     *
1040:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1041:Generated_Source\PSoC5/UART.c ****     void UART_PutChar(uint8 txDataByte) 
1042:Generated_Source\PSoC5/UART.c ****     {
 961              		.loc 1 1042 0
 962              		.cfi_startproc
 963              		@ args = 0, pretend = 0, frame = 0
 964              		@ frame_needed = 0, uses_anonymous_args = 0
 965              		@ link register save eliminated.
 966              	.LVL62:
 967              	.L83:
1043:Generated_Source\PSoC5/UART.c ****     #if (UART_TX_INTERRUPT_ENABLED)
1044:Generated_Source\PSoC5/UART.c ****         /* The temporary output pointer is used since it takes two instructions
1045:Generated_Source\PSoC5/UART.c ****         *  to increment with a wrap, and we can't risk doing that with the real
1046:Generated_Source\PSoC5/UART.c ****         *  pointer and getting an interrupt in between instructions.
1047:Generated_Source\PSoC5/UART.c ****         */
1048:Generated_Source\PSoC5/UART.c ****         uint16 locTxBufferWrite;
1049:Generated_Source\PSoC5/UART.c ****         uint16 locTxBufferRead;
1050:Generated_Source\PSoC5/UART.c **** 
1051:Generated_Source\PSoC5/UART.c ****         do
1052:Generated_Source\PSoC5/UART.c ****         { /* Block if software buffer is full, so we don't overwrite. */
1053:Generated_Source\PSoC5/UART.c **** 
1054:Generated_Source\PSoC5/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1055:Generated_Source\PSoC5/UART.c ****             /* Disable TX interrupt to protect variables from modification */
1056:Generated_Source\PSoC5/UART.c ****             UART_DisableTxInt();
1057:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1058:Generated_Source\PSoC5/UART.c **** 
1059:Generated_Source\PSoC5/UART.c ****             locTxBufferWrite = UART_txBufferWrite;
 968              		.loc 1 1059 0
 969 0000 164B     		ldr	r3, .L88
 970 0002 5989     		ldrh	r1, [r3, #10]
 971              	.LVL63:
1060:Generated_Source\PSoC5/UART.c ****             locTxBufferRead  = UART_txBufferRead;
 972              		.loc 1 1060 0
 973 0004 1B89     		ldrh	r3, [r3, #8]
 974 0006 9BB2     		uxth	r3, r3
 975              	.LVL64:
1061:Generated_Source\PSoC5/UART.c **** 
1062:Generated_Source\PSoC5/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1063:Generated_Source\PSoC5/UART.c ****             /* Enable interrupt to continue transmission */
1064:Generated_Source\PSoC5/UART.c ****             UART_EnableTxInt();
1065:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1066:Generated_Source\PSoC5/UART.c ****         }
1067:Generated_Source\PSoC5/UART.c ****         while( (locTxBufferWrite < locTxBufferRead) ? (locTxBufferWrite == (locTxBufferRead - 1u)) 
 976              		.loc 1 1067 0
 977 0008 9942     		cmp	r1, r3
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 37


 978 000a 05D2     		bcs	.L81
 979              		.loc 1 1067 0 is_stmt 0 discriminator 1
 980 000c 5A1E     		subs	r2, r3, #1
 981 000e 9142     		cmp	r1, r2
 982 0010 14BF     		ite	ne
 983 0012 0022     		movne	r2, #0
 984 0014 0122     		moveq	r2, #1
 985 0016 04E0     		b	.L82
 986              	.L81:
1068:Generated_Source\PSoC5/UART.c ****                                 ((locTxBufferWrite - locTxBufferRead) ==
 987              		.loc 1 1068 0 is_stmt 1 discriminator 2
 988 0018 CA1A     		subs	r2, r1, r3
1067:Generated_Source\PSoC5/UART.c ****                                 ((locTxBufferWrite - locTxBufferRead) ==
 989              		.loc 1 1067 0 discriminator 2
 990 001a FF2A     		cmp	r2, #255
 991 001c 14BF     		ite	ne
 992 001e 0022     		movne	r2, #0
 993 0020 0122     		moveq	r2, #1
 994              	.L82:
1069:Generated_Source\PSoC5/UART.c ****                                 (uint16)(UART_TX_BUFFER_SIZE - 1u)) );
 995              		.loc 1 1069 0
 996 0022 002A     		cmp	r2, #0
 997 0024 ECD1     		bne	.L83
1070:Generated_Source\PSoC5/UART.c **** 
1071:Generated_Source\PSoC5/UART.c ****         if( (locTxBufferRead == locTxBufferWrite) &&
 998              		.loc 1 1071 0
 999 0026 9942     		cmp	r1, r3
 1000 0028 07D1     		bne	.L84
1072:Generated_Source\PSoC5/UART.c ****             ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u) )
 1001              		.loc 1 1072 0 discriminator 1
 1002 002a 0D4B     		ldr	r3, .L88+4
 1003              	.LVL65:
 1004 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1071:Generated_Source\PSoC5/UART.c ****             ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u) )
 1005              		.loc 1 1071 0 discriminator 1
 1006 002e 13F0040F 		tst	r3, #4
 1007 0032 02D1     		bne	.L84
1073:Generated_Source\PSoC5/UART.c ****         {
1074:Generated_Source\PSoC5/UART.c ****             /* Add directly to the FIFO */
1075:Generated_Source\PSoC5/UART.c ****             UART_TXDATA_REG = txDataByte;
 1008              		.loc 1 1075 0
 1009 0034 0B4B     		ldr	r3, .L88+8
 1010 0036 1870     		strb	r0, [r3]
 1011 0038 7047     		bx	lr
 1012              	.L84:
1076:Generated_Source\PSoC5/UART.c ****         }
1077:Generated_Source\PSoC5/UART.c ****         else
1078:Generated_Source\PSoC5/UART.c ****         {
1079:Generated_Source\PSoC5/UART.c ****             if(locTxBufferWrite >= UART_TX_BUFFER_SIZE)
 1013              		.loc 1 1079 0
 1014 003a FF29     		cmp	r1, #255
 1015 003c 00D9     		bls	.L86
1080:Generated_Source\PSoC5/UART.c ****             {
1081:Generated_Source\PSoC5/UART.c ****                 locTxBufferWrite = 0u;
 1016              		.loc 1 1081 0
 1017 003e 0021     		movs	r1, #0
 1018              	.LVL66:
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 38


 1019              	.L86:
1082:Generated_Source\PSoC5/UART.c ****             }
1083:Generated_Source\PSoC5/UART.c ****             /* Add to the software buffer. */
1084:Generated_Source\PSoC5/UART.c ****             UART_txBuffer[locTxBufferWrite] = txDataByte;
 1020              		.loc 1 1084 0
 1021 0040 094B     		ldr	r3, .L88+12
 1022 0042 5854     		strb	r0, [r3, r1]
1085:Generated_Source\PSoC5/UART.c ****             locTxBufferWrite++;
 1023              		.loc 1 1085 0
 1024 0044 0131     		adds	r1, r1, #1
 1025              	.LVL67:
1086:Generated_Source\PSoC5/UART.c **** 
1087:Generated_Source\PSoC5/UART.c ****             /* Finally, update the real output pointer */
1088:Generated_Source\PSoC5/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1089:Generated_Source\PSoC5/UART.c ****             UART_DisableTxInt();
1090:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1091:Generated_Source\PSoC5/UART.c **** 
1092:Generated_Source\PSoC5/UART.c ****             UART_txBufferWrite = locTxBufferWrite;
 1026              		.loc 1 1092 0
 1027 0046 054B     		ldr	r3, .L88
 1028 0048 5981     		strh	r1, [r3, #10]	@ movhi
1093:Generated_Source\PSoC5/UART.c **** 
1094:Generated_Source\PSoC5/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1095:Generated_Source\PSoC5/UART.c ****             UART_EnableTxInt();
1096:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1097:Generated_Source\PSoC5/UART.c **** 
1098:Generated_Source\PSoC5/UART.c ****             if(0u != (UART_TXSTATUS_REG & UART_TX_STS_FIFO_EMPTY))
 1029              		.loc 1 1098 0
 1030 004a 054B     		ldr	r3, .L88+4
 1031 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1032 004e 13F0020F 		tst	r3, #2
 1033 0052 02D0     		beq	.L80
1099:Generated_Source\PSoC5/UART.c ****             {
1100:Generated_Source\PSoC5/UART.c ****                 /* Trigger TX interrupt to send software buffer */
1101:Generated_Source\PSoC5/UART.c ****                 UART_SetPendingTxInt();
 1034              		.loc 1 1101 0
 1035 0054 0222     		movs	r2, #2
 1036 0056 054B     		ldr	r3, .L88+16
 1037 0058 1A60     		str	r2, [r3]
 1038              	.L80:
 1039 005a 7047     		bx	lr
 1040              	.L89:
 1041              		.align	2
 1042              	.L88:
 1043 005c 00000000 		.word	.LANCHOR0
 1044 0060 68640040 		.word	1073767528
 1045 0064 48640040 		.word	1073767496
 1046 0068 00000000 		.word	UART_txBuffer
 1047 006c 00E200E0 		.word	-536813056
 1048              		.cfi_endproc
 1049              	.LFE19:
 1050              		.size	UART_PutChar, .-UART_PutChar
 1051              		.section	.text.UART_PutString,"ax",%progbits
 1052              		.align	2
 1053              		.global	UART_PutString
 1054              		.thumb
 1055              		.thumb_func
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 39


 1056              		.type	UART_PutString, %function
 1057              	UART_PutString:
 1058              	.LFB20:
1102:Generated_Source\PSoC5/UART.c ****             }
1103:Generated_Source\PSoC5/UART.c ****         }
1104:Generated_Source\PSoC5/UART.c **** 
1105:Generated_Source\PSoC5/UART.c ****     #else
1106:Generated_Source\PSoC5/UART.c **** 
1107:Generated_Source\PSoC5/UART.c ****         while((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) != 0u)
1108:Generated_Source\PSoC5/UART.c ****         {
1109:Generated_Source\PSoC5/UART.c ****             /* Wait for room in the FIFO */
1110:Generated_Source\PSoC5/UART.c ****         }
1111:Generated_Source\PSoC5/UART.c **** 
1112:Generated_Source\PSoC5/UART.c ****         /* Add directly to the FIFO */
1113:Generated_Source\PSoC5/UART.c ****         UART_TXDATA_REG = txDataByte;
1114:Generated_Source\PSoC5/UART.c **** 
1115:Generated_Source\PSoC5/UART.c ****     #endif /* UART_TX_INTERRUPT_ENABLED */
1116:Generated_Source\PSoC5/UART.c ****     }
1117:Generated_Source\PSoC5/UART.c **** 
1118:Generated_Source\PSoC5/UART.c **** 
1119:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1120:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_PutString
1121:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1122:Generated_Source\PSoC5/UART.c ****     *
1123:Generated_Source\PSoC5/UART.c ****     * Summary:
1124:Generated_Source\PSoC5/UART.c ****     *  Sends a NULL terminated string to the TX buffer for transmission.
1125:Generated_Source\PSoC5/UART.c ****     *
1126:Generated_Source\PSoC5/UART.c ****     * Parameters:
1127:Generated_Source\PSoC5/UART.c ****     *  string[]: Pointer to the null terminated string array residing in RAM or ROM
1128:Generated_Source\PSoC5/UART.c ****     *
1129:Generated_Source\PSoC5/UART.c ****     * Return:
1130:Generated_Source\PSoC5/UART.c ****     *  None.
1131:Generated_Source\PSoC5/UART.c ****     *
1132:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1133:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1134:Generated_Source\PSoC5/UART.c ****     *     initialized.
1135:Generated_Source\PSoC5/UART.c ****     *
1136:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1137:Generated_Source\PSoC5/UART.c ****     *  No.
1138:Generated_Source\PSoC5/UART.c ****     *
1139:Generated_Source\PSoC5/UART.c ****     * Theory:
1140:Generated_Source\PSoC5/UART.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1141:Generated_Source\PSoC5/UART.c ****     *  function blocks until the last character of the string is loaded into the
1142:Generated_Source\PSoC5/UART.c ****     *  TX buffer.
1143:Generated_Source\PSoC5/UART.c ****     *
1144:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1145:Generated_Source\PSoC5/UART.c ****     void UART_PutString(const char8 string[]) 
1146:Generated_Source\PSoC5/UART.c ****     {
 1059              		.loc 1 1146 0
 1060              		.cfi_startproc
 1061              		@ args = 0, pretend = 0, frame = 0
 1062              		@ frame_needed = 0, uses_anonymous_args = 0
 1063              	.LVL68:
 1064 0000 38B5     		push	{r3, r4, r5, lr}
 1065              		.cfi_def_cfa_offset 16
 1066              		.cfi_offset 3, -16
 1067              		.cfi_offset 4, -12
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 40


 1068              		.cfi_offset 5, -8
 1069              		.cfi_offset 14, -4
 1070              	.LVL69:
1147:Generated_Source\PSoC5/UART.c ****         uint16 bufIndex = 0u;
1148:Generated_Source\PSoC5/UART.c **** 
1149:Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function */
1150:Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 1071              		.loc 1 1150 0
 1072 0002 074B     		ldr	r3, .L96
 1073 0004 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1074 0006 2BB9     		cbnz	r3, .L94
 1075 0008 38BD     		pop	{r3, r4, r5, pc}
 1076              	.LVL70:
 1077              	.L93:
1151:Generated_Source\PSoC5/UART.c ****         {
1152:Generated_Source\PSoC5/UART.c ****             /* This is a blocking function, it will not exit until all data is sent */
1153:Generated_Source\PSoC5/UART.c ****             while(string[bufIndex] != (char8) 0)
1154:Generated_Source\PSoC5/UART.c ****             {
1155:Generated_Source\PSoC5/UART.c ****                 UART_PutChar((uint8)string[bufIndex]);
 1078              		.loc 1 1155 0
 1079 000a FFF7FEFF 		bl	UART_PutChar
 1080              	.LVL71:
1156:Generated_Source\PSoC5/UART.c ****                 bufIndex++;
 1081              		.loc 1 1156 0
 1082 000e 0134     		adds	r4, r4, #1
 1083              	.LVL72:
 1084 0010 A4B2     		uxth	r4, r4
 1085              	.LVL73:
 1086 0012 01E0     		b	.L91
 1087              	.LVL74:
 1088              	.L94:
 1089 0014 0546     		mov	r5, r0
 1090 0016 0024     		movs	r4, #0
 1091              	.LVL75:
 1092              	.L91:
1153:Generated_Source\PSoC5/UART.c ****             {
 1093              		.loc 1 1153 0
 1094 0018 285D     		ldrb	r0, [r5, r4]	@ zero_extendqisi2
 1095 001a 0028     		cmp	r0, #0
 1096 001c F5D1     		bne	.L93
 1097 001e 38BD     		pop	{r3, r4, r5, pc}
 1098              	.LVL76:
 1099              	.L97:
 1100              		.align	2
 1101              	.L96:
 1102 0020 00000000 		.word	.LANCHOR0
 1103              		.cfi_endproc
 1104              	.LFE20:
 1105              		.size	UART_PutString, .-UART_PutString
 1106              		.section	.text.UART_PutArray,"ax",%progbits
 1107              		.align	2
 1108              		.global	UART_PutArray
 1109              		.thumb
 1110              		.thumb_func
 1111              		.type	UART_PutArray, %function
 1112              	UART_PutArray:
 1113              	.LFB21:
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 41


1157:Generated_Source\PSoC5/UART.c ****             }
1158:Generated_Source\PSoC5/UART.c ****         }
1159:Generated_Source\PSoC5/UART.c ****     }
1160:Generated_Source\PSoC5/UART.c **** 
1161:Generated_Source\PSoC5/UART.c **** 
1162:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1163:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_PutArray
1164:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1165:Generated_Source\PSoC5/UART.c ****     *
1166:Generated_Source\PSoC5/UART.c ****     * Summary:
1167:Generated_Source\PSoC5/UART.c ****     *  Places N bytes of data from a memory array into the TX buffer for
1168:Generated_Source\PSoC5/UART.c ****     *  transmission.
1169:Generated_Source\PSoC5/UART.c ****     *
1170:Generated_Source\PSoC5/UART.c ****     * Parameters:
1171:Generated_Source\PSoC5/UART.c ****     *  string[]: Address of the memory array residing in RAM or ROM.
1172:Generated_Source\PSoC5/UART.c ****     *  byteCount: Number of bytes to be transmitted. The type depends on TX Buffer
1173:Generated_Source\PSoC5/UART.c ****     *             Size parameter.
1174:Generated_Source\PSoC5/UART.c ****     *
1175:Generated_Source\PSoC5/UART.c ****     * Return:
1176:Generated_Source\PSoC5/UART.c ****     *  None.
1177:Generated_Source\PSoC5/UART.c ****     *
1178:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1179:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1180:Generated_Source\PSoC5/UART.c ****     *     initialized.
1181:Generated_Source\PSoC5/UART.c ****     *
1182:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1183:Generated_Source\PSoC5/UART.c ****     *  No.
1184:Generated_Source\PSoC5/UART.c ****     *
1185:Generated_Source\PSoC5/UART.c ****     * Theory:
1186:Generated_Source\PSoC5/UART.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1187:Generated_Source\PSoC5/UART.c ****     *  function blocks until the last character of the string is loaded into the
1188:Generated_Source\PSoC5/UART.c ****     *  TX buffer.
1189:Generated_Source\PSoC5/UART.c ****     *
1190:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1191:Generated_Source\PSoC5/UART.c ****     void UART_PutArray(const uint8 string[], uint16 byteCount)
1192:Generated_Source\PSoC5/UART.c ****                                                                     
1193:Generated_Source\PSoC5/UART.c ****     {
 1114              		.loc 1 1193 0
 1115              		.cfi_startproc
 1116              		@ args = 0, pretend = 0, frame = 0
 1117              		@ frame_needed = 0, uses_anonymous_args = 0
 1118              	.LVL77:
1194:Generated_Source\PSoC5/UART.c ****         uint16 bufIndex = 0u;
1195:Generated_Source\PSoC5/UART.c **** 
1196:Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function */
1197:Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 1119              		.loc 1 1197 0
 1120 0000 084B     		ldr	r3, .L104
 1121 0002 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1122 0004 33B9     		cbnz	r3, .L102
 1123 0006 7047     		bx	lr
 1124              	.LVL78:
 1125              	.L101:
 1126              		.cfi_def_cfa_offset 16
 1127              		.cfi_offset 4, -16
 1128              		.cfi_offset 5, -12
 1129              		.cfi_offset 6, -8
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 42


 1130              		.cfi_offset 14, -4
1198:Generated_Source\PSoC5/UART.c ****         {
1199:Generated_Source\PSoC5/UART.c ****             while(bufIndex < byteCount)
1200:Generated_Source\PSoC5/UART.c ****             {
1201:Generated_Source\PSoC5/UART.c ****                 UART_PutChar(string[bufIndex]);
 1131              		.loc 1 1201 0
 1132 0008 305D     		ldrb	r0, [r6, r4]	@ zero_extendqisi2
 1133 000a FFF7FEFF 		bl	UART_PutChar
 1134              	.LVL79:
1202:Generated_Source\PSoC5/UART.c ****                 bufIndex++;
 1135              		.loc 1 1202 0
 1136 000e 0134     		adds	r4, r4, #1
 1137              	.LVL80:
 1138 0010 A4B2     		uxth	r4, r4
 1139              	.LVL81:
 1140 0012 03E0     		b	.L99
 1141              	.LVL82:
 1142              	.L102:
 1143              		.cfi_def_cfa_offset 0
 1144              		.cfi_restore 4
 1145              		.cfi_restore 5
 1146              		.cfi_restore 6
 1147              		.cfi_restore 14
1193:Generated_Source\PSoC5/UART.c ****         uint16 bufIndex = 0u;
 1148              		.loc 1 1193 0
 1149 0014 70B5     		push	{r4, r5, r6, lr}
 1150              		.cfi_def_cfa_offset 16
 1151              		.cfi_offset 4, -16
 1152              		.cfi_offset 5, -12
 1153              		.cfi_offset 6, -8
 1154              		.cfi_offset 14, -4
 1155 0016 0D46     		mov	r5, r1
 1156 0018 0646     		mov	r6, r0
 1157 001a 0024     		movs	r4, #0
 1158              	.LVL83:
 1159              	.L99:
1199:Generated_Source\PSoC5/UART.c ****             {
 1160              		.loc 1 1199 0
 1161 001c AC42     		cmp	r4, r5
 1162 001e F3D3     		bcc	.L101
 1163 0020 70BD     		pop	{r4, r5, r6, pc}
 1164              	.LVL84:
 1165              	.L105:
 1166 0022 00BF     		.align	2
 1167              	.L104:
 1168 0024 00000000 		.word	.LANCHOR0
 1169              		.cfi_endproc
 1170              	.LFE21:
 1171              		.size	UART_PutArray, .-UART_PutArray
 1172              		.section	.text.UART_PutCRLF,"ax",%progbits
 1173              		.align	2
 1174              		.global	UART_PutCRLF
 1175              		.thumb
 1176              		.thumb_func
 1177              		.type	UART_PutCRLF, %function
 1178              	UART_PutCRLF:
 1179              	.LFB22:
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 43


1203:Generated_Source\PSoC5/UART.c ****             }
1204:Generated_Source\PSoC5/UART.c ****         }
1205:Generated_Source\PSoC5/UART.c ****     }
1206:Generated_Source\PSoC5/UART.c **** 
1207:Generated_Source\PSoC5/UART.c **** 
1208:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1209:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_PutCRLF
1210:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1211:Generated_Source\PSoC5/UART.c ****     *
1212:Generated_Source\PSoC5/UART.c ****     * Summary:
1213:Generated_Source\PSoC5/UART.c ****     *  Writes a byte of data followed by a carriage return (0x0D) and line feed
1214:Generated_Source\PSoC5/UART.c ****     *  (0x0A) to the transmit buffer.
1215:Generated_Source\PSoC5/UART.c ****     *
1216:Generated_Source\PSoC5/UART.c ****     * Parameters:
1217:Generated_Source\PSoC5/UART.c ****     *  txDataByte: Data byte to transmit before the carriage return and line feed.
1218:Generated_Source\PSoC5/UART.c ****     *
1219:Generated_Source\PSoC5/UART.c ****     * Return:
1220:Generated_Source\PSoC5/UART.c ****     *  None.
1221:Generated_Source\PSoC5/UART.c ****     *
1222:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1223:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1224:Generated_Source\PSoC5/UART.c ****     *     initialized.
1225:Generated_Source\PSoC5/UART.c ****     *
1226:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1227:Generated_Source\PSoC5/UART.c ****     *  No.
1228:Generated_Source\PSoC5/UART.c ****     *
1229:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1230:Generated_Source\PSoC5/UART.c ****     void UART_PutCRLF(uint8 txDataByte) 
1231:Generated_Source\PSoC5/UART.c ****     {
 1180              		.loc 1 1231 0
 1181              		.cfi_startproc
 1182              		@ args = 0, pretend = 0, frame = 0
 1183              		@ frame_needed = 0, uses_anonymous_args = 0
 1184              	.LVL85:
 1185 0000 08B5     		push	{r3, lr}
 1186              		.cfi_def_cfa_offset 8
 1187              		.cfi_offset 3, -8
 1188              		.cfi_offset 14, -4
1232:Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function */
1233:Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 1189              		.loc 1 1233 0
 1190 0002 064B     		ldr	r3, .L109
 1191 0004 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1192 0006 3BB1     		cbz	r3, .L106
1234:Generated_Source\PSoC5/UART.c ****         {
1235:Generated_Source\PSoC5/UART.c ****             UART_PutChar(txDataByte);
 1193              		.loc 1 1235 0
 1194 0008 FFF7FEFF 		bl	UART_PutChar
 1195              	.LVL86:
1236:Generated_Source\PSoC5/UART.c ****             UART_PutChar(0x0Du);
 1196              		.loc 1 1236 0
 1197 000c 0D20     		movs	r0, #13
 1198 000e FFF7FEFF 		bl	UART_PutChar
 1199              	.LVL87:
1237:Generated_Source\PSoC5/UART.c ****             UART_PutChar(0x0Au);
 1200              		.loc 1 1237 0
 1201 0012 0A20     		movs	r0, #10
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 44


 1202 0014 FFF7FEFF 		bl	UART_PutChar
 1203              	.LVL88:
 1204              	.L106:
 1205 0018 08BD     		pop	{r3, pc}
 1206              	.L110:
 1207 001a 00BF     		.align	2
 1208              	.L109:
 1209 001c 00000000 		.word	.LANCHOR0
 1210              		.cfi_endproc
 1211              	.LFE22:
 1212              		.size	UART_PutCRLF, .-UART_PutCRLF
 1213              		.section	.text.UART_GetTxBufferSize,"ax",%progbits
 1214              		.align	2
 1215              		.global	UART_GetTxBufferSize
 1216              		.thumb
 1217              		.thumb_func
 1218              		.type	UART_GetTxBufferSize, %function
 1219              	UART_GetTxBufferSize:
 1220              	.LFB23:
1238:Generated_Source\PSoC5/UART.c ****         }
1239:Generated_Source\PSoC5/UART.c ****     }
1240:Generated_Source\PSoC5/UART.c **** 
1241:Generated_Source\PSoC5/UART.c **** 
1242:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1243:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_GetTxBufferSize
1244:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1245:Generated_Source\PSoC5/UART.c ****     *
1246:Generated_Source\PSoC5/UART.c ****     * Summary:
1247:Generated_Source\PSoC5/UART.c ****     *  Returns the number of bytes in the TX buffer which are waiting to be 
1248:Generated_Source\PSoC5/UART.c ****     *  transmitted.
1249:Generated_Source\PSoC5/UART.c ****     *  * TX software buffer is disabled (TX Buffer Size parameter is equal to 4): 
1250:Generated_Source\PSoC5/UART.c ****     *    returns 0 for empty TX FIFO, 1 for not full TX FIFO or 4 for full TX FIFO.
1251:Generated_Source\PSoC5/UART.c ****     *  * TX software buffer is enabled: returns the number of bytes in the TX 
1252:Generated_Source\PSoC5/UART.c ****     *    software buffer which are waiting to be transmitted. Bytes available in the
1253:Generated_Source\PSoC5/UART.c ****     *    TX FIFO do not count.
1254:Generated_Source\PSoC5/UART.c ****     *
1255:Generated_Source\PSoC5/UART.c ****     * Parameters:
1256:Generated_Source\PSoC5/UART.c ****     *  None.
1257:Generated_Source\PSoC5/UART.c ****     *
1258:Generated_Source\PSoC5/UART.c ****     * Return:
1259:Generated_Source\PSoC5/UART.c ****     *  Number of bytes used in the TX buffer. Return value type depends on the TX 
1260:Generated_Source\PSoC5/UART.c ****     *  Buffer Size parameter.
1261:Generated_Source\PSoC5/UART.c ****     *
1262:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1263:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferWrite - used to calculate left space.
1264:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferRead - used to calculate left space.
1265:Generated_Source\PSoC5/UART.c ****     *
1266:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1267:Generated_Source\PSoC5/UART.c ****     *  No.
1268:Generated_Source\PSoC5/UART.c ****     *
1269:Generated_Source\PSoC5/UART.c ****     * Theory:
1270:Generated_Source\PSoC5/UART.c ****     *  Allows the user to find out how full the TX Buffer is.
1271:Generated_Source\PSoC5/UART.c ****     *
1272:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1273:Generated_Source\PSoC5/UART.c ****     uint16 UART_GetTxBufferSize(void)
1274:Generated_Source\PSoC5/UART.c ****                                                             
1275:Generated_Source\PSoC5/UART.c ****     {
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 45


 1221              		.loc 1 1275 0
 1222              		.cfi_startproc
 1223              		@ args = 0, pretend = 0, frame = 0
 1224              		@ frame_needed = 0, uses_anonymous_args = 0
 1225              		@ link register save eliminated.
1276:Generated_Source\PSoC5/UART.c ****         uint16 size;
1277:Generated_Source\PSoC5/UART.c **** 
1278:Generated_Source\PSoC5/UART.c ****     #if (UART_TX_INTERRUPT_ENABLED)
1279:Generated_Source\PSoC5/UART.c **** 
1280:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt. */
1281:Generated_Source\PSoC5/UART.c ****         UART_DisableTxInt();
 1226              		.loc 1 1281 0
 1227 0000 0222     		movs	r2, #2
 1228 0002 104B     		ldr	r3, .L115
 1229 0004 1A60     		str	r2, [r3]
1282:Generated_Source\PSoC5/UART.c **** 
1283:Generated_Source\PSoC5/UART.c ****         if(UART_txBufferRead == UART_txBufferWrite)
 1230              		.loc 1 1283 0
 1231 0006 104B     		ldr	r3, .L115+4
 1232 0008 1A89     		ldrh	r2, [r3, #8]
 1233 000a 92B2     		uxth	r2, r2
 1234 000c 5B89     		ldrh	r3, [r3, #10]
 1235 000e 9A42     		cmp	r2, r3
 1236 0010 12D0     		beq	.L114
1284:Generated_Source\PSoC5/UART.c ****         {
1285:Generated_Source\PSoC5/UART.c ****             size = 0u;
1286:Generated_Source\PSoC5/UART.c ****         }
1287:Generated_Source\PSoC5/UART.c ****         else if(UART_txBufferRead < UART_txBufferWrite)
 1237              		.loc 1 1287 0
 1238 0012 0D4A     		ldr	r2, .L115+4
 1239 0014 1289     		ldrh	r2, [r2, #8]
 1240 0016 92B2     		uxth	r2, r2
 1241 0018 9342     		cmp	r3, r2
 1242 001a 05D9     		bls	.L113
1288:Generated_Source\PSoC5/UART.c ****         {
1289:Generated_Source\PSoC5/UART.c ****             size = (UART_txBufferWrite - UART_txBufferRead);
 1243              		.loc 1 1289 0
 1244 001c 0A4A     		ldr	r2, .L115+4
 1245 001e 1089     		ldrh	r0, [r2, #8]
 1246 0020 80B2     		uxth	r0, r0
 1247 0022 181A     		subs	r0, r3, r0
 1248 0024 80B2     		uxth	r0, r0
 1249              	.LVL89:
 1250 0026 08E0     		b	.L112
 1251              	.LVL90:
 1252              	.L113:
1290:Generated_Source\PSoC5/UART.c ****         }
1291:Generated_Source\PSoC5/UART.c ****         else
1292:Generated_Source\PSoC5/UART.c ****         {
1293:Generated_Source\PSoC5/UART.c ****             size = (UART_TX_BUFFER_SIZE - UART_txBufferRead) +
 1253              		.loc 1 1293 0
 1254 0028 074A     		ldr	r2, .L115+4
 1255 002a 1089     		ldrh	r0, [r2, #8]
 1256 002c 80B2     		uxth	r0, r0
 1257 002e 181A     		subs	r0, r3, r0
 1258 0030 00F58070 		add	r0, r0, #256
 1259 0034 80B2     		uxth	r0, r0
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 46


 1260              	.LVL91:
 1261 0036 00E0     		b	.L112
 1262              	.LVL92:
 1263              	.L114:
1285:Generated_Source\PSoC5/UART.c ****         }
 1264              		.loc 1 1285 0
 1265 0038 0020     		movs	r0, #0
 1266              	.L112:
 1267              	.LVL93:
1294:Generated_Source\PSoC5/UART.c ****                     UART_txBufferWrite;
1295:Generated_Source\PSoC5/UART.c ****         }
1296:Generated_Source\PSoC5/UART.c **** 
1297:Generated_Source\PSoC5/UART.c ****         UART_EnableTxInt();
 1268              		.loc 1 1297 0
 1269 003a 0222     		movs	r2, #2
 1270 003c 034B     		ldr	r3, .L115+8
 1271 003e 1A60     		str	r2, [r3]
1298:Generated_Source\PSoC5/UART.c **** 
1299:Generated_Source\PSoC5/UART.c ****     #else
1300:Generated_Source\PSoC5/UART.c **** 
1301:Generated_Source\PSoC5/UART.c ****         size = UART_TXSTATUS_REG;
1302:Generated_Source\PSoC5/UART.c **** 
1303:Generated_Source\PSoC5/UART.c ****         /* Is the fifo is full. */
1304:Generated_Source\PSoC5/UART.c ****         if((size & UART_TX_STS_FIFO_FULL) != 0u)
1305:Generated_Source\PSoC5/UART.c ****         {
1306:Generated_Source\PSoC5/UART.c ****             size = UART_FIFO_LENGTH;
1307:Generated_Source\PSoC5/UART.c ****         }
1308:Generated_Source\PSoC5/UART.c ****         else if((size & UART_TX_STS_FIFO_EMPTY) != 0u)
1309:Generated_Source\PSoC5/UART.c ****         {
1310:Generated_Source\PSoC5/UART.c ****             size = 0u;
1311:Generated_Source\PSoC5/UART.c ****         }
1312:Generated_Source\PSoC5/UART.c ****         else
1313:Generated_Source\PSoC5/UART.c ****         {
1314:Generated_Source\PSoC5/UART.c ****             /* We only know there is data in the fifo. */
1315:Generated_Source\PSoC5/UART.c ****             size = 1u;
1316:Generated_Source\PSoC5/UART.c ****         }
1317:Generated_Source\PSoC5/UART.c **** 
1318:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_TX_INTERRUPT_ENABLED) */
1319:Generated_Source\PSoC5/UART.c **** 
1320:Generated_Source\PSoC5/UART.c ****     return(size);
1321:Generated_Source\PSoC5/UART.c ****     }
 1272              		.loc 1 1321 0
 1273 0040 7047     		bx	lr
 1274              	.L116:
 1275 0042 00BF     		.align	2
 1276              	.L115:
 1277 0044 80E100E0 		.word	-536813184
 1278 0048 00000000 		.word	.LANCHOR0
 1279 004c 00E100E0 		.word	-536813312
 1280              		.cfi_endproc
 1281              	.LFE23:
 1282              		.size	UART_GetTxBufferSize, .-UART_GetTxBufferSize
 1283              		.section	.text.UART_ClearTxBuffer,"ax",%progbits
 1284              		.align	2
 1285              		.global	UART_ClearTxBuffer
 1286              		.thumb
 1287              		.thumb_func
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 47


 1288              		.type	UART_ClearTxBuffer, %function
 1289              	UART_ClearTxBuffer:
 1290              	.LFB24:
1322:Generated_Source\PSoC5/UART.c **** 
1323:Generated_Source\PSoC5/UART.c **** 
1324:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1325:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ClearTxBuffer
1326:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1327:Generated_Source\PSoC5/UART.c ****     *
1328:Generated_Source\PSoC5/UART.c ****     * Summary:
1329:Generated_Source\PSoC5/UART.c ****     *  Clears all data from the TX buffer and hardware TX FIFO.
1330:Generated_Source\PSoC5/UART.c ****     *
1331:Generated_Source\PSoC5/UART.c ****     * Parameters:
1332:Generated_Source\PSoC5/UART.c ****     *  None.
1333:Generated_Source\PSoC5/UART.c ****     *
1334:Generated_Source\PSoC5/UART.c ****     * Return:
1335:Generated_Source\PSoC5/UART.c ****     *  None.
1336:Generated_Source\PSoC5/UART.c ****     *
1337:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1338:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferWrite - cleared to zero.
1339:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferRead - cleared to zero.
1340:Generated_Source\PSoC5/UART.c ****     *
1341:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1342:Generated_Source\PSoC5/UART.c ****     *  No.
1343:Generated_Source\PSoC5/UART.c ****     *
1344:Generated_Source\PSoC5/UART.c ****     * Theory:
1345:Generated_Source\PSoC5/UART.c ****     *  Setting the pointers to zero makes the system believe there is no data to
1346:Generated_Source\PSoC5/UART.c ****     *  read and writing will resume at address 0 overwriting any data that may have
1347:Generated_Source\PSoC5/UART.c ****     *  remained in the RAM.
1348:Generated_Source\PSoC5/UART.c ****     *
1349:Generated_Source\PSoC5/UART.c ****     * Side Effects:
1350:Generated_Source\PSoC5/UART.c ****     *  Data waiting in the transmit buffer is not sent; a byte that is currently
1351:Generated_Source\PSoC5/UART.c ****     *  transmitting finishes transmitting.
1352:Generated_Source\PSoC5/UART.c ****     *
1353:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1354:Generated_Source\PSoC5/UART.c ****     void UART_ClearTxBuffer(void) 
1355:Generated_Source\PSoC5/UART.c ****     {
 1291              		.loc 1 1355 0
 1292              		.cfi_startproc
 1293              		@ args = 0, pretend = 0, frame = 0
 1294              		@ frame_needed = 0, uses_anonymous_args = 0
 1295 0000 08B5     		push	{r3, lr}
 1296              		.cfi_def_cfa_offset 8
 1297              		.cfi_offset 3, -8
 1298              		.cfi_offset 14, -4
1356:Generated_Source\PSoC5/UART.c ****         uint8 enableInterrupts;
1357:Generated_Source\PSoC5/UART.c **** 
1358:Generated_Source\PSoC5/UART.c ****         enableInterrupts = CyEnterCriticalSection();
 1299              		.loc 1 1358 0
 1300 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 1301              	.LVL94:
1359:Generated_Source\PSoC5/UART.c ****         /* Clear the HW FIFO */
1360:Generated_Source\PSoC5/UART.c ****         UART_TXDATA_AUX_CTL_REG |= (uint8)  UART_TX_FIFO_CLR;
 1302              		.loc 1 1360 0
 1303 0006 0A4B     		ldr	r3, .L119
 1304 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1305 000a 42F00102 		orr	r2, r2, #1
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 48


 1306 000e 1A70     		strb	r2, [r3]
1361:Generated_Source\PSoC5/UART.c ****         UART_TXDATA_AUX_CTL_REG &= (uint8) ~UART_TX_FIFO_CLR;
 1307              		.loc 1 1361 0
 1308 0010 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1309 0012 02F0FE02 		and	r2, r2, #254
 1310 0016 1A70     		strb	r2, [r3]
1362:Generated_Source\PSoC5/UART.c ****         CyExitCriticalSection(enableInterrupts);
 1311              		.loc 1 1362 0
 1312 0018 FFF7FEFF 		bl	CyExitCriticalSection
 1313              	.LVL95:
1363:Generated_Source\PSoC5/UART.c **** 
1364:Generated_Source\PSoC5/UART.c ****     #if (UART_TX_INTERRUPT_ENABLED)
1365:Generated_Source\PSoC5/UART.c **** 
1366:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt. */
1367:Generated_Source\PSoC5/UART.c ****         UART_DisableTxInt();
 1314              		.loc 1 1367 0
 1315 001c 0223     		movs	r3, #2
 1316 001e 054A     		ldr	r2, .L119+4
 1317 0020 1360     		str	r3, [r2]
1368:Generated_Source\PSoC5/UART.c **** 
1369:Generated_Source\PSoC5/UART.c ****         UART_txBufferRead = 0u;
 1318              		.loc 1 1369 0
 1319 0022 054A     		ldr	r2, .L119+8
 1320 0024 0021     		movs	r1, #0
 1321 0026 1181     		strh	r1, [r2, #8]	@ movhi
1370:Generated_Source\PSoC5/UART.c ****         UART_txBufferWrite = 0u;
 1322              		.loc 1 1370 0
 1323 0028 5181     		strh	r1, [r2, #10]	@ movhi
1371:Generated_Source\PSoC5/UART.c **** 
1372:Generated_Source\PSoC5/UART.c ****         /* Enable Tx interrupt. */
1373:Generated_Source\PSoC5/UART.c ****         UART_EnableTxInt();
 1324              		.loc 1 1373 0
 1325 002a 044A     		ldr	r2, .L119+12
 1326 002c 1360     		str	r3, [r2]
 1327 002e 08BD     		pop	{r3, pc}
 1328              	.L120:
 1329              		.align	2
 1330              	.L119:
 1331 0030 98640040 		.word	1073767576
 1332 0034 80E100E0 		.word	-536813184
 1333 0038 00000000 		.word	.LANCHOR0
 1334 003c 00E100E0 		.word	-536813312
 1335              		.cfi_endproc
 1336              	.LFE24:
 1337              		.size	UART_ClearTxBuffer, .-UART_ClearTxBuffer
 1338              		.section	.text.UART_SendBreak,"ax",%progbits
 1339              		.align	2
 1340              		.global	UART_SendBreak
 1341              		.thumb
 1342              		.thumb_func
 1343              		.type	UART_SendBreak, %function
 1344              	UART_SendBreak:
 1345              	.LFB25:
1374:Generated_Source\PSoC5/UART.c **** 
1375:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_TX_INTERRUPT_ENABLED) */
1376:Generated_Source\PSoC5/UART.c ****     }
1377:Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 49


1378:Generated_Source\PSoC5/UART.c **** 
1379:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1380:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SendBreak
1381:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1382:Generated_Source\PSoC5/UART.c ****     *
1383:Generated_Source\PSoC5/UART.c ****     * Summary:
1384:Generated_Source\PSoC5/UART.c ****     *  Transmits a break signal on the bus.
1385:Generated_Source\PSoC5/UART.c ****     *
1386:Generated_Source\PSoC5/UART.c ****     * Parameters:
1387:Generated_Source\PSoC5/UART.c ****     *  uint8 retMode:  Send Break return mode. See the following table for options.
1388:Generated_Source\PSoC5/UART.c ****     *   UART_SEND_BREAK - Initialize registers for break, send the Break
1389:Generated_Source\PSoC5/UART.c ****     *       signal and return immediately.
1390:Generated_Source\PSoC5/UART.c ****     *   UART_WAIT_FOR_COMPLETE_REINIT - Wait until break transmission is
1391:Generated_Source\PSoC5/UART.c ****     *       complete, reinitialize registers to normal transmission mode then return
1392:Generated_Source\PSoC5/UART.c ****     *   UART_REINIT - Reinitialize registers to normal transmission mode
1393:Generated_Source\PSoC5/UART.c ****     *       then return.
1394:Generated_Source\PSoC5/UART.c ****     *   UART_SEND_WAIT_REINIT - Performs both options: 
1395:Generated_Source\PSoC5/UART.c ****     *      UART_SEND_BREAK and UART_WAIT_FOR_COMPLETE_REINIT.
1396:Generated_Source\PSoC5/UART.c ****     *      This option is recommended for most cases.
1397:Generated_Source\PSoC5/UART.c ****     *
1398:Generated_Source\PSoC5/UART.c ****     * Return:
1399:Generated_Source\PSoC5/UART.c ****     *  None.
1400:Generated_Source\PSoC5/UART.c ****     *
1401:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1402:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1403:Generated_Source\PSoC5/UART.c ****     *     initialized.
1404:Generated_Source\PSoC5/UART.c ****     *  txPeriod - static variable, used for keeping TX period configuration.
1405:Generated_Source\PSoC5/UART.c ****     *
1406:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1407:Generated_Source\PSoC5/UART.c ****     *  No.
1408:Generated_Source\PSoC5/UART.c ****     *
1409:Generated_Source\PSoC5/UART.c ****     * Theory:
1410:Generated_Source\PSoC5/UART.c ****     *  SendBreak function initializes registers to send 13-bit break signal. It is
1411:Generated_Source\PSoC5/UART.c ****     *  important to return the registers configuration to normal for continue 8-bit
1412:Generated_Source\PSoC5/UART.c ****     *  operation.
1413:Generated_Source\PSoC5/UART.c ****     *  There are 3 variants for this API usage:
1414:Generated_Source\PSoC5/UART.c ****     *  1) SendBreak(3) - function will send the Break signal and take care on the
1415:Generated_Source\PSoC5/UART.c ****     *     configuration returning. Function will block CPU until transmission
1416:Generated_Source\PSoC5/UART.c ****     *     complete.
1417:Generated_Source\PSoC5/UART.c ****     *  2) User may want to use blocking time if UART configured to the low speed
1418:Generated_Source\PSoC5/UART.c ****     *     operation
1419:Generated_Source\PSoC5/UART.c ****     *     Example for this case:
1420:Generated_Source\PSoC5/UART.c ****     *     SendBreak(0);     - initialize Break signal transmission
1421:Generated_Source\PSoC5/UART.c ****     *         Add your code here to use CPU time
1422:Generated_Source\PSoC5/UART.c ****     *     SendBreak(1);     - complete Break operation
1423:Generated_Source\PSoC5/UART.c ****     *  3) Same to 2) but user may want to initialize and use the interrupt to
1424:Generated_Source\PSoC5/UART.c ****     *     complete break operation.
1425:Generated_Source\PSoC5/UART.c ****     *     Example for this case:
1426:Generated_Source\PSoC5/UART.c ****     *     Initialize TX interrupt with "TX - On TX Complete" parameter
1427:Generated_Source\PSoC5/UART.c ****     *     SendBreak(0);     - initialize Break signal transmission
1428:Generated_Source\PSoC5/UART.c ****     *         Add your code here to use CPU time
1429:Generated_Source\PSoC5/UART.c ****     *     When interrupt appear with UART_TX_STS_COMPLETE status:
1430:Generated_Source\PSoC5/UART.c ****     *     SendBreak(2);     - complete Break operation
1431:Generated_Source\PSoC5/UART.c ****     *
1432:Generated_Source\PSoC5/UART.c ****     * Side Effects:
1433:Generated_Source\PSoC5/UART.c ****     *  The UART_SendBreak() function initializes registers to send a
1434:Generated_Source\PSoC5/UART.c ****     *  break signal.
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 50


1435:Generated_Source\PSoC5/UART.c ****     *  Break signal length depends on the break signal bits configuration.
1436:Generated_Source\PSoC5/UART.c ****     *  The register configuration should be reinitialized before normal 8-bit
1437:Generated_Source\PSoC5/UART.c ****     *  communication can continue.
1438:Generated_Source\PSoC5/UART.c ****     *
1439:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1440:Generated_Source\PSoC5/UART.c ****     void UART_SendBreak(uint8 retMode) 
1441:Generated_Source\PSoC5/UART.c ****     {
 1346              		.loc 1 1441 0
 1347              		.cfi_startproc
 1348              		@ args = 0, pretend = 0, frame = 0
 1349              		@ frame_needed = 0, uses_anonymous_args = 0
 1350              		@ link register save eliminated.
 1351              	.LVL96:
1442:Generated_Source\PSoC5/UART.c **** 
1443:Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function*/
1444:Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 1352              		.loc 1 1444 0
 1353 0000 124B     		ldr	r3, .L128
 1354 0002 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1355 0004 0BB3     		cbz	r3, .L121
 1356              	.LBB2:
1445:Generated_Source\PSoC5/UART.c ****         {
1446:Generated_Source\PSoC5/UART.c ****             /* Set the Counter to 13-bits and transmit a 00 byte */
1447:Generated_Source\PSoC5/UART.c ****             /* When that is done then reset the counter value back */
1448:Generated_Source\PSoC5/UART.c ****             uint8 tmpStat;
1449:Generated_Source\PSoC5/UART.c **** 
1450:Generated_Source\PSoC5/UART.c ****         #if(UART_HD_ENABLED) /* Half Duplex mode*/
1451:Generated_Source\PSoC5/UART.c **** 
1452:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_SEND_BREAK) ||
1453:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT ) )
1454:Generated_Source\PSoC5/UART.c ****             {
1455:Generated_Source\PSoC5/UART.c ****                 /* CTRL_HD_SEND_BREAK - sends break bits in HD mode */
1456:Generated_Source\PSoC5/UART.c ****                 UART_WriteControlRegister(UART_ReadControlRegister() |
1457:Generated_Source\PSoC5/UART.c ****                                                       UART_CTRL_HD_SEND_BREAK);
1458:Generated_Source\PSoC5/UART.c ****                 /* Send zeros */
1459:Generated_Source\PSoC5/UART.c ****                 UART_TXDATA_REG = 0u;
1460:Generated_Source\PSoC5/UART.c **** 
1461:Generated_Source\PSoC5/UART.c ****                 do /* Wait until transmit starts */
1462:Generated_Source\PSoC5/UART.c ****                 {
1463:Generated_Source\PSoC5/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
1464:Generated_Source\PSoC5/UART.c ****                 }
1465:Generated_Source\PSoC5/UART.c ****                 while((tmpStat & UART_TX_STS_FIFO_EMPTY) != 0u);
1466:Generated_Source\PSoC5/UART.c ****             }
1467:Generated_Source\PSoC5/UART.c **** 
1468:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
1469:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1470:Generated_Source\PSoC5/UART.c ****             {
1471:Generated_Source\PSoC5/UART.c ****                 do /* Wait until transmit complete */
1472:Generated_Source\PSoC5/UART.c ****                 {
1473:Generated_Source\PSoC5/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
1474:Generated_Source\PSoC5/UART.c ****                 }
1475:Generated_Source\PSoC5/UART.c ****                 while(((uint8)~tmpStat & UART_TX_STS_COMPLETE) != 0u);
1476:Generated_Source\PSoC5/UART.c ****             }
1477:Generated_Source\PSoC5/UART.c **** 
1478:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
1479:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_REINIT) ||
1480:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 51


1481:Generated_Source\PSoC5/UART.c ****             {
1482:Generated_Source\PSoC5/UART.c ****                 UART_WriteControlRegister(UART_ReadControlRegister() &
1483:Generated_Source\PSoC5/UART.c ****                                               (uint8)~UART_CTRL_HD_SEND_BREAK);
1484:Generated_Source\PSoC5/UART.c ****             }
1485:Generated_Source\PSoC5/UART.c **** 
1486:Generated_Source\PSoC5/UART.c ****         #else /* UART_HD_ENABLED Full Duplex mode */
1487:Generated_Source\PSoC5/UART.c **** 
1488:Generated_Source\PSoC5/UART.c ****             static uint8 txPeriod;
1489:Generated_Source\PSoC5/UART.c **** 
1490:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_SEND_BREAK) ||
 1357              		.loc 1 1490 0
 1358 0006 08B1     		cbz	r0, .L123
 1359              		.loc 1 1490 0 is_stmt 0 discriminator 1
 1360 0008 0328     		cmp	r0, #3
 1361 000a 0DD1     		bne	.L124
 1362              	.L123:
1491:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1492:Generated_Source\PSoC5/UART.c ****             {
1493:Generated_Source\PSoC5/UART.c ****                 /* CTRL_HD_SEND_BREAK - skip to send parity bit at Break signal in Full Duplex mode
1494:Generated_Source\PSoC5/UART.c ****                 #if( (UART_PARITY_TYPE != UART__B_UART__NONE_REVB) || \
1495:Generated_Source\PSoC5/UART.c ****                                     (UART_PARITY_TYPE_SW != 0u) )
1496:Generated_Source\PSoC5/UART.c ****                     UART_WriteControlRegister(UART_ReadControlRegister() |
1497:Generated_Source\PSoC5/UART.c ****                                                           UART_CTRL_HD_SEND_BREAK);
1498:Generated_Source\PSoC5/UART.c ****                 #endif /* End UART_PARITY_TYPE != UART__B_UART__NONE_REVB  */
1499:Generated_Source\PSoC5/UART.c **** 
1500:Generated_Source\PSoC5/UART.c ****                 #if(UART_TXCLKGEN_DP)
1501:Generated_Source\PSoC5/UART.c ****                     txPeriod = UART_TXBITCLKTX_COMPLETE_REG;
 1363              		.loc 1 1501 0 is_stmt 1
 1364 000c 104B     		ldr	r3, .L128+4
 1365 000e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1366 0010 0E4A     		ldr	r2, .L128
 1367 0012 1173     		strb	r1, [r2, #12]
1502:Generated_Source\PSoC5/UART.c ****                     UART_TXBITCLKTX_COMPLETE_REG = UART_TXBITCTR_BREAKBITS;
 1368              		.loc 1 1502 0
 1369 0014 6722     		movs	r2, #103
 1370 0016 1A70     		strb	r2, [r3]
1503:Generated_Source\PSoC5/UART.c ****                 #else
1504:Generated_Source\PSoC5/UART.c ****                     txPeriod = UART_TXBITCTR_PERIOD_REG;
1505:Generated_Source\PSoC5/UART.c ****                     UART_TXBITCTR_PERIOD_REG = UART_TXBITCTR_BREAKBITS8X;
1506:Generated_Source\PSoC5/UART.c ****                 #endif /* End UART_TXCLKGEN_DP */
1507:Generated_Source\PSoC5/UART.c **** 
1508:Generated_Source\PSoC5/UART.c ****                 /* Send zeros */
1509:Generated_Source\PSoC5/UART.c ****                 UART_TXDATA_REG = 0u;
 1371              		.loc 1 1509 0
 1372 0018 0022     		movs	r2, #0
 1373 001a 0F33     		adds	r3, r3, #15
 1374 001c 1A70     		strb	r2, [r3]
 1375              	.L125:
1510:Generated_Source\PSoC5/UART.c **** 
1511:Generated_Source\PSoC5/UART.c ****                 do /* Wait until transmit starts */
1512:Generated_Source\PSoC5/UART.c ****                 {
1513:Generated_Source\PSoC5/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
 1376              		.loc 1 1513 0 discriminator 1
 1377 001e 0D4B     		ldr	r3, .L128+8
 1378 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1379              	.LVL97:
1514:Generated_Source\PSoC5/UART.c ****                 }
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 52


1515:Generated_Source\PSoC5/UART.c ****                 while((tmpStat & UART_TX_STS_FIFO_EMPTY) != 0u);
 1380              		.loc 1 1515 0 discriminator 1
 1381 0022 13F0020F 		tst	r3, #2
 1382 0026 FAD1     		bne	.L125
 1383              	.LVL98:
 1384              	.L124:
1516:Generated_Source\PSoC5/UART.c ****             }
1517:Generated_Source\PSoC5/UART.c **** 
1518:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
 1385              		.loc 1 1518 0
 1386 0028 0128     		cmp	r0, #1
 1387 002a 01D0     		beq	.L126
 1388              		.loc 1 1518 0 is_stmt 0 discriminator 1
 1389 002c 0328     		cmp	r0, #3
 1390 002e 04D1     		bne	.L127
 1391              	.L126:
1519:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1520:Generated_Source\PSoC5/UART.c ****             {
1521:Generated_Source\PSoC5/UART.c ****                 do /* Wait until transmit complete */
1522:Generated_Source\PSoC5/UART.c ****                 {
1523:Generated_Source\PSoC5/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
 1392              		.loc 1 1523 0 is_stmt 1 discriminator 1
 1393 0030 084B     		ldr	r3, .L128+8
 1394 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1395              	.LVL99:
1524:Generated_Source\PSoC5/UART.c ****                 }
1525:Generated_Source\PSoC5/UART.c ****                 while(((uint8)~tmpStat & UART_TX_STS_COMPLETE) != 0u);
 1396              		.loc 1 1525 0 discriminator 1
 1397 0034 13F0010F 		tst	r3, #1
 1398 0038 FAD0     		beq	.L126
 1399              	.LVL100:
 1400              	.L127:
1526:Generated_Source\PSoC5/UART.c ****             }
1527:Generated_Source\PSoC5/UART.c **** 
1528:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
1529:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_REINIT) ||
 1401              		.loc 1 1529 0
 1402 003a 0138     		subs	r0, r0, #1
 1403              	.LVL101:
 1404 003c C0B2     		uxtb	r0, r0
1528:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_REINIT) ||
 1405              		.loc 1 1528 0
 1406 003e 0228     		cmp	r0, #2
 1407 0040 03D8     		bhi	.L121
1530:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1531:Generated_Source\PSoC5/UART.c ****             {
1532:Generated_Source\PSoC5/UART.c **** 
1533:Generated_Source\PSoC5/UART.c ****             #if(UART_TXCLKGEN_DP)
1534:Generated_Source\PSoC5/UART.c ****                 UART_TXBITCLKTX_COMPLETE_REG = txPeriod;
 1408              		.loc 1 1534 0
 1409 0042 024B     		ldr	r3, .L128
 1410 0044 1A7B     		ldrb	r2, [r3, #12]	@ zero_extendqisi2
 1411 0046 024B     		ldr	r3, .L128+4
 1412 0048 1A70     		strb	r2, [r3]
 1413              	.L121:
 1414 004a 7047     		bx	lr
 1415              	.L129:
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 53


 1416              		.align	2
 1417              	.L128:
 1418 004c 00000000 		.word	.LANCHOR0
 1419 0050 39640040 		.word	1073767481
 1420 0054 68640040 		.word	1073767528
 1421              	.LBE2:
 1422              		.cfi_endproc
 1423              	.LFE25:
 1424              		.size	UART_SendBreak, .-UART_SendBreak
 1425              		.section	.text.UART_SetTxAddressMode,"ax",%progbits
 1426              		.align	2
 1427              		.global	UART_SetTxAddressMode
 1428              		.thumb
 1429              		.thumb_func
 1430              		.type	UART_SetTxAddressMode, %function
 1431              	UART_SetTxAddressMode:
 1432              	.LFB26:
1535:Generated_Source\PSoC5/UART.c ****             #else
1536:Generated_Source\PSoC5/UART.c ****                 UART_TXBITCTR_PERIOD_REG = txPeriod;
1537:Generated_Source\PSoC5/UART.c ****             #endif /* End UART_TXCLKGEN_DP */
1538:Generated_Source\PSoC5/UART.c **** 
1539:Generated_Source\PSoC5/UART.c ****             #if( (UART_PARITY_TYPE != UART__B_UART__NONE_REVB) || \
1540:Generated_Source\PSoC5/UART.c ****                  (UART_PARITY_TYPE_SW != 0u) )
1541:Generated_Source\PSoC5/UART.c ****                 UART_WriteControlRegister(UART_ReadControlRegister() &
1542:Generated_Source\PSoC5/UART.c ****                                                       (uint8) ~UART_CTRL_HD_SEND_BREAK);
1543:Generated_Source\PSoC5/UART.c ****             #endif /* End UART_PARITY_TYPE != NONE */
1544:Generated_Source\PSoC5/UART.c ****             }
1545:Generated_Source\PSoC5/UART.c ****         #endif    /* End UART_HD_ENABLED */
1546:Generated_Source\PSoC5/UART.c ****         }
1547:Generated_Source\PSoC5/UART.c ****     }
1548:Generated_Source\PSoC5/UART.c **** 
1549:Generated_Source\PSoC5/UART.c **** 
1550:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1551:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetTxAddressMode
1552:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1553:Generated_Source\PSoC5/UART.c ****     *
1554:Generated_Source\PSoC5/UART.c ****     * Summary:
1555:Generated_Source\PSoC5/UART.c ****     *  Configures the transmitter to signal the next bytes is address or data.
1556:Generated_Source\PSoC5/UART.c ****     *
1557:Generated_Source\PSoC5/UART.c ****     * Parameters:
1558:Generated_Source\PSoC5/UART.c ****     *  addressMode: 
1559:Generated_Source\PSoC5/UART.c ****     *       UART_SET_SPACE - Configure the transmitter to send the next
1560:Generated_Source\PSoC5/UART.c ****     *                                    byte as a data.
1561:Generated_Source\PSoC5/UART.c ****     *       UART_SET_MARK  - Configure the transmitter to send the next
1562:Generated_Source\PSoC5/UART.c ****     *                                    byte as an address.
1563:Generated_Source\PSoC5/UART.c ****     *
1564:Generated_Source\PSoC5/UART.c ****     * Return:
1565:Generated_Source\PSoC5/UART.c ****     *  None.
1566:Generated_Source\PSoC5/UART.c ****     *
1567:Generated_Source\PSoC5/UART.c ****     * Side Effects:
1568:Generated_Source\PSoC5/UART.c ****     *  This function sets and clears UART_CTRL_MARK bit in the Control
1569:Generated_Source\PSoC5/UART.c ****     *  register.
1570:Generated_Source\PSoC5/UART.c ****     *
1571:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1572:Generated_Source\PSoC5/UART.c ****     void UART_SetTxAddressMode(uint8 addressMode) 
1573:Generated_Source\PSoC5/UART.c ****     {
 1433              		.loc 1 1573 0
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 54


 1434              		.cfi_startproc
 1435              		@ args = 0, pretend = 0, frame = 0
 1436              		@ frame_needed = 0, uses_anonymous_args = 0
 1437              		@ link register save eliminated.
 1438              	.LVL102:
 1439 0000 7047     		bx	lr
 1440              		.cfi_endproc
 1441              	.LFE26:
 1442              		.size	UART_SetTxAddressMode, .-UART_SetTxAddressMode
 1443              		.global	UART_rxBufferOverflow
 1444              		.global	UART_rxBufferLoopDetect
 1445              		.global	UART_rxBufferWrite
 1446              		.global	UART_rxBufferRead
 1447              		.comm	UART_rxBuffer,256,4
 1448              		.global	UART_errorStatus
 1449              		.global	UART_txBufferWrite
 1450              		.global	UART_txBufferRead
 1451              		.comm	UART_txBuffer,256,4
 1452              		.global	UART_initVar
 1453 0002 00BF     		.bss
 1454              		.align	1
 1455              		.set	.LANCHOR0,. + 0
 1456              		.type	UART_errorStatus, %object
 1457              		.size	UART_errorStatus, 1
 1458              	UART_errorStatus:
 1459 0000 00       		.space	1
 1460              		.type	UART_initVar, %object
 1461              		.size	UART_initVar, 1
 1462              	UART_initVar:
 1463 0001 00       		.space	1
 1464              		.type	UART_rxBufferRead, %object
 1465              		.size	UART_rxBufferRead, 2
 1466              	UART_rxBufferRead:
 1467 0002 0000     		.space	2
 1468              		.type	UART_rxBufferWrite, %object
 1469              		.size	UART_rxBufferWrite, 2
 1470              	UART_rxBufferWrite:
 1471 0004 0000     		.space	2
 1472              		.type	UART_rxBufferLoopDetect, %object
 1473              		.size	UART_rxBufferLoopDetect, 1
 1474              	UART_rxBufferLoopDetect:
 1475 0006 00       		.space	1
 1476              		.type	UART_rxBufferOverflow, %object
 1477              		.size	UART_rxBufferOverflow, 1
 1478              	UART_rxBufferOverflow:
 1479 0007 00       		.space	1
 1480              		.type	UART_txBufferRead, %object
 1481              		.size	UART_txBufferRead, 2
 1482              	UART_txBufferRead:
 1483 0008 0000     		.space	2
 1484              		.type	UART_txBufferWrite, %object
 1485              		.size	UART_txBufferWrite, 2
 1486              	UART_txBufferWrite:
 1487 000a 0000     		.space	2
 1488              		.type	txPeriod.5150, %object
 1489              		.size	txPeriod.5150, 1
 1490              	txPeriod.5150:
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 55


 1491 000c 00       		.space	1
 1492              		.text
 1493              	.Letext0:
 1494              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1495              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 1496              		.file 4 "Generated_Source\\PSoC5\\UART_IntClock.h"
 1497              		.section	.debug_info,"",%progbits
 1498              	.Ldebug_info0:
 1499 0000 AF070000 		.4byte	0x7af
 1500 0004 0400     		.2byte	0x4
 1501 0006 00000000 		.4byte	.Ldebug_abbrev0
 1502 000a 04       		.byte	0x4
 1503 000b 01       		.uleb128 0x1
 1504 000c 0D040000 		.4byte	.LASF84
 1505 0010 0C       		.byte	0xc
 1506 0011 3F030000 		.4byte	.LASF85
 1507 0015 72030000 		.4byte	.LASF86
 1508 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1509 001d 00000000 		.4byte	0
 1510 0021 00000000 		.4byte	.Ldebug_line0
 1511 0025 02       		.uleb128 0x2
 1512 0026 01       		.byte	0x1
 1513 0027 06       		.byte	0x6
 1514 0028 B2000000 		.4byte	.LASF0
 1515 002c 02       		.uleb128 0x2
 1516 002d 01       		.byte	0x1
 1517 002e 08       		.byte	0x8
 1518 002f D5030000 		.4byte	.LASF1
 1519 0033 02       		.uleb128 0x2
 1520 0034 02       		.byte	0x2
 1521 0035 05       		.byte	0x5
 1522 0036 F4030000 		.4byte	.LASF2
 1523 003a 02       		.uleb128 0x2
 1524 003b 02       		.byte	0x2
 1525 003c 07       		.byte	0x7
 1526 003d 2E020000 		.4byte	.LASF3
 1527 0041 02       		.uleb128 0x2
 1528 0042 04       		.byte	0x4
 1529 0043 05       		.byte	0x5
 1530 0044 C7000000 		.4byte	.LASF4
 1531 0048 02       		.uleb128 0x2
 1532 0049 04       		.byte	0x4
 1533 004a 07       		.byte	0x7
 1534 004b C9010000 		.4byte	.LASF5
 1535 004f 02       		.uleb128 0x2
 1536 0050 08       		.byte	0x8
 1537 0051 05       		.byte	0x5
 1538 0052 A4000000 		.4byte	.LASF6
 1539 0056 02       		.uleb128 0x2
 1540 0057 08       		.byte	0x8
 1541 0058 07       		.byte	0x7
 1542 0059 42000000 		.4byte	.LASF7
 1543 005d 03       		.uleb128 0x3
 1544 005e 04       		.byte	0x4
 1545 005f 05       		.byte	0x5
 1546 0060 696E7400 		.ascii	"int\000"
 1547 0064 02       		.uleb128 0x2
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 56


 1548 0065 04       		.byte	0x4
 1549 0066 07       		.byte	0x7
 1550 0067 8D010000 		.4byte	.LASF8
 1551 006b 04       		.uleb128 0x4
 1552 006c ED000000 		.4byte	.LASF9
 1553 0070 02       		.byte	0x2
 1554 0071 E901     		.2byte	0x1e9
 1555 0073 2C000000 		.4byte	0x2c
 1556 0077 04       		.uleb128 0x4
 1557 0078 00000000 		.4byte	.LASF10
 1558 007c 02       		.byte	0x2
 1559 007d EA01     		.2byte	0x1ea
 1560 007f 3A000000 		.4byte	0x3a
 1561 0083 04       		.uleb128 0x4
 1562 0084 32010000 		.4byte	.LASF11
 1563 0088 02       		.byte	0x2
 1564 0089 EB01     		.2byte	0x1eb
 1565 008b 48000000 		.4byte	0x48
 1566 008f 02       		.uleb128 0x2
 1567 0090 04       		.byte	0x4
 1568 0091 04       		.byte	0x4
 1569 0092 5C050000 		.4byte	.LASF12
 1570 0096 02       		.uleb128 0x2
 1571 0097 08       		.byte	0x8
 1572 0098 04       		.byte	0x4
 1573 0099 0C010000 		.4byte	.LASF13
 1574 009d 04       		.uleb128 0x4
 1575 009e CF040000 		.4byte	.LASF14
 1576 00a2 02       		.byte	0x2
 1577 00a3 FA01     		.2byte	0x1fa
 1578 00a5 A9000000 		.4byte	0xa9
 1579 00a9 02       		.uleb128 0x2
 1580 00aa 01       		.byte	0x1
 1581 00ab 08       		.byte	0x8
 1582 00ac CA040000 		.4byte	.LASF15
 1583 00b0 04       		.uleb128 0x4
 1584 00b1 BA030000 		.4byte	.LASF16
 1585 00b5 02       		.byte	0x2
 1586 00b6 9302     		.2byte	0x293
 1587 00b8 BC000000 		.4byte	0xbc
 1588 00bc 05       		.uleb128 0x5
 1589 00bd 6B000000 		.4byte	0x6b
 1590 00c1 05       		.uleb128 0x5
 1591 00c2 77000000 		.4byte	0x77
 1592 00c6 04       		.uleb128 0x4
 1593 00c7 9F020000 		.4byte	.LASF17
 1594 00cb 02       		.byte	0x2
 1595 00cc 9502     		.2byte	0x295
 1596 00ce D2000000 		.4byte	0xd2
 1597 00d2 05       		.uleb128 0x5
 1598 00d3 83000000 		.4byte	0x83
 1599 00d7 02       		.uleb128 0x2
 1600 00d8 08       		.byte	0x8
 1601 00d9 04       		.byte	0x4
 1602 00da B6020000 		.4byte	.LASF18
 1603 00de 02       		.uleb128 0x2
 1604 00df 04       		.byte	0x4
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 57


 1605 00e0 07       		.byte	0x7
 1606 00e1 AD020000 		.4byte	.LASF19
 1607 00e5 06       		.uleb128 0x6
 1608 00e6 60010000 		.4byte	.LASF20
 1609 00ea 01       		.byte	0x1
 1610 00eb 6A       		.byte	0x6a
 1611 00ec 00000000 		.4byte	.LFB1
 1612 00f0 5C000000 		.4byte	.LFE1-.LFB1
 1613 00f4 01       		.uleb128 0x1
 1614 00f5 9C       		.byte	0x9c
 1615 00f6 4D010000 		.4byte	0x14d
 1616 00fa 07       		.uleb128 0x7
 1617 00fb 0A000000 		.4byte	.LVL0
 1618 00ff 70070000 		.4byte	0x770
 1619 0103 0D010000 		.4byte	0x10d
 1620 0107 08       		.uleb128 0x8
 1621 0108 01       		.uleb128 0x1
 1622 0109 50       		.byte	0x50
 1623 010a 01       		.uleb128 0x1
 1624 010b 30       		.byte	0x30
 1625 010c 00       		.byte	0
 1626 010d 07       		.uleb128 0x7
 1627 010e 12000000 		.4byte	.LVL1
 1628 0112 7B070000 		.4byte	0x77b
 1629 0116 25010000 		.4byte	0x125
 1630 011a 08       		.uleb128 0x8
 1631 011b 01       		.uleb128 0x1
 1632 011c 50       		.byte	0x50
 1633 011d 01       		.uleb128 0x1
 1634 011e 30       		.byte	0x30
 1635 011f 08       		.uleb128 0x8
 1636 0120 01       		.uleb128 0x1
 1637 0121 51       		.byte	0x51
 1638 0122 01       		.uleb128 0x1
 1639 0123 37       		.byte	0x37
 1640 0124 00       		.byte	0
 1641 0125 07       		.uleb128 0x7
 1642 0126 2C000000 		.4byte	.LVL2
 1643 012a 70070000 		.4byte	0x770
 1644 012e 38010000 		.4byte	0x138
 1645 0132 08       		.uleb128 0x8
 1646 0133 01       		.uleb128 0x1
 1647 0134 50       		.byte	0x50
 1648 0135 01       		.uleb128 0x1
 1649 0136 31       		.byte	0x31
 1650 0137 00       		.byte	0
 1651 0138 09       		.uleb128 0x9
 1652 0139 34000000 		.4byte	.LVL3
 1653 013d 7B070000 		.4byte	0x77b
 1654 0141 08       		.uleb128 0x8
 1655 0142 01       		.uleb128 0x1
 1656 0143 50       		.byte	0x50
 1657 0144 01       		.uleb128 0x1
 1658 0145 31       		.byte	0x31
 1659 0146 08       		.uleb128 0x8
 1660 0147 01       		.uleb128 0x1
 1661 0148 51       		.byte	0x51
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 58


 1662 0149 01       		.uleb128 0x1
 1663 014a 37       		.byte	0x37
 1664 014b 00       		.byte	0
 1665 014c 00       		.byte	0
 1666 014d 06       		.uleb128 0x6
 1667 014e AC040000 		.4byte	.LASF21
 1668 0152 01       		.byte	0x1
 1669 0153 B7       		.byte	0xb7
 1670 0154 00000000 		.4byte	.LFB2
 1671 0158 50000000 		.4byte	.LFE2-.LFB2
 1672 015c 01       		.uleb128 0x1
 1673 015d 9C       		.byte	0x9c
 1674 015e 94010000 		.4byte	0x194
 1675 0162 0A       		.uleb128 0xa
 1676 0163 0A050000 		.4byte	.LASF24
 1677 0167 01       		.byte	0x1
 1678 0168 B9       		.byte	0xb9
 1679 0169 6B000000 		.4byte	0x6b
 1680 016d 00000000 		.4byte	.LLST0
 1681 0171 0B       		.uleb128 0xb
 1682 0172 06000000 		.4byte	.LVL4
 1683 0176 86070000 		.4byte	0x786
 1684 017a 0B       		.uleb128 0xb
 1685 017b 38000000 		.4byte	.LVL6
 1686 017f 91070000 		.4byte	0x791
 1687 0183 09       		.uleb128 0x9
 1688 0184 3E000000 		.4byte	.LVL7
 1689 0188 9C070000 		.4byte	0x79c
 1690 018c 08       		.uleb128 0x8
 1691 018d 01       		.uleb128 0x1
 1692 018e 50       		.byte	0x50
 1693 018f 02       		.uleb128 0x2
 1694 0190 74       		.byte	0x74
 1695 0191 00       		.sleb128 0
 1696 0192 00       		.byte	0
 1697 0193 00       		.byte	0
 1698 0194 06       		.uleb128 0x6
 1699 0195 59000000 		.4byte	.LASF22
 1700 0199 01       		.byte	0x1
 1701 019a 4C       		.byte	0x4c
 1702 019b 00000000 		.4byte	.LFB0
 1703 019f 1C000000 		.4byte	.LFE0-.LFB0
 1704 01a3 01       		.uleb128 0x1
 1705 01a4 9C       		.byte	0x9c
 1706 01a5 BC010000 		.4byte	0x1bc
 1707 01a9 0B       		.uleb128 0xb
 1708 01aa 0C000000 		.4byte	.LVL9
 1709 01ae E5000000 		.4byte	0xe5
 1710 01b2 0B       		.uleb128 0xb
 1711 01b3 16000000 		.4byte	.LVL10
 1712 01b7 4D010000 		.4byte	0x14d
 1713 01bb 00       		.byte	0
 1714 01bc 06       		.uleb128 0x6
 1715 01bd 44050000 		.4byte	.LASF23
 1716 01c1 01       		.byte	0x1
 1717 01c2 F0       		.byte	0xf0
 1718 01c3 00000000 		.4byte	.LFB3
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 59


 1719 01c7 4C000000 		.4byte	.LFE3-.LFB3
 1720 01cb 01       		.uleb128 0x1
 1721 01cc 9C       		.byte	0x9c
 1722 01cd 03020000 		.4byte	0x203
 1723 01d1 0A       		.uleb128 0xa
 1724 01d2 0A050000 		.4byte	.LASF24
 1725 01d6 01       		.byte	0x1
 1726 01d7 F2       		.byte	0xf2
 1727 01d8 6B000000 		.4byte	0x6b
 1728 01dc 13000000 		.4byte	.LLST1
 1729 01e0 0B       		.uleb128 0xb
 1730 01e1 06000000 		.4byte	.LVL11
 1731 01e5 86070000 		.4byte	0x786
 1732 01e9 0B       		.uleb128 0xb
 1733 01ea 16000000 		.4byte	.LVL13
 1734 01ee A7070000 		.4byte	0x7a7
 1735 01f2 09       		.uleb128 0x9
 1736 01f3 3A000000 		.4byte	.LVL14
 1737 01f7 9C070000 		.4byte	0x79c
 1738 01fb 08       		.uleb128 0x8
 1739 01fc 01       		.uleb128 0x1
 1740 01fd 50       		.byte	0x50
 1741 01fe 02       		.uleb128 0x2
 1742 01ff 74       		.byte	0x74
 1743 0200 00       		.sleb128 0
 1744 0201 00       		.byte	0
 1745 0202 00       		.byte	0
 1746 0203 0C       		.uleb128 0xc
 1747 0204 F3000000 		.4byte	.LASF50
 1748 0208 01       		.byte	0x1
 1749 0209 2701     		.2byte	0x127
 1750 020b 6B000000 		.4byte	0x6b
 1751 020f 00000000 		.4byte	.LFB4
 1752 0213 04000000 		.4byte	.LFE4-.LFB4
 1753 0217 01       		.uleb128 0x1
 1754 0218 9C       		.byte	0x9c
 1755 0219 0D       		.uleb128 0xd
 1756 021a 71050000 		.4byte	.LASF25
 1757 021e 01       		.byte	0x1
 1758 021f 3F01     		.2byte	0x13f
 1759 0221 00000000 		.4byte	.LFB5
 1760 0225 02000000 		.4byte	.LFE5-.LFB5
 1761 0229 01       		.uleb128 0x1
 1762 022a 9C       		.byte	0x9c
 1763 022b 3E020000 		.4byte	0x23e
 1764 022f 0E       		.uleb128 0xe
 1765 0230 48010000 		.4byte	.LASF27
 1766 0234 01       		.byte	0x1
 1767 0235 3F01     		.2byte	0x13f
 1768 0237 6B000000 		.4byte	0x6b
 1769 023b 01       		.uleb128 0x1
 1770 023c 50       		.byte	0x50
 1771 023d 00       		.byte	0
 1772 023e 0D       		.uleb128 0xd
 1773 023f D5040000 		.4byte	.LASF26
 1774 0243 01       		.byte	0x1
 1775 0244 6701     		.2byte	0x167
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 60


 1776 0246 00000000 		.4byte	.LFB6
 1777 024a 0C000000 		.4byte	.LFE6-.LFB6
 1778 024e 01       		.uleb128 0x1
 1779 024f 9C       		.byte	0x9c
 1780 0250 63020000 		.4byte	0x263
 1781 0254 0E       		.uleb128 0xe
 1782 0255 5C020000 		.4byte	.LASF28
 1783 0259 01       		.byte	0x1
 1784 025a 6701     		.2byte	0x167
 1785 025c 6B000000 		.4byte	0x6b
 1786 0260 01       		.uleb128 0x1
 1787 0261 50       		.byte	0x50
 1788 0262 00       		.byte	0
 1789 0263 0F       		.uleb128 0xf
 1790 0264 DD000000 		.4byte	.LASF32
 1791 0268 01       		.byte	0x1
 1792 0269 8801     		.2byte	0x188
 1793 026b 6B000000 		.4byte	0x6b
 1794 026f 00000000 		.4byte	.LFB7
 1795 0273 64000000 		.4byte	.LFE7-.LFB7
 1796 0277 01       		.uleb128 0x1
 1797 0278 9C       		.byte	0x9c
 1798 0279 AC020000 		.4byte	0x2ac
 1799 027d 10       		.uleb128 0x10
 1800 027e A5040000 		.4byte	.LASF29
 1801 0282 01       		.byte	0x1
 1802 0283 8A01     		.2byte	0x18a
 1803 0285 6B000000 		.4byte	0x6b
 1804 0289 26000000 		.4byte	.LLST2
 1805 028d 10       		.uleb128 0x10
 1806 028e FA040000 		.4byte	.LASF30
 1807 0292 01       		.byte	0x1
 1808 0293 8E01     		.2byte	0x18e
 1809 0295 77000000 		.4byte	0x77
 1810 0299 44000000 		.4byte	.LLST3
 1811 029d 11       		.uleb128 0x11
 1812 029e F0020000 		.4byte	.LASF31
 1813 02a2 01       		.byte	0x1
 1814 02a3 8F01     		.2byte	0x18f
 1815 02a5 77000000 		.4byte	0x77
 1816 02a9 01       		.uleb128 0x1
 1817 02aa 51       		.byte	0x51
 1818 02ab 00       		.byte	0
 1819 02ac 0F       		.uleb128 0xf
 1820 02ad B8040000 		.4byte	.LASF33
 1821 02b1 01       		.byte	0x1
 1822 02b2 E501     		.2byte	0x1e5
 1823 02b4 6B000000 		.4byte	0x6b
 1824 02b8 00000000 		.4byte	.LFB8
 1825 02bc 28000000 		.4byte	.LFE8-.LFB8
 1826 02c0 01       		.uleb128 0x1
 1827 02c1 9C       		.byte	0x9c
 1828 02c2 D5020000 		.4byte	0x2d5
 1829 02c6 11       		.uleb128 0x11
 1830 02c7 3D050000 		.4byte	.LASF34
 1831 02cb 01       		.byte	0x1
 1832 02cc E701     		.2byte	0x1e7
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 61


 1833 02ce 6B000000 		.4byte	0x6b
 1834 02d2 01       		.uleb128 0x1
 1835 02d3 50       		.byte	0x50
 1836 02d4 00       		.byte	0
 1837 02d5 0F       		.uleb128 0xf
 1838 02d6 ED040000 		.4byte	.LASF35
 1839 02da 01       		.byte	0x1
 1840 02db 1402     		.2byte	0x214
 1841 02dd 6B000000 		.4byte	0x6b
 1842 02e1 00000000 		.4byte	.LFB9
 1843 02e5 80000000 		.4byte	.LFE9-.LFB9
 1844 02e9 01       		.uleb128 0x1
 1845 02ea 9C       		.byte	0x9c
 1846 02eb 2E030000 		.4byte	0x32e
 1847 02ef 10       		.uleb128 0x10
 1848 02f0 A5040000 		.4byte	.LASF29
 1849 02f4 01       		.byte	0x1
 1850 02f5 1602     		.2byte	0x216
 1851 02f7 6B000000 		.4byte	0x6b
 1852 02fb 89000000 		.4byte	.LLST4
 1853 02ff 10       		.uleb128 0x10
 1854 0300 01030000 		.4byte	.LASF36
 1855 0304 01       		.byte	0x1
 1856 0305 1702     		.2byte	0x217
 1857 0307 6B000000 		.4byte	0x6b
 1858 030b D6000000 		.4byte	.LLST5
 1859 030f 10       		.uleb128 0x10
 1860 0310 FA040000 		.4byte	.LASF30
 1861 0314 01       		.byte	0x1
 1862 0315 1A02     		.2byte	0x21a
 1863 0317 77000000 		.4byte	0x77
 1864 031b E9000000 		.4byte	.LLST6
 1865 031f 11       		.uleb128 0x11
 1866 0320 F0020000 		.4byte	.LASF31
 1867 0324 01       		.byte	0x1
 1868 0325 1B02     		.2byte	0x21b
 1869 0327 77000000 		.4byte	0x77
 1870 032b 01       		.uleb128 0x1
 1871 032c 51       		.byte	0x51
 1872 032d 00       		.byte	0
 1873 032e 0F       		.uleb128 0xf
 1874 032f 80010000 		.4byte	.LASF37
 1875 0333 01       		.byte	0x1
 1876 0334 7A02     		.2byte	0x27a
 1877 0336 77000000 		.4byte	0x77
 1878 033a 00000000 		.4byte	.LFB10
 1879 033e 2C000000 		.4byte	.LFE10-.LFB10
 1880 0342 01       		.uleb128 0x1
 1881 0343 9C       		.byte	0x9c
 1882 0344 62030000 		.4byte	0x362
 1883 0348 10       		.uleb128 0x10
 1884 0349 BA010000 		.4byte	.LASF38
 1885 034d 01       		.byte	0x1
 1886 034e 7E02     		.2byte	0x27e
 1887 0350 77000000 		.4byte	0x77
 1888 0354 2E010000 		.4byte	.LLST7
 1889 0358 0B       		.uleb128 0xb
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 62


 1890 0359 1A000000 		.4byte	.LVL49
 1891 035d 63020000 		.4byte	0x263
 1892 0361 00       		.byte	0
 1893 0362 0F       		.uleb128 0xf
 1894 0363 28050000 		.4byte	.LASF39
 1895 0367 01       		.byte	0x1
 1896 0368 AB02     		.2byte	0x2ab
 1897 036a 77000000 		.4byte	0x77
 1898 036e 00000000 		.4byte	.LFB11
 1899 0372 6C000000 		.4byte	.LFE11-.LFB11
 1900 0376 01       		.uleb128 0x1
 1901 0377 9C       		.byte	0x9c
 1902 0378 8D030000 		.4byte	0x38d
 1903 037c 10       		.uleb128 0x10
 1904 037d 29020000 		.4byte	.LASF40
 1905 0381 01       		.byte	0x1
 1906 0382 AE02     		.2byte	0x2ae
 1907 0384 77000000 		.4byte	0x77
 1908 0388 41010000 		.4byte	.LLST8
 1909 038c 00       		.byte	0
 1910 038d 0D       		.uleb128 0xd
 1911 038e 8B050000 		.4byte	.LASF41
 1912 0392 01       		.byte	0x1
 1913 0393 F502     		.2byte	0x2f5
 1914 0395 00000000 		.4byte	.LFB12
 1915 0399 44000000 		.4byte	.LFE12-.LFB12
 1916 039d 01       		.uleb128 0x1
 1917 039e 9C       		.byte	0x9c
 1918 039f C6030000 		.4byte	0x3c6
 1919 03a3 10       		.uleb128 0x10
 1920 03a4 0A050000 		.4byte	.LASF24
 1921 03a8 01       		.byte	0x1
 1922 03a9 F702     		.2byte	0x2f7
 1923 03ab 6B000000 		.4byte	0x6b
 1924 03af 6A010000 		.4byte	.LLST9
 1925 03b3 0B       		.uleb128 0xb
 1926 03b4 06000000 		.4byte	.LVL55
 1927 03b8 86070000 		.4byte	0x786
 1928 03bc 0B       		.uleb128 0xb
 1929 03bd 1C000000 		.4byte	.LVL56
 1930 03c1 9C070000 		.4byte	0x79c
 1931 03c5 00       		.byte	0
 1932 03c6 0D       		.uleb128 0xd
 1933 03c7 BF030000 		.4byte	.LASF42
 1934 03cb 01       		.byte	0x1
 1935 03cc 2D03     		.2byte	0x32d
 1936 03ce 00000000 		.4byte	.LFB13
 1937 03d2 02000000 		.4byte	.LFE13-.LFB13
 1938 03d6 01       		.uleb128 0x1
 1939 03d7 9C       		.byte	0x9c
 1940 03d8 EB030000 		.4byte	0x3eb
 1941 03dc 0E       		.uleb128 0xe
 1942 03dd 13010000 		.4byte	.LASF43
 1943 03e1 01       		.byte	0x1
 1944 03e2 2D03     		.2byte	0x32d
 1945 03e4 6B000000 		.4byte	0x6b
 1946 03e8 01       		.uleb128 0x1
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 63


 1947 03e9 50       		.byte	0x50
 1948 03ea 00       		.byte	0
 1949 03eb 0D       		.uleb128 0xd
 1950 03ec CA020000 		.4byte	.LASF44
 1951 03f0 01       		.byte	0x1
 1952 03f1 5903     		.2byte	0x359
 1953 03f3 00000000 		.4byte	.LFB14
 1954 03f7 0C000000 		.4byte	.LFE14-.LFB14
 1955 03fb 01       		.uleb128 0x1
 1956 03fc 9C       		.byte	0x9c
 1957 03fd 10040000 		.4byte	0x410
 1958 0401 0E       		.uleb128 0xe
 1959 0402 C2020000 		.4byte	.LASF45
 1960 0406 01       		.byte	0x1
 1961 0407 5903     		.2byte	0x359
 1962 0409 6B000000 		.4byte	0x6b
 1963 040d 01       		.uleb128 0x1
 1964 040e 50       		.byte	0x50
 1965 040f 00       		.byte	0
 1966 0410 0D       		.uleb128 0xd
 1967 0411 DD020000 		.4byte	.LASF46
 1968 0415 01       		.byte	0x1
 1969 0416 6D03     		.2byte	0x36d
 1970 0418 00000000 		.4byte	.LFB15
 1971 041c 0C000000 		.4byte	.LFE15-.LFB15
 1972 0420 01       		.uleb128 0x1
 1973 0421 9C       		.byte	0x9c
 1974 0422 35040000 		.4byte	0x435
 1975 0426 0E       		.uleb128 0xe
 1976 0427 C2020000 		.4byte	.LASF45
 1977 042b 01       		.byte	0x1
 1978 042c 6D03     		.2byte	0x36d
 1979 042e 6B000000 		.4byte	0x6b
 1980 0432 01       		.uleb128 0x1
 1981 0433 50       		.byte	0x50
 1982 0434 00       		.byte	0
 1983 0435 0D       		.uleb128 0xd
 1984 0436 64000000 		.4byte	.LASF47
 1985 043a 01       		.byte	0x1
 1986 043b 8C03     		.2byte	0x38c
 1987 043d 00000000 		.4byte	.LFB16
 1988 0441 0C000000 		.4byte	.LFE16-.LFB16
 1989 0445 01       		.uleb128 0x1
 1990 0446 9C       		.byte	0x9c
 1991 0447 5A040000 		.4byte	0x45a
 1992 044b 0E       		.uleb128 0xe
 1993 044c 5C020000 		.4byte	.LASF28
 1994 0450 01       		.byte	0x1
 1995 0451 8C03     		.2byte	0x38c
 1996 0453 6B000000 		.4byte	0x6b
 1997 0457 01       		.uleb128 0x1
 1998 0458 50       		.byte	0x50
 1999 0459 00       		.byte	0
 2000 045a 0D       		.uleb128 0xd
 2001 045b E3030000 		.4byte	.LASF48
 2002 045f 01       		.byte	0x1
 2003 0460 AE03     		.2byte	0x3ae
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 64


 2004 0462 00000000 		.4byte	.LFB17
 2005 0466 60000000 		.4byte	.LFE17-.LFB17
 2006 046a 01       		.uleb128 0x1
 2007 046b 9C       		.byte	0x9c
 2008 046c 7F040000 		.4byte	0x47f
 2009 0470 0E       		.uleb128 0xe
 2010 0471 1D000000 		.4byte	.LASF49
 2011 0475 01       		.byte	0x1
 2012 0476 AE03     		.2byte	0x3ae
 2013 0478 6B000000 		.4byte	0x6b
 2014 047c 01       		.uleb128 0x1
 2015 047d 50       		.byte	0x50
 2016 047e 00       		.byte	0
 2017 047f 0C       		.uleb128 0xc
 2018 0480 79020000 		.4byte	.LASF51
 2019 0484 01       		.byte	0x1
 2020 0485 EB03     		.2byte	0x3eb
 2021 0487 6B000000 		.4byte	0x6b
 2022 048b 00000000 		.4byte	.LFB18
 2023 048f 0C000000 		.4byte	.LFE18-.LFB18
 2024 0493 01       		.uleb128 0x1
 2025 0494 9C       		.byte	0x9c
 2026 0495 0D       		.uleb128 0xd
 2027 0496 D0000000 		.4byte	.LASF52
 2028 049a 01       		.byte	0x1
 2029 049b 1104     		.2byte	0x411
 2030 049d 00000000 		.4byte	.LFB19
 2031 04a1 70000000 		.4byte	.LFE19-.LFB19
 2032 04a5 01       		.uleb128 0x1
 2033 04a6 9C       		.byte	0x9c
 2034 04a7 D8040000 		.4byte	0x4d8
 2035 04ab 0E       		.uleb128 0xe
 2036 04ac 1D000000 		.4byte	.LASF49
 2037 04b0 01       		.byte	0x1
 2038 04b1 1104     		.2byte	0x411
 2039 04b3 6B000000 		.4byte	0x6b
 2040 04b7 01       		.uleb128 0x1
 2041 04b8 50       		.byte	0x50
 2042 04b9 11       		.uleb128 0x11
 2043 04ba DB010000 		.4byte	.LASF53
 2044 04be 01       		.byte	0x1
 2045 04bf 1804     		.2byte	0x418
 2046 04c1 77000000 		.4byte	0x77
 2047 04c5 01       		.uleb128 0x1
 2048 04c6 51       		.byte	0x51
 2049 04c7 10       		.uleb128 0x10
 2050 04c8 50010000 		.4byte	.LASF54
 2051 04cc 01       		.byte	0x1
 2052 04cd 1904     		.2byte	0x419
 2053 04cf 77000000 		.4byte	0x77
 2054 04d3 7D010000 		.4byte	.LLST10
 2055 04d7 00       		.byte	0
 2056 04d8 0D       		.uleb128 0xd
 2057 04d9 62050000 		.4byte	.LASF55
 2058 04dd 01       		.byte	0x1
 2059 04de 7904     		.2byte	0x479
 2060 04e0 00000000 		.4byte	.LFB20
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 65


 2061 04e4 24000000 		.4byte	.LFE20-.LFB20
 2062 04e8 01       		.uleb128 0x1
 2063 04e9 9C       		.byte	0x9c
 2064 04ea 18050000 		.4byte	0x518
 2065 04ee 12       		.uleb128 0x12
 2066 04ef 3B000000 		.4byte	.LASF56
 2067 04f3 01       		.byte	0x1
 2068 04f4 7904     		.2byte	0x479
 2069 04f6 18050000 		.4byte	0x518
 2070 04fa 90010000 		.4byte	.LLST11
 2071 04fe 10       		.uleb128 0x10
 2072 04ff 53020000 		.4byte	.LASF57
 2073 0503 01       		.byte	0x1
 2074 0504 7B04     		.2byte	0x47b
 2075 0506 77000000 		.4byte	0x77
 2076 050a D2010000 		.4byte	.LLST12
 2077 050e 0B       		.uleb128 0xb
 2078 050f 0E000000 		.4byte	.LVL71
 2079 0513 95040000 		.4byte	0x495
 2080 0517 00       		.byte	0
 2081 0518 13       		.uleb128 0x13
 2082 0519 04       		.byte	0x4
 2083 051a 1E050000 		.4byte	0x51e
 2084 051e 14       		.uleb128 0x14
 2085 051f 9D000000 		.4byte	0x9d
 2086 0523 0D       		.uleb128 0xd
 2087 0524 EC010000 		.4byte	.LASF58
 2088 0528 01       		.byte	0x1
 2089 0529 A704     		.2byte	0x4a7
 2090 052b 00000000 		.4byte	.LFB21
 2091 052f 28000000 		.4byte	.LFE21-.LFB21
 2092 0533 01       		.uleb128 0x1
 2093 0534 9C       		.byte	0x9c
 2094 0535 73050000 		.4byte	0x573
 2095 0539 12       		.uleb128 0x12
 2096 053a 3B000000 		.4byte	.LASF56
 2097 053e 01       		.byte	0x1
 2098 053f A704     		.2byte	0x4a7
 2099 0541 73050000 		.4byte	0x573
 2100 0545 13020000 		.4byte	.LLST13
 2101 0549 12       		.uleb128 0x12
 2102 054a 9B040000 		.4byte	.LASF59
 2103 054e 01       		.byte	0x1
 2104 054f A704     		.2byte	0x4a7
 2105 0551 77000000 		.4byte	0x77
 2106 0555 55020000 		.4byte	.LLST14
 2107 0559 10       		.uleb128 0x10
 2108 055a 53020000 		.4byte	.LASF57
 2109 055e 01       		.byte	0x1
 2110 055f AA04     		.2byte	0x4aa
 2111 0561 77000000 		.4byte	0x77
 2112 0565 8F020000 		.4byte	.LLST15
 2113 0569 0B       		.uleb128 0xb
 2114 056a 0E000000 		.4byte	.LVL79
 2115 056e 95040000 		.4byte	0x495
 2116 0572 00       		.byte	0
 2117 0573 13       		.uleb128 0x13
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 66


 2118 0574 04       		.byte	0x4
 2119 0575 79050000 		.4byte	0x579
 2120 0579 14       		.uleb128 0x14
 2121 057a 6B000000 		.4byte	0x6b
 2122 057e 0D       		.uleb128 0xd
 2123 057f AD010000 		.4byte	.LASF60
 2124 0583 01       		.byte	0x1
 2125 0584 CE04     		.2byte	0x4ce
 2126 0586 00000000 		.4byte	.LFB22
 2127 058a 20000000 		.4byte	.LFE22-.LFB22
 2128 058e 01       		.uleb128 0x1
 2129 058f 9C       		.byte	0x9c
 2130 0590 D0050000 		.4byte	0x5d0
 2131 0594 12       		.uleb128 0x12
 2132 0595 1D000000 		.4byte	.LASF49
 2133 0599 01       		.byte	0x1
 2134 059a CE04     		.2byte	0x4ce
 2135 059c 6B000000 		.4byte	0x6b
 2136 05a0 D0020000 		.4byte	.LLST16
 2137 05a4 0B       		.uleb128 0xb
 2138 05a5 0C000000 		.4byte	.LVL86
 2139 05a9 95040000 		.4byte	0x495
 2140 05ad 07       		.uleb128 0x7
 2141 05ae 12000000 		.4byte	.LVL87
 2142 05b2 95040000 		.4byte	0x495
 2143 05b6 C0050000 		.4byte	0x5c0
 2144 05ba 08       		.uleb128 0x8
 2145 05bb 01       		.uleb128 0x1
 2146 05bc 50       		.byte	0x50
 2147 05bd 01       		.uleb128 0x1
 2148 05be 3D       		.byte	0x3d
 2149 05bf 00       		.byte	0
 2150 05c0 09       		.uleb128 0x9
 2151 05c1 18000000 		.4byte	.LVL88
 2152 05c5 95040000 		.4byte	0x495
 2153 05c9 08       		.uleb128 0x8
 2154 05ca 01       		.uleb128 0x1
 2155 05cb 50       		.byte	0x50
 2156 05cc 01       		.uleb128 0x1
 2157 05cd 3A       		.byte	0x3a
 2158 05ce 00       		.byte	0
 2159 05cf 00       		.byte	0
 2160 05d0 0F       		.uleb128 0xf
 2161 05d1 5D030000 		.4byte	.LASF61
 2162 05d5 01       		.byte	0x1
 2163 05d6 F904     		.2byte	0x4f9
 2164 05d8 77000000 		.4byte	0x77
 2165 05dc 00000000 		.4byte	.LFB23
 2166 05e0 50000000 		.4byte	.LFE23-.LFB23
 2167 05e4 01       		.uleb128 0x1
 2168 05e5 9C       		.byte	0x9c
 2169 05e6 FB050000 		.4byte	0x5fb
 2170 05ea 10       		.uleb128 0x10
 2171 05eb 29020000 		.4byte	.LASF40
 2172 05ef 01       		.byte	0x1
 2173 05f0 FC04     		.2byte	0x4fc
 2174 05f2 77000000 		.4byte	0x77
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 67


 2175 05f6 F1020000 		.4byte	.LLST17
 2176 05fa 00       		.byte	0
 2177 05fb 0D       		.uleb128 0xd
 2178 05fc 9A010000 		.4byte	.LASF62
 2179 0600 01       		.byte	0x1
 2180 0601 4A05     		.2byte	0x54a
 2181 0603 00000000 		.4byte	.LFB24
 2182 0607 40000000 		.4byte	.LFE24-.LFB24
 2183 060b 01       		.uleb128 0x1
 2184 060c 9C       		.byte	0x9c
 2185 060d 34060000 		.4byte	0x634
 2186 0611 10       		.uleb128 0x10
 2187 0612 0A050000 		.4byte	.LASF24
 2188 0616 01       		.byte	0x1
 2189 0617 4C05     		.2byte	0x54c
 2190 0619 6B000000 		.4byte	0x6b
 2191 061d 1A030000 		.4byte	.LLST18
 2192 0621 0B       		.uleb128 0xb
 2193 0622 06000000 		.4byte	.LVL94
 2194 0626 86070000 		.4byte	0x786
 2195 062a 0B       		.uleb128 0xb
 2196 062b 1C000000 		.4byte	.LVL95
 2197 062f 9C070000 		.4byte	0x79c
 2198 0633 00       		.byte	0
 2199 0634 0D       		.uleb128 0xd
 2200 0635 FE030000 		.4byte	.LASF63
 2201 0639 01       		.byte	0x1
 2202 063a A005     		.2byte	0x5a0
 2203 063c 00000000 		.4byte	.LFB25
 2204 0640 58000000 		.4byte	.LFE25-.LFB25
 2205 0644 01       		.uleb128 0x1
 2206 0645 9C       		.byte	0x9c
 2207 0646 87060000 		.4byte	0x687
 2208 064a 12       		.uleb128 0x12
 2209 064b 78010000 		.4byte	.LASF64
 2210 064f 01       		.byte	0x1
 2211 0650 A005     		.2byte	0x5a0
 2212 0652 6B000000 		.4byte	0x6b
 2213 0656 2D030000 		.4byte	.LLST19
 2214 065a 15       		.uleb128 0x15
 2215 065b 06000000 		.4byte	.LBB2
 2216 065f 52000000 		.4byte	.LBE2-.LBB2
 2217 0663 10       		.uleb128 0x10
 2218 0664 A5020000 		.4byte	.LASF65
 2219 0668 01       		.byte	0x1
 2220 0669 A805     		.2byte	0x5a8
 2221 066b 6B000000 		.4byte	0x6b
 2222 066f 4E030000 		.4byte	.LLST20
 2223 0673 11       		.uleb128 0x11
 2224 0674 BE000000 		.4byte	.LASF66
 2225 0678 01       		.byte	0x1
 2226 0679 D005     		.2byte	0x5d0
 2227 067b 6B000000 		.4byte	0x6b
 2228 067f 05       		.uleb128 0x5
 2229 0680 03       		.byte	0x3
 2230 0681 0C000000 		.4byte	txPeriod.5150
 2231 0685 00       		.byte	0
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 68


 2232 0686 00       		.byte	0
 2233 0687 0D       		.uleb128 0xd
 2234 0688 63020000 		.4byte	.LASF67
 2235 068c 01       		.byte	0x1
 2236 068d 2406     		.2byte	0x624
 2237 068f 00000000 		.4byte	.LFB26
 2238 0693 02000000 		.4byte	.LFE26-.LFB26
 2239 0697 01       		.uleb128 0x1
 2240 0698 9C       		.byte	0x9c
 2241 0699 AC060000 		.4byte	0x6ac
 2242 069d 0E       		.uleb128 0xe
 2243 069e 13010000 		.4byte	.LASF43
 2244 06a2 01       		.byte	0x1
 2245 06a3 2406     		.2byte	0x624
 2246 06a5 6B000000 		.4byte	0x6b
 2247 06a9 01       		.uleb128 0x1
 2248 06aa 50       		.byte	0x50
 2249 06ab 00       		.byte	0
 2250 06ac 16       		.uleb128 0x16
 2251 06ad 1B050000 		.4byte	.LASF68
 2252 06b1 01       		.byte	0x1
 2253 06b2 1B       		.byte	0x1b
 2254 06b3 6B000000 		.4byte	0x6b
 2255 06b7 05       		.uleb128 0x5
 2256 06b8 03       		.byte	0x3
 2257 06b9 00000000 		.4byte	UART_initVar
 2258 06bd 17       		.uleb128 0x17
 2259 06be BC000000 		.4byte	0xbc
 2260 06c2 CD060000 		.4byte	0x6cd
 2261 06c6 18       		.uleb128 0x18
 2262 06c7 DE000000 		.4byte	0xde
 2263 06cb FF       		.byte	0xff
 2264 06cc 00       		.byte	0
 2265 06cd 16       		.uleb128 0x16
 2266 06ce 6A010000 		.4byte	.LASF69
 2267 06d2 01       		.byte	0x1
 2268 06d3 1E       		.byte	0x1e
 2269 06d4 DE060000 		.4byte	0x6de
 2270 06d8 05       		.uleb128 0x5
 2271 06d9 03       		.byte	0x3
 2272 06da 00000000 		.4byte	UART_txBuffer
 2273 06de 05       		.uleb128 0x5
 2274 06df BD060000 		.4byte	0x6bd
 2275 06e3 16       		.uleb128 0x16
 2276 06e4 92000000 		.4byte	.LASF70
 2277 06e8 01       		.byte	0x1
 2278 06e9 1F       		.byte	0x1f
 2279 06ea C1000000 		.4byte	0xc1
 2280 06ee 05       		.uleb128 0x5
 2281 06ef 03       		.byte	0x3
 2282 06f0 00000000 		.4byte	UART_txBufferRead
 2283 06f4 16       		.uleb128 0x16
 2284 06f5 28000000 		.4byte	.LASF71
 2285 06f9 01       		.byte	0x1
 2286 06fa 20       		.byte	0x20
 2287 06fb 77000000 		.4byte	0x77
 2288 06ff 05       		.uleb128 0x5
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 69


 2289 0700 03       		.byte	0x3
 2290 0701 00000000 		.4byte	UART_txBufferWrite
 2291 0705 16       		.uleb128 0x16
 2292 0706 2E030000 		.4byte	.LASF72
 2293 070a 01       		.byte	0x1
 2294 070b 24       		.byte	0x24
 2295 070c 6B000000 		.4byte	0x6b
 2296 0710 05       		.uleb128 0x5
 2297 0711 03       		.byte	0x3
 2298 0712 00000000 		.4byte	UART_errorStatus
 2299 0716 16       		.uleb128 0x16
 2300 0717 4E050000 		.4byte	.LASF73
 2301 071b 01       		.byte	0x1
 2302 071c 25       		.byte	0x25
 2303 071d 27070000 		.4byte	0x727
 2304 0721 05       		.uleb128 0x5
 2305 0722 03       		.byte	0x3
 2306 0723 00000000 		.4byte	UART_rxBuffer
 2307 0727 05       		.uleb128 0x5
 2308 0728 BD060000 		.4byte	0x6bd
 2309 072c 16       		.uleb128 0x16
 2310 072d 41020000 		.4byte	.LASF74
 2311 0731 01       		.byte	0x1
 2312 0732 26       		.byte	0x26
 2313 0733 C1000000 		.4byte	0xc1
 2314 0737 05       		.uleb128 0x5
 2315 0738 03       		.byte	0x3
 2316 0739 00000000 		.4byte	UART_rxBufferRead
 2317 073d 16       		.uleb128 0x16
 2318 073e 1F010000 		.4byte	.LASF75
 2319 0742 01       		.byte	0x1
 2320 0743 27       		.byte	0x27
 2321 0744 C1000000 		.4byte	0xc1
 2322 0748 05       		.uleb128 0x5
 2323 0749 03       		.byte	0x3
 2324 074a 00000000 		.4byte	UART_rxBufferWrite
 2325 074e 16       		.uleb128 0x16
 2326 074f 11020000 		.4byte	.LASF76
 2327 0753 01       		.byte	0x1
 2328 0754 28       		.byte	0x28
 2329 0755 BC000000 		.4byte	0xbc
 2330 0759 05       		.uleb128 0x5
 2331 075a 03       		.byte	0x3
 2332 075b 00000000 		.4byte	UART_rxBufferLoopDetect
 2333 075f 16       		.uleb128 0x16
 2334 0760 7C000000 		.4byte	.LASF77
 2335 0764 01       		.byte	0x1
 2336 0765 29       		.byte	0x29
 2337 0766 BC000000 		.4byte	0xbc
 2338 076a 05       		.uleb128 0x5
 2339 076b 03       		.byte	0x3
 2340 076c 00000000 		.4byte	UART_rxBufferOverflow
 2341 0770 19       		.uleb128 0x19
 2342 0771 39010000 		.4byte	.LASF78
 2343 0775 39010000 		.4byte	.LASF78
 2344 0779 03       		.byte	0x3
 2345 077a 88       		.byte	0x88
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 70


 2346 077b 19       		.uleb128 0x19
 2347 077c 1D030000 		.4byte	.LASF79
 2348 0780 1D030000 		.4byte	.LASF79
 2349 0784 03       		.byte	0x3
 2350 0785 8B       		.byte	0x8b
 2351 0786 19       		.uleb128 0x19
 2352 0787 FA010000 		.4byte	.LASF80
 2353 078b FA010000 		.4byte	.LASF80
 2354 078f 03       		.byte	0x3
 2355 0790 7D       		.byte	0x7d
 2356 0791 19       		.uleb128 0x19
 2357 0792 8B020000 		.4byte	.LASF81
 2358 0796 8B020000 		.4byte	.LASF81
 2359 079a 04       		.byte	0x4
 2360 079b 27       		.byte	0x27
 2361 079c 19       		.uleb128 0x19
 2362 079d 07000000 		.4byte	.LASF82
 2363 07a1 07000000 		.4byte	.LASF82
 2364 07a5 03       		.byte	0x3
 2365 07a6 7E       		.byte	0x7e
 2366 07a7 19       		.uleb128 0x19
 2367 07a8 0A030000 		.4byte	.LASF83
 2368 07ac 0A030000 		.4byte	.LASF83
 2369 07b0 04       		.byte	0x4
 2370 07b1 28       		.byte	0x28
 2371 07b2 00       		.byte	0
 2372              		.section	.debug_abbrev,"",%progbits
 2373              	.Ldebug_abbrev0:
 2374 0000 01       		.uleb128 0x1
 2375 0001 11       		.uleb128 0x11
 2376 0002 01       		.byte	0x1
 2377 0003 25       		.uleb128 0x25
 2378 0004 0E       		.uleb128 0xe
 2379 0005 13       		.uleb128 0x13
 2380 0006 0B       		.uleb128 0xb
 2381 0007 03       		.uleb128 0x3
 2382 0008 0E       		.uleb128 0xe
 2383 0009 1B       		.uleb128 0x1b
 2384 000a 0E       		.uleb128 0xe
 2385 000b 55       		.uleb128 0x55
 2386 000c 17       		.uleb128 0x17
 2387 000d 11       		.uleb128 0x11
 2388 000e 01       		.uleb128 0x1
 2389 000f 10       		.uleb128 0x10
 2390 0010 17       		.uleb128 0x17
 2391 0011 00       		.byte	0
 2392 0012 00       		.byte	0
 2393 0013 02       		.uleb128 0x2
 2394 0014 24       		.uleb128 0x24
 2395 0015 00       		.byte	0
 2396 0016 0B       		.uleb128 0xb
 2397 0017 0B       		.uleb128 0xb
 2398 0018 3E       		.uleb128 0x3e
 2399 0019 0B       		.uleb128 0xb
 2400 001a 03       		.uleb128 0x3
 2401 001b 0E       		.uleb128 0xe
 2402 001c 00       		.byte	0
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 71


 2403 001d 00       		.byte	0
 2404 001e 03       		.uleb128 0x3
 2405 001f 24       		.uleb128 0x24
 2406 0020 00       		.byte	0
 2407 0021 0B       		.uleb128 0xb
 2408 0022 0B       		.uleb128 0xb
 2409 0023 3E       		.uleb128 0x3e
 2410 0024 0B       		.uleb128 0xb
 2411 0025 03       		.uleb128 0x3
 2412 0026 08       		.uleb128 0x8
 2413 0027 00       		.byte	0
 2414 0028 00       		.byte	0
 2415 0029 04       		.uleb128 0x4
 2416 002a 16       		.uleb128 0x16
 2417 002b 00       		.byte	0
 2418 002c 03       		.uleb128 0x3
 2419 002d 0E       		.uleb128 0xe
 2420 002e 3A       		.uleb128 0x3a
 2421 002f 0B       		.uleb128 0xb
 2422 0030 3B       		.uleb128 0x3b
 2423 0031 05       		.uleb128 0x5
 2424 0032 49       		.uleb128 0x49
 2425 0033 13       		.uleb128 0x13
 2426 0034 00       		.byte	0
 2427 0035 00       		.byte	0
 2428 0036 05       		.uleb128 0x5
 2429 0037 35       		.uleb128 0x35
 2430 0038 00       		.byte	0
 2431 0039 49       		.uleb128 0x49
 2432 003a 13       		.uleb128 0x13
 2433 003b 00       		.byte	0
 2434 003c 00       		.byte	0
 2435 003d 06       		.uleb128 0x6
 2436 003e 2E       		.uleb128 0x2e
 2437 003f 01       		.byte	0x1
 2438 0040 3F       		.uleb128 0x3f
 2439 0041 19       		.uleb128 0x19
 2440 0042 03       		.uleb128 0x3
 2441 0043 0E       		.uleb128 0xe
 2442 0044 3A       		.uleb128 0x3a
 2443 0045 0B       		.uleb128 0xb
 2444 0046 3B       		.uleb128 0x3b
 2445 0047 0B       		.uleb128 0xb
 2446 0048 27       		.uleb128 0x27
 2447 0049 19       		.uleb128 0x19
 2448 004a 11       		.uleb128 0x11
 2449 004b 01       		.uleb128 0x1
 2450 004c 12       		.uleb128 0x12
 2451 004d 06       		.uleb128 0x6
 2452 004e 40       		.uleb128 0x40
 2453 004f 18       		.uleb128 0x18
 2454 0050 9742     		.uleb128 0x2117
 2455 0052 19       		.uleb128 0x19
 2456 0053 01       		.uleb128 0x1
 2457 0054 13       		.uleb128 0x13
 2458 0055 00       		.byte	0
 2459 0056 00       		.byte	0
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 72


 2460 0057 07       		.uleb128 0x7
 2461 0058 898201   		.uleb128 0x4109
 2462 005b 01       		.byte	0x1
 2463 005c 11       		.uleb128 0x11
 2464 005d 01       		.uleb128 0x1
 2465 005e 31       		.uleb128 0x31
 2466 005f 13       		.uleb128 0x13
 2467 0060 01       		.uleb128 0x1
 2468 0061 13       		.uleb128 0x13
 2469 0062 00       		.byte	0
 2470 0063 00       		.byte	0
 2471 0064 08       		.uleb128 0x8
 2472 0065 8A8201   		.uleb128 0x410a
 2473 0068 00       		.byte	0
 2474 0069 02       		.uleb128 0x2
 2475 006a 18       		.uleb128 0x18
 2476 006b 9142     		.uleb128 0x2111
 2477 006d 18       		.uleb128 0x18
 2478 006e 00       		.byte	0
 2479 006f 00       		.byte	0
 2480 0070 09       		.uleb128 0x9
 2481 0071 898201   		.uleb128 0x4109
 2482 0074 01       		.byte	0x1
 2483 0075 11       		.uleb128 0x11
 2484 0076 01       		.uleb128 0x1
 2485 0077 31       		.uleb128 0x31
 2486 0078 13       		.uleb128 0x13
 2487 0079 00       		.byte	0
 2488 007a 00       		.byte	0
 2489 007b 0A       		.uleb128 0xa
 2490 007c 34       		.uleb128 0x34
 2491 007d 00       		.byte	0
 2492 007e 03       		.uleb128 0x3
 2493 007f 0E       		.uleb128 0xe
 2494 0080 3A       		.uleb128 0x3a
 2495 0081 0B       		.uleb128 0xb
 2496 0082 3B       		.uleb128 0x3b
 2497 0083 0B       		.uleb128 0xb
 2498 0084 49       		.uleb128 0x49
 2499 0085 13       		.uleb128 0x13
 2500 0086 02       		.uleb128 0x2
 2501 0087 17       		.uleb128 0x17
 2502 0088 00       		.byte	0
 2503 0089 00       		.byte	0
 2504 008a 0B       		.uleb128 0xb
 2505 008b 898201   		.uleb128 0x4109
 2506 008e 00       		.byte	0
 2507 008f 11       		.uleb128 0x11
 2508 0090 01       		.uleb128 0x1
 2509 0091 31       		.uleb128 0x31
 2510 0092 13       		.uleb128 0x13
 2511 0093 00       		.byte	0
 2512 0094 00       		.byte	0
 2513 0095 0C       		.uleb128 0xc
 2514 0096 2E       		.uleb128 0x2e
 2515 0097 00       		.byte	0
 2516 0098 3F       		.uleb128 0x3f
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 73


 2517 0099 19       		.uleb128 0x19
 2518 009a 03       		.uleb128 0x3
 2519 009b 0E       		.uleb128 0xe
 2520 009c 3A       		.uleb128 0x3a
 2521 009d 0B       		.uleb128 0xb
 2522 009e 3B       		.uleb128 0x3b
 2523 009f 05       		.uleb128 0x5
 2524 00a0 27       		.uleb128 0x27
 2525 00a1 19       		.uleb128 0x19
 2526 00a2 49       		.uleb128 0x49
 2527 00a3 13       		.uleb128 0x13
 2528 00a4 11       		.uleb128 0x11
 2529 00a5 01       		.uleb128 0x1
 2530 00a6 12       		.uleb128 0x12
 2531 00a7 06       		.uleb128 0x6
 2532 00a8 40       		.uleb128 0x40
 2533 00a9 18       		.uleb128 0x18
 2534 00aa 9742     		.uleb128 0x2117
 2535 00ac 19       		.uleb128 0x19
 2536 00ad 00       		.byte	0
 2537 00ae 00       		.byte	0
 2538 00af 0D       		.uleb128 0xd
 2539 00b0 2E       		.uleb128 0x2e
 2540 00b1 01       		.byte	0x1
 2541 00b2 3F       		.uleb128 0x3f
 2542 00b3 19       		.uleb128 0x19
 2543 00b4 03       		.uleb128 0x3
 2544 00b5 0E       		.uleb128 0xe
 2545 00b6 3A       		.uleb128 0x3a
 2546 00b7 0B       		.uleb128 0xb
 2547 00b8 3B       		.uleb128 0x3b
 2548 00b9 05       		.uleb128 0x5
 2549 00ba 27       		.uleb128 0x27
 2550 00bb 19       		.uleb128 0x19
 2551 00bc 11       		.uleb128 0x11
 2552 00bd 01       		.uleb128 0x1
 2553 00be 12       		.uleb128 0x12
 2554 00bf 06       		.uleb128 0x6
 2555 00c0 40       		.uleb128 0x40
 2556 00c1 18       		.uleb128 0x18
 2557 00c2 9742     		.uleb128 0x2117
 2558 00c4 19       		.uleb128 0x19
 2559 00c5 01       		.uleb128 0x1
 2560 00c6 13       		.uleb128 0x13
 2561 00c7 00       		.byte	0
 2562 00c8 00       		.byte	0
 2563 00c9 0E       		.uleb128 0xe
 2564 00ca 05       		.uleb128 0x5
 2565 00cb 00       		.byte	0
 2566 00cc 03       		.uleb128 0x3
 2567 00cd 0E       		.uleb128 0xe
 2568 00ce 3A       		.uleb128 0x3a
 2569 00cf 0B       		.uleb128 0xb
 2570 00d0 3B       		.uleb128 0x3b
 2571 00d1 05       		.uleb128 0x5
 2572 00d2 49       		.uleb128 0x49
 2573 00d3 13       		.uleb128 0x13
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 74


 2574 00d4 02       		.uleb128 0x2
 2575 00d5 18       		.uleb128 0x18
 2576 00d6 00       		.byte	0
 2577 00d7 00       		.byte	0
 2578 00d8 0F       		.uleb128 0xf
 2579 00d9 2E       		.uleb128 0x2e
 2580 00da 01       		.byte	0x1
 2581 00db 3F       		.uleb128 0x3f
 2582 00dc 19       		.uleb128 0x19
 2583 00dd 03       		.uleb128 0x3
 2584 00de 0E       		.uleb128 0xe
 2585 00df 3A       		.uleb128 0x3a
 2586 00e0 0B       		.uleb128 0xb
 2587 00e1 3B       		.uleb128 0x3b
 2588 00e2 05       		.uleb128 0x5
 2589 00e3 27       		.uleb128 0x27
 2590 00e4 19       		.uleb128 0x19
 2591 00e5 49       		.uleb128 0x49
 2592 00e6 13       		.uleb128 0x13
 2593 00e7 11       		.uleb128 0x11
 2594 00e8 01       		.uleb128 0x1
 2595 00e9 12       		.uleb128 0x12
 2596 00ea 06       		.uleb128 0x6
 2597 00eb 40       		.uleb128 0x40
 2598 00ec 18       		.uleb128 0x18
 2599 00ed 9742     		.uleb128 0x2117
 2600 00ef 19       		.uleb128 0x19
 2601 00f0 01       		.uleb128 0x1
 2602 00f1 13       		.uleb128 0x13
 2603 00f2 00       		.byte	0
 2604 00f3 00       		.byte	0
 2605 00f4 10       		.uleb128 0x10
 2606 00f5 34       		.uleb128 0x34
 2607 00f6 00       		.byte	0
 2608 00f7 03       		.uleb128 0x3
 2609 00f8 0E       		.uleb128 0xe
 2610 00f9 3A       		.uleb128 0x3a
 2611 00fa 0B       		.uleb128 0xb
 2612 00fb 3B       		.uleb128 0x3b
 2613 00fc 05       		.uleb128 0x5
 2614 00fd 49       		.uleb128 0x49
 2615 00fe 13       		.uleb128 0x13
 2616 00ff 02       		.uleb128 0x2
 2617 0100 17       		.uleb128 0x17
 2618 0101 00       		.byte	0
 2619 0102 00       		.byte	0
 2620 0103 11       		.uleb128 0x11
 2621 0104 34       		.uleb128 0x34
 2622 0105 00       		.byte	0
 2623 0106 03       		.uleb128 0x3
 2624 0107 0E       		.uleb128 0xe
 2625 0108 3A       		.uleb128 0x3a
 2626 0109 0B       		.uleb128 0xb
 2627 010a 3B       		.uleb128 0x3b
 2628 010b 05       		.uleb128 0x5
 2629 010c 49       		.uleb128 0x49
 2630 010d 13       		.uleb128 0x13
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 75


 2631 010e 02       		.uleb128 0x2
 2632 010f 18       		.uleb128 0x18
 2633 0110 00       		.byte	0
 2634 0111 00       		.byte	0
 2635 0112 12       		.uleb128 0x12
 2636 0113 05       		.uleb128 0x5
 2637 0114 00       		.byte	0
 2638 0115 03       		.uleb128 0x3
 2639 0116 0E       		.uleb128 0xe
 2640 0117 3A       		.uleb128 0x3a
 2641 0118 0B       		.uleb128 0xb
 2642 0119 3B       		.uleb128 0x3b
 2643 011a 05       		.uleb128 0x5
 2644 011b 49       		.uleb128 0x49
 2645 011c 13       		.uleb128 0x13
 2646 011d 02       		.uleb128 0x2
 2647 011e 17       		.uleb128 0x17
 2648 011f 00       		.byte	0
 2649 0120 00       		.byte	0
 2650 0121 13       		.uleb128 0x13
 2651 0122 0F       		.uleb128 0xf
 2652 0123 00       		.byte	0
 2653 0124 0B       		.uleb128 0xb
 2654 0125 0B       		.uleb128 0xb
 2655 0126 49       		.uleb128 0x49
 2656 0127 13       		.uleb128 0x13
 2657 0128 00       		.byte	0
 2658 0129 00       		.byte	0
 2659 012a 14       		.uleb128 0x14
 2660 012b 26       		.uleb128 0x26
 2661 012c 00       		.byte	0
 2662 012d 49       		.uleb128 0x49
 2663 012e 13       		.uleb128 0x13
 2664 012f 00       		.byte	0
 2665 0130 00       		.byte	0
 2666 0131 15       		.uleb128 0x15
 2667 0132 0B       		.uleb128 0xb
 2668 0133 01       		.byte	0x1
 2669 0134 11       		.uleb128 0x11
 2670 0135 01       		.uleb128 0x1
 2671 0136 12       		.uleb128 0x12
 2672 0137 06       		.uleb128 0x6
 2673 0138 00       		.byte	0
 2674 0139 00       		.byte	0
 2675 013a 16       		.uleb128 0x16
 2676 013b 34       		.uleb128 0x34
 2677 013c 00       		.byte	0
 2678 013d 03       		.uleb128 0x3
 2679 013e 0E       		.uleb128 0xe
 2680 013f 3A       		.uleb128 0x3a
 2681 0140 0B       		.uleb128 0xb
 2682 0141 3B       		.uleb128 0x3b
 2683 0142 0B       		.uleb128 0xb
 2684 0143 49       		.uleb128 0x49
 2685 0144 13       		.uleb128 0x13
 2686 0145 3F       		.uleb128 0x3f
 2687 0146 19       		.uleb128 0x19
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 76


 2688 0147 02       		.uleb128 0x2
 2689 0148 18       		.uleb128 0x18
 2690 0149 00       		.byte	0
 2691 014a 00       		.byte	0
 2692 014b 17       		.uleb128 0x17
 2693 014c 01       		.uleb128 0x1
 2694 014d 01       		.byte	0x1
 2695 014e 49       		.uleb128 0x49
 2696 014f 13       		.uleb128 0x13
 2697 0150 01       		.uleb128 0x1
 2698 0151 13       		.uleb128 0x13
 2699 0152 00       		.byte	0
 2700 0153 00       		.byte	0
 2701 0154 18       		.uleb128 0x18
 2702 0155 21       		.uleb128 0x21
 2703 0156 00       		.byte	0
 2704 0157 49       		.uleb128 0x49
 2705 0158 13       		.uleb128 0x13
 2706 0159 2F       		.uleb128 0x2f
 2707 015a 0B       		.uleb128 0xb
 2708 015b 00       		.byte	0
 2709 015c 00       		.byte	0
 2710 015d 19       		.uleb128 0x19
 2711 015e 2E       		.uleb128 0x2e
 2712 015f 00       		.byte	0
 2713 0160 3F       		.uleb128 0x3f
 2714 0161 19       		.uleb128 0x19
 2715 0162 3C       		.uleb128 0x3c
 2716 0163 19       		.uleb128 0x19
 2717 0164 6E       		.uleb128 0x6e
 2718 0165 0E       		.uleb128 0xe
 2719 0166 03       		.uleb128 0x3
 2720 0167 0E       		.uleb128 0xe
 2721 0168 3A       		.uleb128 0x3a
 2722 0169 0B       		.uleb128 0xb
 2723 016a 3B       		.uleb128 0x3b
 2724 016b 0B       		.uleb128 0xb
 2725 016c 00       		.byte	0
 2726 016d 00       		.byte	0
 2727 016e 00       		.byte	0
 2728              		.section	.debug_loc,"",%progbits
 2729              	.Ldebug_loc0:
 2730              	.LLST0:
 2731 0000 08000000 		.4byte	.LVL5
 2732 0004 40000000 		.4byte	.LVL8
 2733 0008 0100     		.2byte	0x1
 2734 000a 54       		.byte	0x54
 2735 000b 00000000 		.4byte	0
 2736 000f 00000000 		.4byte	0
 2737              	.LLST1:
 2738 0013 08000000 		.4byte	.LVL12
 2739 0017 3C000000 		.4byte	.LVL15
 2740 001b 0100     		.2byte	0x1
 2741 001d 54       		.byte	0x54
 2742 001e 00000000 		.4byte	0
 2743 0022 00000000 		.4byte	0
 2744              	.LLST2:
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 77


 2745 0026 22000000 		.4byte	.LVL20
 2746 002a 40000000 		.4byte	.LVL26
 2747 002e 0100     		.2byte	0x1
 2748 0030 50       		.byte	0x50
 2749 0031 46000000 		.4byte	.LVL28
 2750 0035 64000000 		.4byte	.LFE7
 2751 0039 0100     		.2byte	0x1
 2752 003b 50       		.byte	0x50
 2753 003c 00000000 		.4byte	0
 2754 0040 00000000 		.4byte	0
 2755              	.LLST3:
 2756 0044 0C000000 		.4byte	.LVL18
 2757 0048 24000000 		.4byte	.LVL21
 2758 004c 0100     		.2byte	0x1
 2759 004e 53       		.byte	0x53
 2760 004f 24000000 		.4byte	.LVL21
 2761 0053 26000000 		.4byte	.LVL22
 2762 0057 0300     		.2byte	0x3
 2763 0059 73       		.byte	0x73
 2764 005a 7F       		.sleb128 -1
 2765 005b 9F       		.byte	0x9f
 2766 005c 26000000 		.4byte	.LVL22
 2767 0060 32000000 		.4byte	.LVL24
 2768 0064 0100     		.2byte	0x1
 2769 0066 53       		.byte	0x53
 2770 0067 32000000 		.4byte	.LVL24
 2771 006b 3E000000 		.4byte	.LVL25
 2772 006f 0500     		.2byte	0x5
 2773 0071 03       		.byte	0x3
 2774 0072 00000000 		.4byte	UART_rxBufferRead
 2775 0076 40000000 		.4byte	.LVL26
 2776 007a 42000000 		.4byte	.LVL27
 2777 007e 0100     		.2byte	0x1
 2778 0080 53       		.byte	0x53
 2779 0081 00000000 		.4byte	0
 2780 0085 00000000 		.4byte	0
 2781              	.LLST4:
 2782 0089 00000000 		.4byte	.LVL31
 2783 008d 22000000 		.4byte	.LVL34
 2784 0091 0200     		.2byte	0x2
 2785 0093 30       		.byte	0x30
 2786 0094 9F       		.byte	0x9f
 2787 0095 22000000 		.4byte	.LVL34
 2788 0099 40000000 		.4byte	.LVL40
 2789 009d 0100     		.2byte	0x1
 2790 009f 50       		.byte	0x50
 2791 00a0 40000000 		.4byte	.LVL40
 2792 00a4 52000000 		.4byte	.LVL43
 2793 00a8 0200     		.2byte	0x2
 2794 00aa 30       		.byte	0x30
 2795 00ab 9F       		.byte	0x9f
 2796 00ac 52000000 		.4byte	.LVL43
 2797 00b0 5A000000 		.4byte	.LVL44
 2798 00b4 0100     		.2byte	0x1
 2799 00b6 50       		.byte	0x50
 2800 00b7 5A000000 		.4byte	.LVL44
 2801 00bb 5E000000 		.4byte	.LVL45
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 78


 2802 00bf 0200     		.2byte	0x2
 2803 00c1 30       		.byte	0x30
 2804 00c2 9F       		.byte	0x9f
 2805 00c3 5E000000 		.4byte	.LVL45
 2806 00c7 80000000 		.4byte	.LFE9
 2807 00cb 0100     		.2byte	0x1
 2808 00cd 50       		.byte	0x50
 2809 00ce 00000000 		.4byte	0
 2810 00d2 00000000 		.4byte	0
 2811              	.LLST5:
 2812 00d6 46000000 		.4byte	.LVL42
 2813 00da 60000000 		.4byte	.LVL46
 2814 00de 0100     		.2byte	0x1
 2815 00e0 53       		.byte	0x53
 2816 00e1 00000000 		.4byte	0
 2817 00e5 00000000 		.4byte	0
 2818              	.LLST6:
 2819 00e9 0C000000 		.4byte	.LVL32
 2820 00ed 24000000 		.4byte	.LVL35
 2821 00f1 0100     		.2byte	0x1
 2822 00f3 53       		.byte	0x53
 2823 00f4 24000000 		.4byte	.LVL35
 2824 00f8 26000000 		.4byte	.LVL36
 2825 00fc 0300     		.2byte	0x3
 2826 00fe 73       		.byte	0x73
 2827 00ff 7F       		.sleb128 -1
 2828 0100 9F       		.byte	0x9f
 2829 0101 26000000 		.4byte	.LVL36
 2830 0105 32000000 		.4byte	.LVL38
 2831 0109 0100     		.2byte	0x1
 2832 010b 53       		.byte	0x53
 2833 010c 32000000 		.4byte	.LVL38
 2834 0110 3E000000 		.4byte	.LVL39
 2835 0114 0500     		.2byte	0x5
 2836 0116 03       		.byte	0x3
 2837 0117 00000000 		.4byte	UART_rxBufferRead
 2838 011b 40000000 		.4byte	.LVL40
 2839 011f 42000000 		.4byte	.LVL41
 2840 0123 0100     		.2byte	0x1
 2841 0125 53       		.byte	0x53
 2842 0126 00000000 		.4byte	0
 2843 012a 00000000 		.4byte	0
 2844              	.LLST7:
 2845 012e 0C000000 		.4byte	.LVL47
 2846 0132 16000000 		.4byte	.LVL48
 2847 0136 0100     		.2byte	0x1
 2848 0138 54       		.byte	0x54
 2849 0139 00000000 		.4byte	0
 2850 013d 00000000 		.4byte	0
 2851              	.LLST8:
 2852 0141 40000000 		.4byte	.LVL50
 2853 0145 42000000 		.4byte	.LVL51
 2854 0149 0100     		.2byte	0x1
 2855 014b 50       		.byte	0x50
 2856 014c 54000000 		.4byte	.LVL52
 2857 0150 56000000 		.4byte	.LVL53
 2858 0154 0100     		.2byte	0x1
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 79


 2859 0156 50       		.byte	0x50
 2860 0157 58000000 		.4byte	.LVL54
 2861 015b 6C000000 		.4byte	.LFE11
 2862 015f 0100     		.2byte	0x1
 2863 0161 50       		.byte	0x50
 2864 0162 00000000 		.4byte	0
 2865 0166 00000000 		.4byte	0
 2866              	.LLST9:
 2867 016a 06000000 		.4byte	.LVL55
 2868 016e 1B000000 		.4byte	.LVL56-1
 2869 0172 0100     		.2byte	0x1
 2870 0174 50       		.byte	0x50
 2871 0175 00000000 		.4byte	0
 2872 0179 00000000 		.4byte	0
 2873              	.LLST10:
 2874 017d 08000000 		.4byte	.LVL64
 2875 0181 2C000000 		.4byte	.LVL65
 2876 0185 0100     		.2byte	0x1
 2877 0187 53       		.byte	0x53
 2878 0188 00000000 		.4byte	0
 2879 018c 00000000 		.4byte	0
 2880              	.LLST11:
 2881 0190 00000000 		.4byte	.LVL68
 2882 0194 0A000000 		.4byte	.LVL70
 2883 0198 0100     		.2byte	0x1
 2884 019a 50       		.byte	0x50
 2885 019b 0A000000 		.4byte	.LVL70
 2886 019f 14000000 		.4byte	.LVL74
 2887 01a3 0100     		.2byte	0x1
 2888 01a5 55       		.byte	0x55
 2889 01a6 14000000 		.4byte	.LVL74
 2890 01aa 18000000 		.4byte	.LVL75
 2891 01ae 0100     		.2byte	0x1
 2892 01b0 50       		.byte	0x50
 2893 01b1 18000000 		.4byte	.LVL75
 2894 01b5 20000000 		.4byte	.LVL76
 2895 01b9 0100     		.2byte	0x1
 2896 01bb 55       		.byte	0x55
 2897 01bc 20000000 		.4byte	.LVL76
 2898 01c0 24000000 		.4byte	.LFE20
 2899 01c4 0400     		.2byte	0x4
 2900 01c6 F3       		.byte	0xf3
 2901 01c7 01       		.uleb128 0x1
 2902 01c8 50       		.byte	0x50
 2903 01c9 9F       		.byte	0x9f
 2904 01ca 00000000 		.4byte	0
 2905 01ce 00000000 		.4byte	0
 2906              	.LLST12:
 2907 01d2 02000000 		.4byte	.LVL69
 2908 01d6 0A000000 		.4byte	.LVL70
 2909 01da 0200     		.2byte	0x2
 2910 01dc 30       		.byte	0x30
 2911 01dd 9F       		.byte	0x9f
 2912 01de 0A000000 		.4byte	.LVL70
 2913 01e2 10000000 		.4byte	.LVL72
 2914 01e6 0100     		.2byte	0x1
 2915 01e8 54       		.byte	0x54
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 80


 2916 01e9 12000000 		.4byte	.LVL73
 2917 01ed 14000000 		.4byte	.LVL74
 2918 01f1 0100     		.2byte	0x1
 2919 01f3 54       		.byte	0x54
 2920 01f4 14000000 		.4byte	.LVL74
 2921 01f8 18000000 		.4byte	.LVL75
 2922 01fc 0200     		.2byte	0x2
 2923 01fe 30       		.byte	0x30
 2924 01ff 9F       		.byte	0x9f
 2925 0200 18000000 		.4byte	.LVL75
 2926 0204 20000000 		.4byte	.LVL76
 2927 0208 0100     		.2byte	0x1
 2928 020a 54       		.byte	0x54
 2929 020b 00000000 		.4byte	0
 2930 020f 00000000 		.4byte	0
 2931              	.LLST13:
 2932 0213 00000000 		.4byte	.LVL77
 2933 0217 08000000 		.4byte	.LVL78
 2934 021b 0100     		.2byte	0x1
 2935 021d 50       		.byte	0x50
 2936 021e 08000000 		.4byte	.LVL78
 2937 0222 14000000 		.4byte	.LVL82
 2938 0226 0100     		.2byte	0x1
 2939 0228 56       		.byte	0x56
 2940 0229 14000000 		.4byte	.LVL82
 2941 022d 1C000000 		.4byte	.LVL83
 2942 0231 0100     		.2byte	0x1
 2943 0233 50       		.byte	0x50
 2944 0234 1C000000 		.4byte	.LVL83
 2945 0238 22000000 		.4byte	.LVL84
 2946 023c 0100     		.2byte	0x1
 2947 023e 56       		.byte	0x56
 2948 023f 22000000 		.4byte	.LVL84
 2949 0243 28000000 		.4byte	.LFE21
 2950 0247 0400     		.2byte	0x4
 2951 0249 F3       		.byte	0xf3
 2952 024a 01       		.uleb128 0x1
 2953 024b 50       		.byte	0x50
 2954 024c 9F       		.byte	0x9f
 2955 024d 00000000 		.4byte	0
 2956 0251 00000000 		.4byte	0
 2957              	.LLST14:
 2958 0255 00000000 		.4byte	.LVL77
 2959 0259 08000000 		.4byte	.LVL78
 2960 025d 0100     		.2byte	0x1
 2961 025f 51       		.byte	0x51
 2962 0260 08000000 		.4byte	.LVL78
 2963 0264 14000000 		.4byte	.LVL82
 2964 0268 0400     		.2byte	0x4
 2965 026a F3       		.byte	0xf3
 2966 026b 01       		.uleb128 0x1
 2967 026c 51       		.byte	0x51
 2968 026d 9F       		.byte	0x9f
 2969 026e 14000000 		.4byte	.LVL82
 2970 0272 1C000000 		.4byte	.LVL83
 2971 0276 0100     		.2byte	0x1
 2972 0278 51       		.byte	0x51
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 81


 2973 0279 1C000000 		.4byte	.LVL83
 2974 027d 28000000 		.4byte	.LFE21
 2975 0281 0400     		.2byte	0x4
 2976 0283 F3       		.byte	0xf3
 2977 0284 01       		.uleb128 0x1
 2978 0285 51       		.byte	0x51
 2979 0286 9F       		.byte	0x9f
 2980 0287 00000000 		.4byte	0
 2981 028b 00000000 		.4byte	0
 2982              	.LLST15:
 2983 028f 00000000 		.4byte	.LVL77
 2984 0293 08000000 		.4byte	.LVL78
 2985 0297 0200     		.2byte	0x2
 2986 0299 30       		.byte	0x30
 2987 029a 9F       		.byte	0x9f
 2988 029b 08000000 		.4byte	.LVL78
 2989 029f 10000000 		.4byte	.LVL80
 2990 02a3 0100     		.2byte	0x1
 2991 02a5 54       		.byte	0x54
 2992 02a6 12000000 		.4byte	.LVL81
 2993 02aa 14000000 		.4byte	.LVL82
 2994 02ae 0100     		.2byte	0x1
 2995 02b0 54       		.byte	0x54
 2996 02b1 14000000 		.4byte	.LVL82
 2997 02b5 1C000000 		.4byte	.LVL83
 2998 02b9 0200     		.2byte	0x2
 2999 02bb 30       		.byte	0x30
 3000 02bc 9F       		.byte	0x9f
 3001 02bd 1C000000 		.4byte	.LVL83
 3002 02c1 22000000 		.4byte	.LVL84
 3003 02c5 0100     		.2byte	0x1
 3004 02c7 54       		.byte	0x54
 3005 02c8 00000000 		.4byte	0
 3006 02cc 00000000 		.4byte	0
 3007              	.LLST16:
 3008 02d0 00000000 		.4byte	.LVL85
 3009 02d4 0B000000 		.4byte	.LVL86-1
 3010 02d8 0100     		.2byte	0x1
 3011 02da 50       		.byte	0x50
 3012 02db 0B000000 		.4byte	.LVL86-1
 3013 02df 20000000 		.4byte	.LFE22
 3014 02e3 0400     		.2byte	0x4
 3015 02e5 F3       		.byte	0xf3
 3016 02e6 01       		.uleb128 0x1
 3017 02e7 50       		.byte	0x50
 3018 02e8 9F       		.byte	0x9f
 3019 02e9 00000000 		.4byte	0
 3020 02ed 00000000 		.4byte	0
 3021              	.LLST17:
 3022 02f1 26000000 		.4byte	.LVL89
 3023 02f5 28000000 		.4byte	.LVL90
 3024 02f9 0100     		.2byte	0x1
 3025 02fb 50       		.byte	0x50
 3026 02fc 36000000 		.4byte	.LVL91
 3027 0300 38000000 		.4byte	.LVL92
 3028 0304 0100     		.2byte	0x1
 3029 0306 50       		.byte	0x50
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 82


 3030 0307 3A000000 		.4byte	.LVL93
 3031 030b 50000000 		.4byte	.LFE23
 3032 030f 0100     		.2byte	0x1
 3033 0311 50       		.byte	0x50
 3034 0312 00000000 		.4byte	0
 3035 0316 00000000 		.4byte	0
 3036              	.LLST18:
 3037 031a 06000000 		.4byte	.LVL94
 3038 031e 1B000000 		.4byte	.LVL95-1
 3039 0322 0100     		.2byte	0x1
 3040 0324 50       		.byte	0x50
 3041 0325 00000000 		.4byte	0
 3042 0329 00000000 		.4byte	0
 3043              	.LLST19:
 3044 032d 00000000 		.4byte	.LVL96
 3045 0331 3C000000 		.4byte	.LVL101
 3046 0335 0100     		.2byte	0x1
 3047 0337 50       		.byte	0x50
 3048 0338 3C000000 		.4byte	.LVL101
 3049 033c 58000000 		.4byte	.LFE25
 3050 0340 0400     		.2byte	0x4
 3051 0342 F3       		.byte	0xf3
 3052 0343 01       		.uleb128 0x1
 3053 0344 50       		.byte	0x50
 3054 0345 9F       		.byte	0x9f
 3055 0346 00000000 		.4byte	0
 3056 034a 00000000 		.4byte	0
 3057              	.LLST20:
 3058 034e 22000000 		.4byte	.LVL97
 3059 0352 28000000 		.4byte	.LVL98
 3060 0356 0100     		.2byte	0x1
 3061 0358 53       		.byte	0x53
 3062 0359 34000000 		.4byte	.LVL99
 3063 035d 3A000000 		.4byte	.LVL100
 3064 0361 0100     		.2byte	0x1
 3065 0363 53       		.byte	0x53
 3066 0364 00000000 		.4byte	0
 3067 0368 00000000 		.4byte	0
 3068              		.section	.debug_aranges,"",%progbits
 3069 0000 EC000000 		.4byte	0xec
 3070 0004 0200     		.2byte	0x2
 3071 0006 00000000 		.4byte	.Ldebug_info0
 3072 000a 04       		.byte	0x4
 3073 000b 00       		.byte	0
 3074 000c 0000     		.2byte	0
 3075 000e 0000     		.2byte	0
 3076 0010 00000000 		.4byte	.LFB1
 3077 0014 5C000000 		.4byte	.LFE1-.LFB1
 3078 0018 00000000 		.4byte	.LFB2
 3079 001c 50000000 		.4byte	.LFE2-.LFB2
 3080 0020 00000000 		.4byte	.LFB0
 3081 0024 1C000000 		.4byte	.LFE0-.LFB0
 3082 0028 00000000 		.4byte	.LFB3
 3083 002c 4C000000 		.4byte	.LFE3-.LFB3
 3084 0030 00000000 		.4byte	.LFB4
 3085 0034 04000000 		.4byte	.LFE4-.LFB4
 3086 0038 00000000 		.4byte	.LFB5
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 83


 3087 003c 02000000 		.4byte	.LFE5-.LFB5
 3088 0040 00000000 		.4byte	.LFB6
 3089 0044 0C000000 		.4byte	.LFE6-.LFB6
 3090 0048 00000000 		.4byte	.LFB7
 3091 004c 64000000 		.4byte	.LFE7-.LFB7
 3092 0050 00000000 		.4byte	.LFB8
 3093 0054 28000000 		.4byte	.LFE8-.LFB8
 3094 0058 00000000 		.4byte	.LFB9
 3095 005c 80000000 		.4byte	.LFE9-.LFB9
 3096 0060 00000000 		.4byte	.LFB10
 3097 0064 2C000000 		.4byte	.LFE10-.LFB10
 3098 0068 00000000 		.4byte	.LFB11
 3099 006c 6C000000 		.4byte	.LFE11-.LFB11
 3100 0070 00000000 		.4byte	.LFB12
 3101 0074 44000000 		.4byte	.LFE12-.LFB12
 3102 0078 00000000 		.4byte	.LFB13
 3103 007c 02000000 		.4byte	.LFE13-.LFB13
 3104 0080 00000000 		.4byte	.LFB14
 3105 0084 0C000000 		.4byte	.LFE14-.LFB14
 3106 0088 00000000 		.4byte	.LFB15
 3107 008c 0C000000 		.4byte	.LFE15-.LFB15
 3108 0090 00000000 		.4byte	.LFB16
 3109 0094 0C000000 		.4byte	.LFE16-.LFB16
 3110 0098 00000000 		.4byte	.LFB17
 3111 009c 60000000 		.4byte	.LFE17-.LFB17
 3112 00a0 00000000 		.4byte	.LFB18
 3113 00a4 0C000000 		.4byte	.LFE18-.LFB18
 3114 00a8 00000000 		.4byte	.LFB19
 3115 00ac 70000000 		.4byte	.LFE19-.LFB19
 3116 00b0 00000000 		.4byte	.LFB20
 3117 00b4 24000000 		.4byte	.LFE20-.LFB20
 3118 00b8 00000000 		.4byte	.LFB21
 3119 00bc 28000000 		.4byte	.LFE21-.LFB21
 3120 00c0 00000000 		.4byte	.LFB22
 3121 00c4 20000000 		.4byte	.LFE22-.LFB22
 3122 00c8 00000000 		.4byte	.LFB23
 3123 00cc 50000000 		.4byte	.LFE23-.LFB23
 3124 00d0 00000000 		.4byte	.LFB24
 3125 00d4 40000000 		.4byte	.LFE24-.LFB24
 3126 00d8 00000000 		.4byte	.LFB25
 3127 00dc 58000000 		.4byte	.LFE25-.LFB25
 3128 00e0 00000000 		.4byte	.LFB26
 3129 00e4 02000000 		.4byte	.LFE26-.LFB26
 3130 00e8 00000000 		.4byte	0
 3131 00ec 00000000 		.4byte	0
 3132              		.section	.debug_ranges,"",%progbits
 3133              	.Ldebug_ranges0:
 3134 0000 00000000 		.4byte	.LFB1
 3135 0004 5C000000 		.4byte	.LFE1
 3136 0008 00000000 		.4byte	.LFB2
 3137 000c 50000000 		.4byte	.LFE2
 3138 0010 00000000 		.4byte	.LFB0
 3139 0014 1C000000 		.4byte	.LFE0
 3140 0018 00000000 		.4byte	.LFB3
 3141 001c 4C000000 		.4byte	.LFE3
 3142 0020 00000000 		.4byte	.LFB4
 3143 0024 04000000 		.4byte	.LFE4
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 84


 3144 0028 00000000 		.4byte	.LFB5
 3145 002c 02000000 		.4byte	.LFE5
 3146 0030 00000000 		.4byte	.LFB6
 3147 0034 0C000000 		.4byte	.LFE6
 3148 0038 00000000 		.4byte	.LFB7
 3149 003c 64000000 		.4byte	.LFE7
 3150 0040 00000000 		.4byte	.LFB8
 3151 0044 28000000 		.4byte	.LFE8
 3152 0048 00000000 		.4byte	.LFB9
 3153 004c 80000000 		.4byte	.LFE9
 3154 0050 00000000 		.4byte	.LFB10
 3155 0054 2C000000 		.4byte	.LFE10
 3156 0058 00000000 		.4byte	.LFB11
 3157 005c 6C000000 		.4byte	.LFE11
 3158 0060 00000000 		.4byte	.LFB12
 3159 0064 44000000 		.4byte	.LFE12
 3160 0068 00000000 		.4byte	.LFB13
 3161 006c 02000000 		.4byte	.LFE13
 3162 0070 00000000 		.4byte	.LFB14
 3163 0074 0C000000 		.4byte	.LFE14
 3164 0078 00000000 		.4byte	.LFB15
 3165 007c 0C000000 		.4byte	.LFE15
 3166 0080 00000000 		.4byte	.LFB16
 3167 0084 0C000000 		.4byte	.LFE16
 3168 0088 00000000 		.4byte	.LFB17
 3169 008c 60000000 		.4byte	.LFE17
 3170 0090 00000000 		.4byte	.LFB18
 3171 0094 0C000000 		.4byte	.LFE18
 3172 0098 00000000 		.4byte	.LFB19
 3173 009c 70000000 		.4byte	.LFE19
 3174 00a0 00000000 		.4byte	.LFB20
 3175 00a4 24000000 		.4byte	.LFE20
 3176 00a8 00000000 		.4byte	.LFB21
 3177 00ac 28000000 		.4byte	.LFE21
 3178 00b0 00000000 		.4byte	.LFB22
 3179 00b4 20000000 		.4byte	.LFE22
 3180 00b8 00000000 		.4byte	.LFB23
 3181 00bc 50000000 		.4byte	.LFE23
 3182 00c0 00000000 		.4byte	.LFB24
 3183 00c4 40000000 		.4byte	.LFE24
 3184 00c8 00000000 		.4byte	.LFB25
 3185 00cc 58000000 		.4byte	.LFE25
 3186 00d0 00000000 		.4byte	.LFB26
 3187 00d4 02000000 		.4byte	.LFE26
 3188 00d8 00000000 		.4byte	0
 3189 00dc 00000000 		.4byte	0
 3190              		.section	.debug_line,"",%progbits
 3191              	.Ldebug_line0:
 3192 0000 37030000 		.section	.debug_str,"MS",%progbits,1
 3192      02005F00 
 3192      00000201 
 3192      FB0E0D00 
 3192      01010101 
 3193              	.LASF10:
 3194 0000 75696E74 		.ascii	"uint16\000"
 3194      313600
 3195              	.LASF82:
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 85


 3196 0007 43794578 		.ascii	"CyExitCriticalSection\000"
 3196      69744372 
 3196      69746963 
 3196      616C5365 
 3196      6374696F 
 3197              	.LASF49:
 3198 001d 74784461 		.ascii	"txDataByte\000"
 3198      74614279 
 3198      746500
 3199              	.LASF71:
 3200 0028 55415254 		.ascii	"UART_txBufferWrite\000"
 3200      5F747842 
 3200      75666665 
 3200      72577269 
 3200      746500
 3201              	.LASF56:
 3202 003b 73747269 		.ascii	"string\000"
 3202      6E6700
 3203              	.LASF7:
 3204 0042 6C6F6E67 		.ascii	"long long unsigned int\000"
 3204      206C6F6E 
 3204      6720756E 
 3204      7369676E 
 3204      65642069 
 3205              	.LASF22:
 3206 0059 55415254 		.ascii	"UART_Start\000"
 3206      5F537461 
 3206      727400
 3207              	.LASF47:
 3208 0064 55415254 		.ascii	"UART_SetTxInterruptMode\000"
 3208      5F536574 
 3208      5478496E 
 3208      74657272 
 3208      7570744D 
 3209              	.LASF77:
 3210 007c 55415254 		.ascii	"UART_rxBufferOverflow\000"
 3210      5F727842 
 3210      75666665 
 3210      724F7665 
 3210      72666C6F 
 3211              	.LASF70:
 3212 0092 55415254 		.ascii	"UART_txBufferRead\000"
 3212      5F747842 
 3212      75666665 
 3212      72526561 
 3212      6400
 3213              	.LASF6:
 3214 00a4 6C6F6E67 		.ascii	"long long int\000"
 3214      206C6F6E 
 3214      6720696E 
 3214      7400
 3215              	.LASF0:
 3216 00b2 7369676E 		.ascii	"signed char\000"
 3216      65642063 
 3216      68617200 
 3217              	.LASF66:
 3218 00be 74785065 		.ascii	"txPeriod\000"
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 86


 3218      72696F64 
 3218      00
 3219              	.LASF4:
 3220 00c7 6C6F6E67 		.ascii	"long int\000"
 3220      20696E74 
 3220      00
 3221              	.LASF52:
 3222 00d0 55415254 		.ascii	"UART_PutChar\000"
 3222      5F507574 
 3222      43686172 
 3222      00
 3223              	.LASF32:
 3224 00dd 55415254 		.ascii	"UART_ReadRxData\000"
 3224      5F526561 
 3224      64527844 
 3224      61746100 
 3225              	.LASF9:
 3226 00ed 75696E74 		.ascii	"uint8\000"
 3226      3800
 3227              	.LASF50:
 3228 00f3 55415254 		.ascii	"UART_ReadControlRegister\000"
 3228      5F526561 
 3228      64436F6E 
 3228      74726F6C 
 3228      52656769 
 3229              	.LASF13:
 3230 010c 646F7562 		.ascii	"double\000"
 3230      6C6500
 3231              	.LASF43:
 3232 0113 61646472 		.ascii	"addressMode\000"
 3232      6573734D 
 3232      6F646500 
 3233              	.LASF75:
 3234 011f 55415254 		.ascii	"UART_rxBufferWrite\000"
 3234      5F727842 
 3234      75666665 
 3234      72577269 
 3234      746500
 3235              	.LASF11:
 3236 0132 75696E74 		.ascii	"uint32\000"
 3236      333200
 3237              	.LASF78:
 3238 0139 4379496E 		.ascii	"CyIntSetVector\000"
 3238      74536574 
 3238      56656374 
 3238      6F7200
 3239              	.LASF27:
 3240 0148 636F6E74 		.ascii	"control\000"
 3240      726F6C00 
 3241              	.LASF54:
 3242 0150 6C6F6354 		.ascii	"locTxBufferRead\000"
 3242      78427566 
 3242      66657252 
 3242      65616400 
 3243              	.LASF20:
 3244 0160 55415254 		.ascii	"UART_Init\000"
 3244      5F496E69 
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 87


 3244      7400
 3245              	.LASF69:
 3246 016a 55415254 		.ascii	"UART_txBuffer\000"
 3246      5F747842 
 3246      75666665 
 3246      7200
 3247              	.LASF64:
 3248 0178 7265744D 		.ascii	"retMode\000"
 3248      6F646500 
 3249              	.LASF37:
 3250 0180 55415254 		.ascii	"UART_GetByte\000"
 3250      5F476574 
 3250      42797465 
 3250      00
 3251              	.LASF8:
 3252 018d 756E7369 		.ascii	"unsigned int\000"
 3252      676E6564 
 3252      20696E74 
 3252      00
 3253              	.LASF62:
 3254 019a 55415254 		.ascii	"UART_ClearTxBuffer\000"
 3254      5F436C65 
 3254      61725478 
 3254      42756666 
 3254      657200
 3255              	.LASF60:
 3256 01ad 55415254 		.ascii	"UART_PutCRLF\000"
 3256      5F507574 
 3256      43524C46 
 3256      00
 3257              	.LASF38:
 3258 01ba 6C6F6345 		.ascii	"locErrorStatus\000"
 3258      72726F72 
 3258      53746174 
 3258      757300
 3259              	.LASF5:
 3260 01c9 6C6F6E67 		.ascii	"long unsigned int\000"
 3260      20756E73 
 3260      69676E65 
 3260      6420696E 
 3260      7400
 3261              	.LASF53:
 3262 01db 6C6F6354 		.ascii	"locTxBufferWrite\000"
 3262      78427566 
 3262      66657257 
 3262      72697465 
 3262      00
 3263              	.LASF58:
 3264 01ec 55415254 		.ascii	"UART_PutArray\000"
 3264      5F507574 
 3264      41727261 
 3264      7900
 3265              	.LASF80:
 3266 01fa 4379456E 		.ascii	"CyEnterCriticalSection\000"
 3266      74657243 
 3266      72697469 
 3266      63616C53 
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 88


 3266      65637469 
 3267              	.LASF76:
 3268 0211 55415254 		.ascii	"UART_rxBufferLoopDetect\000"
 3268      5F727842 
 3268      75666665 
 3268      724C6F6F 
 3268      70446574 
 3269              	.LASF40:
 3270 0229 73697A65 		.ascii	"size\000"
 3270      00
 3271              	.LASF3:
 3272 022e 73686F72 		.ascii	"short unsigned int\000"
 3272      7420756E 
 3272      7369676E 
 3272      65642069 
 3272      6E7400
 3273              	.LASF74:
 3274 0241 55415254 		.ascii	"UART_rxBufferRead\000"
 3274      5F727842 
 3274      75666665 
 3274      72526561 
 3274      6400
 3275              	.LASF57:
 3276 0253 62756649 		.ascii	"bufIndex\000"
 3276      6E646578 
 3276      00
 3277              	.LASF28:
 3278 025c 696E7453 		.ascii	"intSrc\000"
 3278      726300
 3279              	.LASF67:
 3280 0263 55415254 		.ascii	"UART_SetTxAddressMode\000"
 3280      5F536574 
 3280      54784164 
 3280      64726573 
 3280      734D6F64 
 3281              	.LASF51:
 3282 0279 55415254 		.ascii	"UART_ReadTxStatus\000"
 3282      5F526561 
 3282      64547853 
 3282      74617475 
 3282      7300
 3283              	.LASF81:
 3284 028b 55415254 		.ascii	"UART_IntClock_Start\000"
 3284      5F496E74 
 3284      436C6F63 
 3284      6B5F5374 
 3284      61727400 
 3285              	.LASF17:
 3286 029f 72656733 		.ascii	"reg32\000"
 3286      3200
 3287              	.LASF65:
 3288 02a5 746D7053 		.ascii	"tmpStat\000"
 3288      74617400 
 3289              	.LASF19:
 3290 02ad 73697A65 		.ascii	"sizetype\000"
 3290      74797065 
 3290      00
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 89


 3291              	.LASF18:
 3292 02b6 6C6F6E67 		.ascii	"long double\000"
 3292      20646F75 
 3292      626C6500 
 3293              	.LASF45:
 3294 02c2 61646472 		.ascii	"address\000"
 3294      65737300 
 3295              	.LASF44:
 3296 02ca 55415254 		.ascii	"UART_SetRxAddress1\000"
 3296      5F536574 
 3296      52784164 
 3296      64726573 
 3296      733100
 3297              	.LASF46:
 3298 02dd 55415254 		.ascii	"UART_SetRxAddress2\000"
 3298      5F536574 
 3298      52784164 
 3298      64726573 
 3298      733200
 3299              	.LASF31:
 3300 02f0 6C6F6352 		.ascii	"locRxBufferWrite\000"
 3300      78427566 
 3300      66657257 
 3300      72697465 
 3300      00
 3301              	.LASF36:
 3302 0301 72785374 		.ascii	"rxStatus\000"
 3302      61747573 
 3302      00
 3303              	.LASF83:
 3304 030a 55415254 		.ascii	"UART_IntClock_Stop\000"
 3304      5F496E74 
 3304      436C6F63 
 3304      6B5F5374 
 3304      6F7000
 3305              	.LASF79:
 3306 031d 4379496E 		.ascii	"CyIntSetPriority\000"
 3306      74536574 
 3306      5072696F 
 3306      72697479 
 3306      00
 3307              	.LASF72:
 3308 032e 55415254 		.ascii	"UART_errorStatus\000"
 3308      5F657272 
 3308      6F725374 
 3308      61747573 
 3308      00
 3309              	.LASF85:
 3310 033f 47656E65 		.ascii	"Generated_Source\\PSoC5\\UART.c\000"
 3310      72617465 
 3310      645F536F 
 3310      75726365 
 3310      5C50536F 
 3311              	.LASF61:
 3312 035d 55415254 		.ascii	"UART_GetTxBufferSize\000"
 3312      5F476574 
 3312      54784275 
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 90


 3312      66666572 
 3312      53697A65 
 3313              	.LASF86:
 3314 0372 433A5C55 		.ascii	"C:\\Users\\slavi\\Documents\\PSoC Creator\\CourseWo"
 3314      73657273 
 3314      5C736C61 
 3314      76695C44 
 3314      6F63756D 
 3315 03a0 726B5F4D 		.ascii	"rk_Mentukh\\Design01.cydsn\000"
 3315      656E7475 
 3315      6B685C44 
 3315      65736967 
 3315      6E30312E 
 3316              	.LASF16:
 3317 03ba 72656738 		.ascii	"reg8\000"
 3317      00
 3318              	.LASF42:
 3319 03bf 55415254 		.ascii	"UART_SetRxAddressMode\000"
 3319      5F536574 
 3319      52784164 
 3319      64726573 
 3319      734D6F64 
 3320              	.LASF1:
 3321 03d5 756E7369 		.ascii	"unsigned char\000"
 3321      676E6564 
 3321      20636861 
 3321      7200
 3322              	.LASF48:
 3323 03e3 55415254 		.ascii	"UART_WriteTxData\000"
 3323      5F577269 
 3323      74655478 
 3323      44617461 
 3323      00
 3324              	.LASF2:
 3325 03f4 73686F72 		.ascii	"short int\000"
 3325      7420696E 
 3325      7400
 3326              	.LASF63:
 3327 03fe 55415254 		.ascii	"UART_SendBreak\000"
 3327      5F53656E 
 3327      64427265 
 3327      616B00
 3328              	.LASF84:
 3329 040d 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3329      43313120 
 3329      352E342E 
 3329      31203230 
 3329      31363036 
 3330 0440 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3330      20726576 
 3330      6973696F 
 3330      6E203233 
 3330      37373135 
 3331 0473 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 3331      66756E63 
 3331      74696F6E 
 3331      2D736563 
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 91


 3331      74696F6E 
 3332              	.LASF59:
 3333 049b 62797465 		.ascii	"byteCount\000"
 3333      436F756E 
 3333      7400
 3334              	.LASF29:
 3335 04a5 72784461 		.ascii	"rxData\000"
 3335      746100
 3336              	.LASF21:
 3337 04ac 55415254 		.ascii	"UART_Enable\000"
 3337      5F456E61 
 3337      626C6500 
 3338              	.LASF33:
 3339 04b8 55415254 		.ascii	"UART_ReadRxStatus\000"
 3339      5F526561 
 3339      64527853 
 3339      74617475 
 3339      7300
 3340              	.LASF15:
 3341 04ca 63686172 		.ascii	"char\000"
 3341      00
 3342              	.LASF14:
 3343 04cf 63686172 		.ascii	"char8\000"
 3343      3800
 3344              	.LASF26:
 3345 04d5 55415254 		.ascii	"UART_SetRxInterruptMode\000"
 3345      5F536574 
 3345      5278496E 
 3345      74657272 
 3345      7570744D 
 3346              	.LASF35:
 3347 04ed 55415254 		.ascii	"UART_GetChar\000"
 3347      5F476574 
 3347      43686172 
 3347      00
 3348              	.LASF30:
 3349 04fa 6C6F6352 		.ascii	"locRxBufferRead\000"
 3349      78427566 
 3349      66657252 
 3349      65616400 
 3350              	.LASF24:
 3351 050a 656E6162 		.ascii	"enableInterrupts\000"
 3351      6C65496E 
 3351      74657272 
 3351      75707473 
 3351      00
 3352              	.LASF68:
 3353 051b 55415254 		.ascii	"UART_initVar\000"
 3353      5F696E69 
 3353      74566172 
 3353      00
 3354              	.LASF39:
 3355 0528 55415254 		.ascii	"UART_GetRxBufferSize\000"
 3355      5F476574 
 3355      52784275 
 3355      66666572 
 3355      53697A65 
ARM GAS  C:\Users\slavi\AppData\Local\Temp\cc7cnafd.s 			page 92


 3356              	.LASF34:
 3357 053d 73746174 		.ascii	"status\000"
 3357      757300
 3358              	.LASF23:
 3359 0544 55415254 		.ascii	"UART_Stop\000"
 3359      5F53746F 
 3359      7000
 3360              	.LASF73:
 3361 054e 55415254 		.ascii	"UART_rxBuffer\000"
 3361      5F727842 
 3361      75666665 
 3361      7200
 3362              	.LASF12:
 3363 055c 666C6F61 		.ascii	"float\000"
 3363      7400
 3364              	.LASF55:
 3365 0562 55415254 		.ascii	"UART_PutString\000"
 3365      5F507574 
 3365      53747269 
 3365      6E6700
 3366              	.LASF25:
 3367 0571 55415254 		.ascii	"UART_WriteControlRegister\000"
 3367      5F577269 
 3367      7465436F 
 3367      6E74726F 
 3367      6C526567 
 3368              	.LASF41:
 3369 058b 55415254 		.ascii	"UART_ClearRxBuffer\000"
 3369      5F436C65 
 3369      61725278 
 3369      42756666 
 3369      657200
 3370              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
